{
  "stats": {
    "suites": 2,
    "tests": 497,
    "passes": 349,
    "pending": 0,
    "failures": 148,
    "start": "2023-01-09T23:29:43.256Z",
    "end": "2023-01-10T01:09:30.604Z",
    "duration": 5987348,
    "testsRegistered": 497,
    "passPercent": 70.22132796780684,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b12a79ba-9af4-4e3b-a508-9ec9bd11b63c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f625adeb-18fb-4146-8388-269591d6a9bb",
          "title": "click test",
          "fullFile": "/usr/src/app/test/click-test.js",
          "file": "/test/click-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld javascript -> keung_2022 -> 0",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 8960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc5870ac-5ec7-4f4e-bf4c-696292c86582",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 1",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 8538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "30fb50aa-ca88-4d2d-a02f-138a2822775e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 2",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 7533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93e6b3f2-8b45-4217-8d35-2a2f136d6010",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 3",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 8081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5bc68ed1-764c-47f1-b77c-354641c279a0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 4",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 7979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "63c36618-f515-4402-bd94-0a17d403c814",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 5",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 7348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "faa8c4cf-2a4d-4f37-b4ef-0f56e92b29a1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 6",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 8046,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "69d9dc38-7adf-450f-a707-4a6c707f998d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 7",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 8350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d360647-c67f-403f-8ed6-d3c12ede4965",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 8",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 7804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c197cd70-c7d3-49aa-be87-89c6a7399f50",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 9",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 7833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07e2cb19-681b-4245-9a7a-6d3a7bb8ce40",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 10",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 7946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e5c643f8-9951-481e-b378-1fa2ed987d61",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 11",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 7970,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d60c7952-63a9-4fcc-8f6e-09bd881e55a5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 12",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 7715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b995261-e288-462b-bfd9-26b2bfbd6e9c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 13",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 7994,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "594afa2c-778d-49e6-9458-e6ee4101729e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 14",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 14",
              "timedOut": false,
              "duration": 7550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5b445223-0aea-435f-b7c6-6af4edf4cf9a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 15",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 15",
              "timedOut": false,
              "duration": 8155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2e5cbef2-48b0-41cf-9b34-eb557e67b303",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 16",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 16",
              "timedOut": false,
              "duration": 7890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "010a1bb1-52be-4001-9906-7a466caf023e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 0",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 0",
              "timedOut": false,
              "duration": 8147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db23112e-0ac4-410b-83a2-0a161f30f5a9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 1",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 1",
              "timedOut": false,
              "duration": 8176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5ea1c781-a204-47b2-b5df-9cb9af211ffb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 2",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 2",
              "timedOut": false,
              "duration": 8542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c5695d38-810b-4569-bbda-2f17309d4632",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 3",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 3",
              "timedOut": false,
              "duration": 7793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9dc16f57-ee41-430a-9758-ea180fbe7249",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 0",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 8046,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7773d084-5e9c-4528-a127-93eaa5c40575",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 1",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 8164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "735532c9-8fda-4265-88fd-13699a3744f5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 2",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 7569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "10ce8a89-4f5b-42df-a6f0-05f90d99a680",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 3",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 7894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4f89d2c5-7455-47ec-aed4-0a383df74066",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 4",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 7611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "49a4e3cb-802a-4d20-97de-e761842687f0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 7984,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52585adc-ffcf-4bc1-aad6-df603c7b083b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 8563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9aa162bf-6554-4af2-9500-c2a1a1b6ec2d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 7821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52fae896-163b-4981-8425-8b26b6bb4ecd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 7362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee7dba9e-1b29-4a3f-89e2-d40f3681e3d3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 7581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0f2a5a2-ddd4-45de-bbbc-a801a21b680a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 8378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "13611203-98ab-4a8e-8eb7-af4423ea4183",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 7600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2d480c18-c930-400e-a669-82eae153fc7b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 7456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "92fc077a-e5bb-4127-9e36-25b0e0d00f6c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 8350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d1efbba9-79ba-4311-a48d-798b4ebeabd4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 7958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "43ce3469-c839-4588-81f3-e2ac64d3ba82",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 8145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b6814b5-2c14-4762-934b-2588df8e4cb3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 7979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e100b9af-7605-4b03-b586-7704782856e3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 8083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a25b04b4-d1a9-4d5d-882d-445e2940f127",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 7928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4857c915-a1f9-46c8-9eb6-c7164b31bf68",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 7340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "843bec63-6759-40ec-94b6-27f5b2a62360",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 7912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1dde2373-b4c3-4315-a455-9f10dabbf04b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 7805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9c09a957-edc6-44d1-bd54-56fe18fe865a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 8855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b85cea7-8eb6-4b4d-9019-13ec6574192e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 9262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "195bac03-bc0d-4ff0-8037-9524fcee4b0b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 8203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "161a1860-709f-4296-b4f0-93ccd3f18081",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 7647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "783eadbf-34b0-46d3-b7d8-ac9c9b836bbb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 8192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0b6fa444-07a0-4537-9f78-9691a9498679",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 7849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4cb69e60-2bf3-4df2-ae9f-982de82c19c6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 8062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9fd966c-8ebf-46c8-8c03-e8996bbf86a1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 13",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 13",
              "timedOut": false,
              "duration": 7980,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "01e0b994-a866-4a43-926c-2307deae9d22",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 14",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 14",
              "timedOut": false,
              "duration": 7619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "27fd7a4e-252c-48be-a071-8250b6612824",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 0",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 8365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1bac6b63-2dea-4102-869e-96196c827b77",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 1",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 7743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "49f9312f-279f-45d3-b101-a7f79c82dd1a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 2",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 7665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5a6f3a72-8866-43c4-b092-4a24bf244618",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 8060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f02409c-de47-441a-9673-23f2c3c2f072",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 7680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4ef0eb57-5926-49a5-a5fa-1787ffe42cb4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 7670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71f9c1c6-1cd8-42b9-94d0-ef9370ecabb7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 7778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5ae98a48-0e74-40eb-8c8f-36d7a57fe118",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 7529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b804464f-e290-498e-9ceb-19e3300fb080",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 7571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a066e56-9c60-486b-9382-3abb21bf485a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 7845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9af0158-a626-412a-a835-892b26fdedc6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 7581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a5616a44-2a84-4715-aafe-2922909f6a58",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 8292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d8fd910-ba7b-45a6-87c8-da3936312fcd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 8282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "da913962-03a2-47fb-8976-ccc3a223234c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 8533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fe0b95ac-ad13-4791-aa0e-bf2e6bb45064",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 7583,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "20d221ad-b2da-4af3-9032-9052fa0db33f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 7991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "743df176-30c5-41e1-9c07-ffb854562c61",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 7556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f57b9190-c1cc-4aa3-aed2-5c1a372dc681",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 8052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5836a3f0-3c3b-4bcf-a321-17748ec047a9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 7919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a35018fc-2b9f-42aa-b2a7-be53f6a9581a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 7869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9e681282-d9a4-4a1c-8ac7-c26d83bcb319",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 7541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa6fd248-5ee4-4097-9bb2-417d5325479e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 8251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "310ae9fd-50e7-4cdf-af78-4ee0376d0dc3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 0",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 7721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78c169d4-208f-4c63-b9ab-3c7fb59af16d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 1",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 7999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "47efe1e9-535c-41fd-b81a-ef04f4cf6db5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 2",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 7678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cf4404df-b93e-4131-a7da-8f9f63a60a88",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 3",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 7929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "85615d75-0b68-47cd-87a8-ff4992787483",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 4",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 8617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1025ceaa-df2a-47c5-b153-1e7f96c2e73e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 5",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 8192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "40938251-455f-4f95-a5aa-a1a1a0880ee0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 6",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 9028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7e55cc1a-d859-4706-86ca-0483dc80488e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 7",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 11932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee153a8d-cdaf-4b13-ac05-1ef4bf22b824",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 0",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 12014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "82ff5397-3786-49da-bcce-47209c4cd5c0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 1",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 8081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4f5ea330-6d18-4958-bed3-fc19354d784c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 2",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 8121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ae2d342e-c78a-49bf-a970-4a7294beaa7d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 3",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 8071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be154dbf-8f6e-4a48-a2c7-1f9218189016",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 4",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 7705,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "411ffbca-eb25-42aa-b4c6-730da929540b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 5",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 7913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60d51644-3fe8-4bf4-81a7-59d9101d4f2a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 6",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": null,
                "estack": null,
                "diff": null
              },
              "uuid": "12c826f0-c076-4a20-aefe-1ced2165c68e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 7",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 7949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4e242e15-efc9-4653-93b3-e844fe529224",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 8",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 7614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f330f496-8004-4c9e-8617-f7197db6273c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 9",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 7740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5bf45cdb-ffaf-4386-8739-77ce84bbd488",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 10",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 7770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c679f7f9-42d6-4e1c-a5fc-f25d4602ce57",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 11",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 7763,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c37eb2bb-b7b4-4451-9eda-5e27fcd6a378",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 12",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 12",
              "timedOut": false,
              "duration": 7721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c6202c23-8066-4f11-885e-6d13f7ca605e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 13",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 13",
              "timedOut": false,
              "duration": 7826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72f22dde-1985-44b0-a79b-8ce5c40cc6e0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 14",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 14",
              "timedOut": false,
              "duration": 8335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "abba8f5c-aac5-404b-aa21-2ed4b4ec9100",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 15",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 15",
              "timedOut": false,
              "duration": 7615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd25d6db-81b6-4c04-99da-43bf8652eb18",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 16",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 16",
              "timedOut": false,
              "duration": 8095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1327da6b-29f5-49c7-8c76-74c7c51329c1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 0",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 7955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bf9c2d5e-40bc-479c-b4e8-aed0f65b0e21",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 1",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 7963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d2e5fbd-7309-49af-81d0-9884066f391f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 2",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 7868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71737f1e-7313-4acb-9728-fe313b5faa7c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 3",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 7614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "824c4fae-0a20-468b-af28-d1e56258b702",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 4",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 7465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7b350bfb-bddc-4aee-a028-d24a6e7695a2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 5",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 7493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3c2c98d3-b36a-4207-a454-0618a02294ad",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 6",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 7510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4383dd0a-8dd2-443a-97d9-ed9809fbca02",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 7",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 7896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9dfb4cf3-c9ca-42bf-a62e-29c22d867ff7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 8",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 7900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5bf6bf12-5baf-4414-a666-315b1fdfdd78",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 0",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 0",
              "timedOut": false,
              "duration": 8449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f672296c-dbef-46ac-8e99-e007ea24fcc5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 1",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 1",
              "timedOut": false,
              "duration": 7706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "148d2ba3-48b5-4a4c-a6fb-a9da5f62c00c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 2",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 2",
              "timedOut": false,
              "duration": 7722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0b0db33d-4090-4078-94d9-9ccfbe6c1155",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 3",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 3",
              "timedOut": false,
              "duration": 8078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "35031b41-9769-4efc-9a34-75a7e3aacc16",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 4",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 4",
              "timedOut": false,
              "duration": 7649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9b709169-e8a3-4bfd-9111-7337fbcdbb72",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 5",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 5",
              "timedOut": false,
              "duration": 7900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a77456f-b98d-4b6b-9d18-f01e1ae36fe4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 6",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 6",
              "timedOut": false,
              "duration": 7553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9c4919c9-3f13-423b-bd9e-9981d6801191",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 7",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 7",
              "timedOut": false,
              "duration": 8305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a1adc38-3520-4e6b-ad8c-f754d92d490b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 8",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 8",
              "timedOut": false,
              "duration": 7695,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb0a6082-3367-4bde-b292-91ecb3e043d5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 9",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 9",
              "timedOut": false,
              "duration": 8014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8be7d73e-2187-4d7e-8773-303d4233999d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 10",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 10",
              "timedOut": false,
              "duration": 7757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3fa13b1e-2084-496e-b960-2cb0cb3e5647",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 11",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 11",
              "timedOut": false,
              "duration": 7787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "63ce94ce-21f9-4208-ba20-dec61a5ad749",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 12",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 12",
              "timedOut": false,
              "duration": 7932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9601d044-2297-4446-9169-28757f7c5571",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 13",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 13",
              "timedOut": false,
              "duration": 8979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f424c4f4-b6c9-45e9-977c-638e94475010",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 14",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 14",
              "timedOut": false,
              "duration": 7876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "55f2ec3c-f913-4525-b76a-a43b0fc31fc2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 0",
              "fullTitle": "click test helloworld python -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 15449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f05f4549-98a8-4027-b4a3-176c1df77130",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 1",
              "fullTitle": "click test helloworld python -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 15152,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e57a9b5b-306e-4815-98ba-8f47d8cf5063",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 2",
              "fullTitle": "click test helloworld python -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 15781,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9e33067b-9a61-4fde-ace3-d09bea3f8d2d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 3",
              "fullTitle": "click test helloworld python -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 15236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e4fc9203-cb03-41b9-8e68-db3342e6930b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 4",
              "fullTitle": "click test helloworld python -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 15703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "7f6525da-1fe0-419c-b47e-833d7efb5371",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 5",
              "fullTitle": "click test helloworld python -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 15358,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a068f7ba-e416-4105-9df4-0c43acf9e6fe",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 6",
              "fullTitle": "click test helloworld python -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 15764,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b8f536b0-6a31-4572-a56e-614a9abb3ecf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 7",
              "fullTitle": "click test helloworld python -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 15428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "965e254b-a51a-4784-a062-2bc0ff37ebd2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 0",
              "fullTitle": "click test helloworld python -> memegod420 -> 0",
              "timedOut": false,
              "duration": 9364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d67c00ca-76da-4620-a202-3e9518bc4610",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 1",
              "fullTitle": "click test helloworld python -> memegod420 -> 1",
              "timedOut": false,
              "duration": 10168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f0f0385e-7abb-4810-ad45-ee5be77363b2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 2",
              "fullTitle": "click test helloworld python -> memegod420 -> 2",
              "timedOut": false,
              "duration": 8416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6fe77af1-7427-4c8b-8ec0-0fc1678c8971",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 0",
              "fullTitle": "click test helloworld python -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22921,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1e492196-851a-45cf-a20a-79c28ec99c30",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 1",
              "fullTitle": "click test helloworld python -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 22472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6438439b-c0fb-43e5-9ff5-1cff25763d7e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 2",
              "fullTitle": "click test helloworld python -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22696,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "65d909ba-37a0-4405-99e7-20720330bcfc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 3",
              "fullTitle": "click test helloworld python -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 26770,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f118eedd-7eb1-4009-b9d9-8ec5674f7ccd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 4",
              "fullTitle": "click test helloworld python -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 22862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d86cc089-7230-42bc-a83d-14f3c18792d0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 5",
              "fullTitle": "click test helloworld python -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 22396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "994eee5e-6102-4dae-8eb4-ee5b0daa2850",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 6",
              "fullTitle": "click test helloworld python -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 22682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "53c10823-5846-474b-a092-f87fed6a30fa",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 7",
              "fullTitle": "click test helloworld python -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 23307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "68e67b83-4fb6-4022-b501-291d755ebe2f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 8",
              "fullTitle": "click test helloworld python -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 22714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5eb5e487-ddda-460c-8fee-4c85ddadffca",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 9",
              "fullTitle": "click test helloworld python -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 23915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "1c44f8a2-749c-48a1-aad1-9207285f1a49",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 10",
              "fullTitle": "click test helloworld python -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 25836,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1c053b9d-bcd6-4c50-b408-396dc0d4647a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 11",
              "fullTitle": "click test helloworld python -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 23160,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d7870095-a2e6-4535-a54b-dfb5974d449c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 12",
              "fullTitle": "click test helloworld python -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 23100,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "7a423289-8e9c-4967-a5fd-1a99094dc4b2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 13",
              "fullTitle": "click test helloworld python -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 22963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "400bd8c5-ee59-42a6-9e86-beef28021ce3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bc23b838-a1eb-455c-bb3d-79f71192bcc0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 9748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b0694959-3f6e-4a9c-886c-2400e75fa99c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 10216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "56e0fdc4-752b-4602-baa2-37f4f3cc2cbb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 9755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f0229311-bad1-4591-b7b8-26478cfc1e75",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 9207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9879ed6e-2670-4699-a9fd-92fc6d041a76",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "05e93944-2fe3-4ceb-b24e-734f95fba94d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a18be850-b846-4977-8057-c3b394d66af1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 9205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a0d3508-e7b9-4db3-afef-7156d4ec09a6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 9604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4e5d9910-e5f6-4717-a4be-403c0afe2f84",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 8184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28ef5746-3778-4716-9f63-745f89a0841c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 10653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "169efdf7-f2d0-462e-a5ce-d0f0ff658a6c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 0",
              "fullTitle": "click test helloworld python -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 8418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "77f0b06f-af38-4622-b6b7-62afb868c236",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 1",
              "fullTitle": "click test helloworld python -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 11122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1ab139b3-ae84-4f45-a842-05d49ac7410f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 2",
              "fullTitle": "click test helloworld python -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 9485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3efbd6ec-07f0-4c4b-87c3-38ec3629f780",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 3",
              "fullTitle": "click test helloworld python -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 9944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1a4078d6-6a98-4fe5-a00f-b6144f59fed3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 4",
              "fullTitle": "click test helloworld python -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 10977,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "207b6964-e22c-4674-a1ad-0c11f89aec32",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 5",
              "fullTitle": "click test helloworld python -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 10656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7069616c-8b44-4069-8060-67cba0a3edf5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 6",
              "fullTitle": "click test helloworld python -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 9888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "425ba00a-5333-4c68-a6a8-df32343a4eae",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 7",
              "fullTitle": "click test helloworld python -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 9803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c3bf57f1-3fa8-4cc1-921a-ad1ee5ce115c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 8",
              "fullTitle": "click test helloworld python -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 10466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "51a89fd9-3d6d-4086-9d80-01fd38628dae",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 9",
              "fullTitle": "click test helloworld python -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 9107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07d6f779-2e68-4d8e-b49a-717fa03f178d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 10",
              "fullTitle": "click test helloworld python -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 8937,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b1d9bb6b-1eeb-4fc5-b94f-8166adaca9ea",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 11",
              "fullTitle": "click test helloworld python -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 9990,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d43bdcd2-084f-4ea8-a0a5-35642b54bc09",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 12",
              "fullTitle": "click test helloworld python -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 10526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "03b64cb6-e144-42b4-a722-da2a2eed3d65",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 13",
              "fullTitle": "click test helloworld python -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 9725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "14f0d149-7209-4a1a-a10d-e4aa0b1fb798",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 14",
              "fullTitle": "click test helloworld python -> codemyhomework -> 14",
              "timedOut": false,
              "duration": 9542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8145b7cd-0e02-4460-9ecd-b43deb0ca1d1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 23549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e956b316-606d-44b0-9877-42b807ab9762",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 23213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "37a48e33-04f0-4ea6-bcbc-eeed16e7d876",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 23664,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "be4a013d-b876-4d58-98ba-b830f3dbe2aa",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 23477,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "2bde11b0-274b-42d7-b0f4-6d52c8fc1792",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 24182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "ea8e5226-ac79-4c09-a03b-bedae1dd7f5d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 26111,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "55b37fe3-81e5-451c-93e6-309a83a5dfd1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 22830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "be3ad2f6-d809-4393-add8-ab49b471ac25",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 23552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fd117bd9-22e0-4576-b568-292e52664fd0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 23960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "03f34d66-3e7f-4b98-a4e2-3b383b63f332",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 15323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2e90e714-ce65-4349-9d3c-2e90741aebdf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 15477,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c7f8e11c-373c-459d-97d6-b4b2bdf43b32",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 15801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "21e13468-1ae3-4acd-932a-1472089112f1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 17781,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "bdd3e27f-01c2-4bcf-91d5-fda725a824ff",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 15831,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9d5c0b80-f54d-4bd5-86a6-4cabeb523a0e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 19177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1265d0d6-2adf-4d9a-b69b-a9e7d0629d7e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 14846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b33301da-b9c5-4b71-86a0-a2085d828ce5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 0",
              "fullTitle": "click test helloworld python -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 10328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ecf757c-b85d-4648-990f-d6b7fa35c355",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 1",
              "fullTitle": "click test helloworld python -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 10195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "94eaa15f-b920-4ae3-990a-95b05dfe9949",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 2",
              "fullTitle": "click test helloworld python -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 10668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b241b55e-f1ec-49e1-882d-fc8180c3b962",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 3",
              "fullTitle": "click test helloworld python -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 9111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d27c10cb-f7b0-42ff-8970-8b2e4fe37f5d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 4",
              "fullTitle": "click test helloworld python -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 7653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ffb18f7f-a426-4948-bc94-9d101fce7dfa",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 5",
              "fullTitle": "click test helloworld python -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 12390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c6cedb01-f4e4-4e46-a834-b1a9c02aaa95",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 6",
              "fullTitle": "click test helloworld python -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 9204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b363e799-0943-4b45-815a-c10e007ac502",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 7",
              "fullTitle": "click test helloworld python -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 9933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8442f256-bead-4210-9b0a-60b4df53be7c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 8",
              "fullTitle": "click test helloworld python -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 9311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "caa876aa-3774-4f70-8653-ea2ec31a0fcb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 9",
              "fullTitle": "click test helloworld python -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 9769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71cd14c3-eedb-48a1-b0b1-0a079ce1bb16",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 10",
              "fullTitle": "click test helloworld python -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 9819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1390eb3b-29ca-4534-88cb-dec98704add1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 11",
              "fullTitle": "click test helloworld python -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 10645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be011570-a459-4dea-96b8-2ac2cb6fbafb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 0",
              "fullTitle": "click test helloworld python -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 15836,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "34ed4102-20f1-4382-82b3-9b0a11f8ce92",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 1",
              "fullTitle": "click test helloworld python -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 16387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "920afc83-eb1c-4e64-a211-3f4e8126ff3c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 2",
              "fullTitle": "click test helloworld python -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 16230,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a8a59c25-fc47-4916-b23a-f92183d5fbcb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 3",
              "fullTitle": "click test helloworld python -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 15808,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d3cba0da-4ab0-4806-b971-cf1a4abf2ec6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 4",
              "fullTitle": "click test helloworld python -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 16250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e1de1e98-0c29-4736-9c4e-1ea83520bab2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 5",
              "fullTitle": "click test helloworld python -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 15922,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "accce665-7461-4be4-a606-dec287bdfc3c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 6",
              "fullTitle": "click test helloworld python -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 15730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "af1d91db-1568-4d63-97d8-68f5776900a6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 7",
              "fullTitle": "click test helloworld python -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 15852,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a16b0360-1d2a-4324-873d-8ef9f0380809",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 8",
              "fullTitle": "click test helloworld python -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 15375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "67a52b27-eb44-4e51-b9df-ec3beea3eda9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 0",
              "fullTitle": "click test helloworld python -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 9249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b56fad7-4445-45ea-b502-dab8c4a5b0d2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 1",
              "fullTitle": "click test helloworld python -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 9972,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7cab8ff1-cdcb-4852-9052-bff28595db7b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 2",
              "fullTitle": "click test helloworld python -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 9325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c992e255-cf0d-41c7-9bdb-b77e58ed795d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 3",
              "fullTitle": "click test helloworld python -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 10311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ea8482cd-d4b7-477a-93eb-0ba89a2908e7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 4",
              "fullTitle": "click test helloworld python -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 9604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "baf4a156-5a23-4720-9c2e-d5dccef9b109",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 5",
              "fullTitle": "click test helloworld python -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 9167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "006fc406-cd35-4d8a-9072-718995e280d4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 6",
              "fullTitle": "click test helloworld python -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 10112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8d17ae69-ff32-4921-b964-37a675cb725f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 7",
              "fullTitle": "click test helloworld python -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 10138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "38f7edc4-5305-4212-80e4-b71e69ec6cc1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 8",
              "fullTitle": "click test helloworld python -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 9620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "235f3fc7-f675-4e82-9077-897ca1c955b6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 9",
              "fullTitle": "click test helloworld python -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 9753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a567a7f2-3f34-41e3-901f-e82fb05962bd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 10",
              "fullTitle": "click test helloworld python -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 11735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "213c59ae-ce72-482f-beca-b74a229e6106",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 0",
              "fullTitle": "click test helloworld python -> hopeubest -> 0",
              "timedOut": false,
              "duration": 10215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "40eb8e96-b363-415d-b4bb-e3ac10bb2712",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 1",
              "fullTitle": "click test helloworld python -> hopeubest -> 1",
              "timedOut": false,
              "duration": 10179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "271347c6-a5ed-4535-8d45-c52832d791b7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 2",
              "fullTitle": "click test helloworld python -> hopeubest -> 2",
              "timedOut": false,
              "duration": 8647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "56d90e9c-2550-47b1-95c5-76148233061d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 3",
              "fullTitle": "click test helloworld python -> hopeubest -> 3",
              "timedOut": false,
              "duration": 10717,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8fab5ff4-ffe3-42cf-bd55-e7d78b674a0f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 4",
              "fullTitle": "click test helloworld python -> hopeubest -> 4",
              "timedOut": false,
              "duration": 9038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cac7988b-db70-425c-b78f-cc934889a09e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 5",
              "fullTitle": "click test helloworld python -> hopeubest -> 5",
              "timedOut": false,
              "duration": 9566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "24e68880-e91e-4b87-9545-e73ab99f4f1f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 6",
              "fullTitle": "click test helloworld python -> hopeubest -> 6",
              "timedOut": false,
              "duration": 10256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2bea7f62-1a16-40ca-a65d-cf76b884a414",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 7",
              "fullTitle": "click test helloworld python -> hopeubest -> 7",
              "timedOut": false,
              "duration": 9081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "50901abc-aa46-4bc4-92f1-27d419b0eab0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 8",
              "fullTitle": "click test helloworld python -> hopeubest -> 8",
              "timedOut": false,
              "duration": 8822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a1df232f-8334-4df3-941c-152bba328c83",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 9",
              "fullTitle": "click test helloworld python -> hopeubest -> 9",
              "timedOut": false,
              "duration": 9465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "13a6f59c-b1ff-4bcb-9683-697c8c5c3b6f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 10",
              "fullTitle": "click test helloworld python -> hopeubest -> 10",
              "timedOut": false,
              "duration": 9732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "481ce12c-963f-49e3-98c6-491ef1156041",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 0",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 9651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2467e7f2-ef03-4140-b2b2-1d878c65eff6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 1",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 9425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cf718ee3-ff1f-4c4f-ba1d-a58be834bcf8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 2",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 10082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a404cd4-dedd-4e38-b3d6-36050617bca9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 3",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 11290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c724303a-8479-4489-b6ad-3dc9dea38426",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 4",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 11233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "127f4964-dacd-4037-86b9-7ab76139689e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 5",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 9718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c084b4b9-c494-4f4a-8a90-5877e2f3c1aa",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 6",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 9227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a6f01ce0-0eec-4619-a0be-7cdb804983a8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 7",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 9597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aae6c2c7-176c-4002-8c7c-899f85aec1d5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 8",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 9665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "de8a7081-cd86-491f-91ce-98d56223bb89",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 9",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 9508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91e89d25-d3cf-4857-9ef1-7d362095802e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 10",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 9738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "896790b7-8fd4-4af8-8c22-03f7d70f8f7a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 11",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 9767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "45cc62bb-17f8-41b4-a058-c37effec256f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 0",
              "fullTitle": "click test helloworld coding -> memegod420 -> 0",
              "timedOut": false,
              "duration": 9182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d807529-42cb-464c-9317-d90ebf7b0fa3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 1",
              "fullTitle": "click test helloworld coding -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c150acb1-a9f1-4244-8117-e9040726d10d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 2",
              "fullTitle": "click test helloworld coding -> memegod420 -> 2",
              "timedOut": false,
              "duration": 9909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7b0fde2d-d761-4243-99c7-2757f06a8aee",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 3",
              "fullTitle": "click test helloworld coding -> memegod420 -> 3",
              "timedOut": false,
              "duration": 10094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff1043b3-7826-4023-9ac4-4e46ed886974",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 4",
              "fullTitle": "click test helloworld coding -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6308df2c-5817-463c-adf0-949fcc962285",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 5",
              "fullTitle": "click test helloworld coding -> memegod420 -> 5",
              "timedOut": false,
              "duration": 9683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "00c43e70-3596-4a7c-9b08-20b38f5849b3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 6",
              "fullTitle": "click test helloworld coding -> memegod420 -> 6",
              "timedOut": false,
              "duration": 8963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "49c67881-6640-4c09-a81e-3b6c155d681c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 7",
              "fullTitle": "click test helloworld coding -> memegod420 -> 7",
              "timedOut": false,
              "duration": 9022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91f47bc3-4389-4d86-a2a4-0153eec0ed56",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 8",
              "fullTitle": "click test helloworld coding -> memegod420 -> 8",
              "timedOut": false,
              "duration": 8798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "093f0b96-1dcb-4f95-ad5e-fd46bf2fbf5e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 0",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "439d9c0c-7318-4fbf-ad31-86a0c44ddf1c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 1",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 23490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "32fb11ba-8831-4be4-97a2-d659bfa3a52b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 2",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22845,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0f002556-779f-4e85-a08f-cd52a7cf537a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 3",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 21905,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "fc9d7255-5439-423e-b027-67a9ebd17475",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 4",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 21089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "719e2e59-ecc9-475a-92ad-787049a61c90",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 5",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 21364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0cb8fbab-f13c-46f8-b8f8-13f93e3054c2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 6",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 24948,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "8189502c-5a57-4446-b3c7-a4d6e580f985",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 7",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 23198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "029c8c44-1b88-41af-bfdb-9370392f0759",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 8",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 21529,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "72224b84-003b-4c8b-8ae1-870f09139601",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 9",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 21528,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e47552d0-b677-4f45-81c9-f6c13b4ead7c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 10",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 22488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a663fecd-4962-4b78-adbe-7c40ae0da77d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 11",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 22670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "629491c0-2d00-4497-ac15-eaa040170784",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 12",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 22847,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1533976c-5465-4165-b8b7-a7e4e9e1f044",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 13",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 23526,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "22364c62-6df7-4a47-af96-b328794b23dd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7f3f01f-4513-4460-b800-7b123f49e481",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 11569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c36e0a03-1f34-4051-9317-8a5222e451fa",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 7644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ae4240c0-20db-4a79-b1b0-35685fa34a2b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 9260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3756ea76-0e37-447d-83c3-a7031c899324",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 9933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9c92b8f-52ee-41ca-a81b-d2d4ffb2fb9f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 9817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8677a65a-515b-4a53-940d-57d633c07c67",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 9501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff6cc54f-2807-40e4-a195-0e9e5f73cd84",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 8859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2af7ea1e-819f-4164-9f39-1d27c67d2302",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 10087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb15b30f-0bef-470c-a16e-837d920ac03d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 9724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "532e59cf-9e04-4901-8091-9f5142107a67",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 10117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4103a822-098c-4f1b-9fdf-1b301e642bfb",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 9942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e63eeea-37a9-4326-b2b0-96e2a9402275",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 9542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93dd2aa9-3a00-4808-b2dd-0f13ded9b61b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 8691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "40fc4a76-e331-400c-8eb0-781237262275",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a0a5708-9a68-4852-bc15-86e6723a244e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 8944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7669611-5e57-4d85-8f3a-43856c862c6a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 10171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bc16c76a-0bec-4ac8-a1f6-b9db7b8575bc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 10080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1befd0a1-c340-4f12-82ab-dfa3749dbd01",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 10430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0e0ad2e0-f761-46e1-9555-ac8bfd6b308c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 10152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f73581ad-4789-4cae-85c2-0492b658cee1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 9285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "00b295d6-31b3-4930-9fd6-355d40bf78d5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 8003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2050ef4e-0c5f-40d3-937f-fd02cce309d2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 8803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8ea9c154-2f37-4d2b-a448-46d54a884a74",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 0",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 14893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "12a2b886-337b-4312-917d-a31784d9ed32",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 1",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 14904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "50e6c080-6aa6-483e-bb46-67ae478890b2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 2",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 14392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9345d18c-6bb2-45a3-9399-fcaa52c0ed13",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 3",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 14926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "39922cc6-4b82-4a5f-83a3-7eab7f3f6ba8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 4",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 15475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "cf5c9c52-6e97-40c1-8eaf-9068d9284373",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 5",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 14927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ec3aeb77-38ab-4e02-9c6b-2c4622439d81",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 6",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 14996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2f2f6594-35dd-4c5b-918e-08e9e2c256b1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 7",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 14650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc6e6d9d-f9cf-4715-8976-9924544e399d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 8",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 15373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e834718a-4c42-4846-8f4f-e6fc468ea72b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 9",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 14960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "509e747e-4fff-4fc8-a8f4-4542f03ce608",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 9104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a6ee685-c4bf-451f-b20f-547a1499ddd1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 10730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d1efbb83-255f-4702-b7b5-05d9b49a9b0b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 8106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "434dc1cd-6b90-4776-99f0-8ea639e07902",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 10019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "79cf4857-bbed-47c7-95c4-cba10d1e483a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 9394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a3858b64-96a6-447b-a7a5-9644cbd92d53",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 8872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "902ca2fd-7d3f-4c70-bf15-a0fd42d84078",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 9634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "df225e33-2047-4ebb-96f4-1a4e742ce0ee",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 9272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3ae3f9eb-53d4-4e3a-80af-3045664f12f1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 9714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a8869ad1-4ac2-41f4-8155-357790376fc7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 9191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fba3fdf7-1bf3-43fb-a65c-7a4a65843408",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 9277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2efec30-e959-4f48-b01f-ebb4664c2fc1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 8666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "79ec7db4-b5f4-4ca4-9e18-70f3046d70bf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 8031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f3d26c46-e144-4f56-97b0-4f78c3b59b04",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 9065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f95d9c4f-536e-4919-8783-118de6247157",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 14",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 14",
              "timedOut": false,
              "duration": 9199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8436378b-a42c-41e7-a5d9-54aad01b6f20",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 9160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7a3f0bb-0ca1-4062-a5f7-f1b64be1f168",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 8714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28e18a67-4d25-4dff-9201-bce52a3ff293",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 10282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d2e1cdd-25b9-478b-9742-de76e27bc365",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 9151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "606408f7-6066-4210-83e5-077b7d059674",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 9697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7ebc6b1-3ea5-4607-b06a-45bf7e19a82a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 10523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a1e7526-30af-43b0-8ff8-06013f14a322",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 10061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "499c1043-f246-4ece-adf4-e665dda18e81",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 9066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "37a6990e-8319-4474-a221-d6bd40f1de35",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 9280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8fd2ca6a-a1e2-493f-ab43-69c41f9c5a81",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 8431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b0da30e0-38ca-4d0f-9181-5c925ae3b3bc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 9681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aff07a62-e4f8-4a3b-bcee-a5f31249c6f9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 10973,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c6a53936-09e9-4a70-b09c-3166c6314158",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 0",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "666a1e25-c774-4f21-9181-60b99606ecd5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 1",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9903,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d7138b48-dc58-4e02-a006-43134f7ced7f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 2",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd77ecba-5282-498a-a976-6e1504dfeb8b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 3",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 10596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "124c2811-d0d8-4ee3-afff-dcca4260a01f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 4",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d15c1133-b52e-4b3d-bafc-9f70ba190fcf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 0",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 10111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c23b8471-e42a-41b2-b339-b2992f2c8fa9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 1",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 10177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a3fe0e3-acb9-4f6c-bc2a-172c92696ad7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 2",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 10120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d8203735-0388-4570-bb27-e05ebb5f84d8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 3",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 9617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "10f78d6e-3b62-4fa8-9778-af99e68ab5dd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 4",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 9948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "031d1973-75e7-4088-ab12-3cd61551808d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 5",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 8864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "524c4bbf-9ee8-4962-8559-587a60dd54a5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 6",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 10022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c5a26ddc-5567-40a8-a5b9-de111663a7dd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 7",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 9537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a4116576-75f1-425e-9608-0bc1c05e2f08",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 8",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 10266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ede9384-f81a-41e1-896b-037ff3a65e19",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 9",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 10002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2622f16c-aa84-4ebd-927b-0876bf4c52da",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 0",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 14831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0602e9a2-d08c-42cd-aa63-023ea2f28b01",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 1",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 15068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "99ee59ce-4a17-4aa2-a126-c378b1552124",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 2",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 15664,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0d8d2559-1bb4-4fd5-bebb-4838dba15b53",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 3",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 16221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "21e1e498-a8d6-447c-9c3f-a26fa3e15ea8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 4",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 15365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2c00d109-4f3e-4a13-a132-45bd2a2ddf76",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 5",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 15048,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "bab75d35-be0f-4351-9844-2e3598704fb9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 6",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 15182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "005844d9-2a2c-4f57-9ab0-ef9ca3247cdc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 0",
              "fullTitle": "click test helloworld coding -> hopeubest -> 0",
              "timedOut": false,
              "duration": 9218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "02fa9941-815a-4b09-b4df-94dcdae43c61",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 1",
              "fullTitle": "click test helloworld coding -> hopeubest -> 1",
              "timedOut": false,
              "duration": 10533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3f659b87-357c-4df6-930f-388c8815f097",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 2",
              "fullTitle": "click test helloworld coding -> hopeubest -> 2",
              "timedOut": false,
              "duration": 9376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4e6376a1-580e-475c-a405-acad1c692be9",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 3",
              "fullTitle": "click test helloworld coding -> hopeubest -> 3",
              "timedOut": false,
              "duration": 11282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c3d24df5-2eb6-493d-92f2-e76a0e31f86d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 0",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 9912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff8652f7-1b17-449d-b7e4-bd453c9b7fa3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 1",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 8728,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0c0f6b83-2eee-475d-a2fc-76d0351832ce",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 2",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 8989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b0f782b-eefa-45fc-8b4f-6f8fa69a2c4a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 3",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 9415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0c6673b3-a90e-4a88-94b4-573d1ba894b8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 4",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 10398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "734c22e7-f92d-4b7d-92ac-16c20749b009",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 5",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 9578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2e8f6d85-a77b-42a0-99ea-0e2464134a9d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 6",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 9380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e73408ec-4e91-406f-b8c6-6ea6bd28f9d5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 7",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 10140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d3793df-4982-4bf5-b82d-6ac3cf0640f3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 8",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 10113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bbf3c409-5bf5-44bf-8b13-31680d027c24",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 9",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 9359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5654f058-86c9-4c67-b646-4d9c4b5d28c0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 10",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 10038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "29ff8282-8d07-4f2a-b958-356ee843e3e5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 11",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 10012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "527cb0f8-680a-408a-ae4d-7cd216e9d3e7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 12",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 10336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "30635d67-fe5c-4c5e-9908-9cf937294ce4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 13",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 10310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3893664b-afa3-4a1f-8a59-fedd7b0698ed",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 0",
              "fullTitle": "click test helloworld programming -> memegod420 -> 0",
              "timedOut": false,
              "duration": 8734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "134669c7-a689-4ba1-b8df-0ee65508978d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 1",
              "fullTitle": "click test helloworld programming -> memegod420 -> 1",
              "timedOut": false,
              "duration": 10262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "27a23b44-8a0f-4fa9-a739-083a47fbf7f2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 2",
              "fullTitle": "click test helloworld programming -> memegod420 -> 2",
              "timedOut": false,
              "duration": 10284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f9bf76cc-44b3-46a8-9098-3c734ef713e2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 3",
              "fullTitle": "click test helloworld programming -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d66e7f0b-bc99-4935-8d0c-ae0f6e23876b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 4",
              "fullTitle": "click test helloworld programming -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2f200940-7c49-4d40-9038-3cf73b6f23ae",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 5",
              "fullTitle": "click test helloworld programming -> memegod420 -> 5",
              "timedOut": false,
              "duration": 10268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6cf2c4f8-a548-4eac-b3f0-ca948ff4c8e1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 6",
              "fullTitle": "click test helloworld programming -> memegod420 -> 6",
              "timedOut": false,
              "duration": 10375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bc684da1-a9d5-444d-84af-015783690b9b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 7",
              "fullTitle": "click test helloworld programming -> memegod420 -> 7",
              "timedOut": false,
              "duration": 9685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8669ea05-00c2-404f-9ba9-38d9e70da4cf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 0",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22144,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5f9736a7-58ff-44b8-a238-2277562201b7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 1",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 23123,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "381adeff-9fbe-45c5-a287-4409e02051c4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 2",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22760,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b41fd77d-ab2a-429d-a538-3bba1420c984",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb30d3e3-9cfe-4d2b-a403-9fd0c89d714f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 11514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0cd01d09-d118-4d11-933b-3889dcf837f2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 9043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7978a16d-6e99-4bfa-a223-de809cb57672",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 8263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11d8dc5f-f4f1-4fae-b5a2-2b710860783b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 9205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7afd0277-2584-4647-9241-4d8a70e9771e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 9925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6accb560-b8cc-4b7d-95e4-800ebe292e6e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 9935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76066a58-fe92-4ea1-9832-ac5e4a521204",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 7923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1a8ffc4e-0522-4aea-b005-718a201aadd5",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 8733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "17c2885f-773a-4fb5-9492-b91dcba85468",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 9580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "62d05775-f1f2-4c3b-9bfe-e2438debd172",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 9160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eca6d816-8273-44d5-8348-6ea1801163bd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 10816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f05131be-4cb0-4116-91c6-4131123456b2",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 12800,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6cb0a199-c952-47ff-ae0b-d57ad460f1ec",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 13",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 13",
              "timedOut": false,
              "duration": 10511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4af32a4b-691c-49f0-b8de-8fcfbb538459",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 14",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 14",
              "timedOut": false,
              "duration": 8749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "def3afa6-08ff-465d-85cb-521f0ab1110b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 16076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "31cfad8c-3433-48ed-abd3-8e158b128f54",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 16691,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f4410fab-d994-4a03-a448-b8735a472f5f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 16194,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3d8a1ca6-e01f-43f4-a68f-3241326f4a9d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 15660,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ea1eb6f3-93ad-4736-88d5-f6490f1725f1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 15913,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cd308609-78d2-4d1f-85b0-7e038593b6d3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 16396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "8eb454f3-0b5e-4b87-8208-a8064b3e7e78",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 16946,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "69520fec-0a95-40f8-b6ce-837f459ec641",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 18835,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9845cf9a-37d6-4934-b212-958a921c432f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 18843,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "801db720-b999-46a4-a973-e11ad5cf601f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 15757,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "eef9f270-d654-4382-9447-19fa5fe036fe",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 16283,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c3aa6734-359b-4250-87ad-21f130249937",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 16443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "87796ee8-7309-4f34-92bc-6c91bd95436b",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 16094,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "26f5a658-66f6-4116-bc02-6c5b510ed6b4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 13",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 13",
              "timedOut": false,
              "duration": 15787,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "47bb40eb-1889-4fbd-a980-36776fab04cc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 14",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 14",
              "timedOut": false,
              "duration": 16350,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "624ce916-e3b5-402d-8a1b-e434e85e40fd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 0",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 14615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "82d1487c-69a9-48dd-a03b-a7979164102f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 1",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 16681,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "2fd35f4c-cfea-4127-a257-82b8614369ed",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 2",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 14733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f657d4bd-4601-4b84-97e0-467421e82258",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 3",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 18279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.activateTarget): Session closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error (Target.activateTarget): Session closed. Most likely the page has been closed.\n    at CDPSession.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:195:35)\n    at Page._screenshotTask (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1089:28)\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1086:62",
                "diff": null
              },
              "uuid": "4f29a132-579b-43e7-b6fe-4a48c584c2d7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 4",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 14821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd0ea683-d974-4748-8e0f-00a571eb227e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 5",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 14790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28f854a9-45d6-4793-87fe-c3c2c238402c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 6",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 15567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "34f7d6ec-772b-4ec1-a70a-fa565c7435af",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 7",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 15044,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "06bca78d-7b3f-429c-ae5c-c845aacf2b83",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 8",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 15247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "17f1b609-f1c6-4513-9329-35d18e537155",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 9",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 15039,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0dca0828-19fc-4c8c-9d02-8d391b33696d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 10",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 14843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "19ea0b2e-ad86-4ab1-b53f-586adf127028",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 11",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 15313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "21b6e66a-d238-4c47-b75a-0d6b9607eba3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 12",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 14487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3563539b-a4d5-49f5-950f-cddc78eb56f1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 22451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5b4fa149-6244-4207-ab05-5582dada37b1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 24205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b8572bb3-209c-4f64-ab7b-f1a6040df81d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 23328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "c6bb02c9-4260-453a-9b32-003ea887eb31",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 22317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4333f3e7-7881-4e56-bd35-bde6dd4e621d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 23125,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "74a52f24-4c0f-4973-984f-783d44d84dae",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 23090,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d5be7e8a-5267-44fd-923d-d6850724eab7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 22840,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0a3954c8-2129-40b0-bb91-d16af9a0ad15",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 23673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3a04a7eb-097a-4712-88e0-5ee702a43ffd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 22909,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0f164e02-3186-4680-8bb3-dc639fa949b7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 23915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "32414abd-c998-4a52-b95e-ac431344f04d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 23473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "79a47481-26f1-4304-b97c-62a2e7b22ccc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 25192,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "ee5c7679-77e3-4b03-828a-57f5ef5651bc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 18728,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "eb57b8dc-dac3-458a-8d06-d053cf909e0a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 15149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b2c0ac0d-f4d7-4a73-ab56-922e4096f21f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 15298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "41cd57ce-51bb-410c-8a3d-939c629700f0",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 15343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3dcf454c-f5ca-4533-90ac-638a10c56cfc",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 0",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "022b705b-cfa2-4f4b-af3a-d709aacd3972",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 1",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 10015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6c164932-7379-482e-9e70-e7bf4718ed44",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 2",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "daa5120f-0917-41a2-9796-a81b7befc955",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 3",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 10152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc6bbba0-4bde-4194-881e-0c0ab5ec45ac",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 4",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 8808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "00f2fef1-2e82-490c-89e6-a2c4ca153d2f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 5",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b83f4bed-1f5c-4113-976e-0696e5270aca",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 6",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 10026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c70c6cc7-50b8-498a-9c60-bf606f79c7dd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 7",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 8307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "723a3b91-3361-4800-831d-93e1727f63e8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 8",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 10333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8dc4c183-9339-45f3-9ebe-aa00bbe51018",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 9",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 9756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ad953c5-da99-4795-8b34-0ade4e4e5b1f",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 10",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 15280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9d8c7ff9-31ef-4cd0-ba4a-37890615fcbf",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 11",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 9910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b176e1ed-7ac9-4a48-9e98-6d360431142a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 12",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 9313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "00877ea7-567a-4800-8747-90edf6df2444",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 13",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 9381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a8286c77-6a2c-49b1-b637-41b8f1b06fef",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 14",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 14",
              "timedOut": false,
              "duration": 9692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "56a57df2-dac9-4a5f-8019-f29c6f998992",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 15",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 15",
              "timedOut": false,
              "duration": 9741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1a333701-932b-4403-8c86-d00ea05035ed",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 16",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 16",
              "timedOut": false,
              "duration": 9518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a012e507-e5fa-4ddf-b846-da1827bc3242",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 0",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 15300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "df60f107-34b1-40dc-81bb-35e22011c196",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 1",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 15829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "af5414a8-74ea-47fb-b5a7-9e15c53b4b1e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 2",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 16365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "4806ee8f-34ca-4ae6-8138-44fe6e49743d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 3",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 15386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "ae0fcc5d-ac95-48fa-b4ca-587c07dfc3c3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 4",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 15935,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "289e25e6-ded6-4641-8467-b92d503b4c16",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 5",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 15910,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1718c31f-547d-4c30-ba91-ca0d37e8fc18",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 6",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 15861,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "580e14dd-287a-49ce-8658-2f243f9ae522",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 7",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 15438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1052e633-2147-433c-a69b-2bac9e1089d4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 8",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 16643,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2e53451c-cbdb-47fc-aa84-5e99fa5ded60",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 9",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 15718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a77ad794-0140-4d69-b8cb-538be6f1d5f3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 10",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 15671,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "30aca534-de61-4024-b83f-b3cea5d2c9a7",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 11",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 16390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e60854a1-437c-49ab-8563-cef988023cf6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 12",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 12",
              "timedOut": false,
              "duration": 15638,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a34659b0-fc20-4dea-a218-487712ba1df4",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 0",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 14986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b90c9410-0f89-41de-93ea-9def17c0d2c6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 1",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 15500,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "06f07fc6-25c6-451d-8bed-9ddc8cf77e44",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 2",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 16033,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5964c6cb-49e7-4030-88f3-3b8c56ec4356",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 3",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 15692,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "01c8b14e-226d-4b59-a68d-f2d7ea8e37a3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 4",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 14710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3e129339-f978-4ae1-800b-68e41901da63",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 5",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 15864,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "df08aaf9-8125-4a0b-8b4f-1062bbd26c78",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 6",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 16169,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0f423af4-a2ef-4431-861e-08160792d8b6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 7",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 15867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2cd3b19f-8423-4af0-99fa-580a6017f1f8",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 8",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 14987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9f97a1a1-510c-472c-af40-6c6cef140cb6",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 9",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 16475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "59b01062-a3a7-4edf-a9d6-9c24efd34b13",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 10",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 14492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60fd128f-d98d-44fc-a981-7cda6c96061d",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 11",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 15393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1ee244ee-ffa2-4590-b556-9baa91885195",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 12",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 16149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1658fb75-363f-49a2-bc41-9018b5d250d3",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 0",
              "fullTitle": "click test helloworld programming -> hopeubest -> 0",
              "timedOut": false,
              "duration": 15754,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "42fdb21d-8c33-4dc3-b043-5e151e0abd18",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 1",
              "fullTitle": "click test helloworld programming -> hopeubest -> 1",
              "timedOut": false,
              "duration": 15718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "de3d3e88-3aa4-4a71-9a6e-ce6e7cf3bcbd",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 2",
              "fullTitle": "click test helloworld programming -> hopeubest -> 2",
              "timedOut": false,
              "duration": 15065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7cc64b0a-f66a-44da-a0e4-a0b585bd9b07",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 3",
              "fullTitle": "click test helloworld programming -> hopeubest -> 3",
              "timedOut": false,
              "duration": 15891,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "25f5009c-3919-43b8-be88-3c552da4128e",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 4",
              "fullTitle": "click test helloworld programming -> hopeubest -> 4",
              "timedOut": false,
              "duration": 15493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8f091ba3-d12b-43dc-824a-e79b67dcde4a",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 5",
              "fullTitle": "click test helloworld programming -> hopeubest -> 5",
              "timedOut": false,
              "duration": 15628,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9f47febb-65b9-46f2-9e3b-705897970655",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 6",
              "fullTitle": "click test helloworld programming -> hopeubest -> 6",
              "timedOut": false,
              "duration": 16007,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7da8f8ce-eddc-4405-9d1b-c5d0e4429d89",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 7",
              "fullTitle": "click test helloworld programming -> hopeubest -> 7",
              "timedOut": false,
              "duration": 15582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b3073b78-3353-461f-9b97-31bdd6a21b18",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 8",
              "fullTitle": "click test helloworld programming -> hopeubest -> 8",
              "timedOut": false,
              "duration": 15871,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9a382ea5-781b-4f49-9c8c-920b07be3220",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 9",
              "fullTitle": "click test helloworld programming -> hopeubest -> 9",
              "timedOut": false,
              "duration": 15642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "aece2258-f49e-4bb6-be26-8993cd433417",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 10",
              "fullTitle": "click test helloworld programming -> hopeubest -> 10",
              "timedOut": false,
              "duration": 15405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0b65a725-f85e-4ba5-97fd-6ef557534313",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 11",
              "fullTitle": "click test helloworld programming -> hopeubest -> 11",
              "timedOut": false,
              "duration": 16123,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "dbc37e22-05eb-4de5-8ac2-82bd26d10c50",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 12",
              "fullTitle": "click test helloworld programming -> hopeubest -> 12",
              "timedOut": false,
              "duration": 15231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "65b0bf33-193c-4d70-aece-17646f489bf1",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 13",
              "fullTitle": "click test helloworld programming -> hopeubest -> 13",
              "timedOut": false,
              "duration": 15420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8490ff03-a315-4870-8fd4-3ffc888661ca",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 14",
              "fullTitle": "click test helloworld programming -> hopeubest -> 14",
              "timedOut": false,
              "duration": 16428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6e7ffe2c-fa02-43ba-8e49-a36a2fe9535c",
              "parentUUID": "f625adeb-18fb-4146-8388-269591d6a9bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc5870ac-5ec7-4f4e-bf4c-696292c86582",
            "30fb50aa-ca88-4d2d-a02f-138a2822775e",
            "93e6b3f2-8b45-4217-8d35-2a2f136d6010",
            "5bc68ed1-764c-47f1-b77c-354641c279a0",
            "63c36618-f515-4402-bd94-0a17d403c814",
            "faa8c4cf-2a4d-4f37-b4ef-0f56e92b29a1",
            "69d9dc38-7adf-450f-a707-4a6c707f998d",
            "3d360647-c67f-403f-8ed6-d3c12ede4965",
            "c197cd70-c7d3-49aa-be87-89c6a7399f50",
            "07e2cb19-681b-4245-9a7a-6d3a7bb8ce40",
            "e5c643f8-9951-481e-b378-1fa2ed987d61",
            "d60c7952-63a9-4fcc-8f6e-09bd881e55a5",
            "6b995261-e288-462b-bfd9-26b2bfbd6e9c",
            "594afa2c-778d-49e6-9458-e6ee4101729e",
            "5b445223-0aea-435f-b7c6-6af4edf4cf9a",
            "2e5cbef2-48b0-41cf-9b34-eb557e67b303",
            "010a1bb1-52be-4001-9906-7a466caf023e",
            "db23112e-0ac4-410b-83a2-0a161f30f5a9",
            "5ea1c781-a204-47b2-b5df-9cb9af211ffb",
            "c5695d38-810b-4569-bbda-2f17309d4632",
            "9dc16f57-ee41-430a-9758-ea180fbe7249",
            "7773d084-5e9c-4528-a127-93eaa5c40575",
            "735532c9-8fda-4265-88fd-13699a3744f5",
            "10ce8a89-4f5b-42df-a6f0-05f90d99a680",
            "4f89d2c5-7455-47ec-aed4-0a383df74066",
            "49a4e3cb-802a-4d20-97de-e761842687f0",
            "52585adc-ffcf-4bc1-aad6-df603c7b083b",
            "9aa162bf-6554-4af2-9500-c2a1a1b6ec2d",
            "52fae896-163b-4981-8425-8b26b6bb4ecd",
            "ee7dba9e-1b29-4a3f-89e2-d40f3681e3d3",
            "e0f2a5a2-ddd4-45de-bbbc-a801a21b680a",
            "13611203-98ab-4a8e-8eb7-af4423ea4183",
            "2d480c18-c930-400e-a669-82eae153fc7b",
            "92fc077a-e5bb-4127-9e36-25b0e0d00f6c",
            "d1efbba9-79ba-4311-a48d-798b4ebeabd4",
            "43ce3469-c839-4588-81f3-e2ac64d3ba82",
            "4b6814b5-2c14-4762-934b-2588df8e4cb3",
            "e100b9af-7605-4b03-b586-7704782856e3",
            "a25b04b4-d1a9-4d5d-882d-445e2940f127",
            "4857c915-a1f9-46c8-9eb6-c7164b31bf68",
            "843bec63-6759-40ec-94b6-27f5b2a62360",
            "1dde2373-b4c3-4315-a455-9f10dabbf04b",
            "9c09a957-edc6-44d1-bd54-56fe18fe865a",
            "6b85cea7-8eb6-4b4d-9019-13ec6574192e",
            "195bac03-bc0d-4ff0-8037-9524fcee4b0b",
            "161a1860-709f-4296-b4f0-93ccd3f18081",
            "783eadbf-34b0-46d3-b7d8-ac9c9b836bbb",
            "0b6fa444-07a0-4537-9f78-9691a9498679",
            "4cb69e60-2bf3-4df2-ae9f-982de82c19c6",
            "a9fd966c-8ebf-46c8-8c03-e8996bbf86a1",
            "01e0b994-a866-4a43-926c-2307deae9d22",
            "27fd7a4e-252c-48be-a071-8250b6612824",
            "1bac6b63-2dea-4102-869e-96196c827b77",
            "49f9312f-279f-45d3-b101-a7f79c82dd1a",
            "5a6f3a72-8866-43c4-b092-4a24bf244618",
            "1f02409c-de47-441a-9673-23f2c3c2f072",
            "4ef0eb57-5926-49a5-a5fa-1787ffe42cb4",
            "71f9c1c6-1cd8-42b9-94d0-ef9370ecabb7",
            "5ae98a48-0e74-40eb-8c8f-36d7a57fe118",
            "b804464f-e290-498e-9ceb-19e3300fb080",
            "2a066e56-9c60-486b-9382-3abb21bf485a",
            "d9af0158-a626-412a-a835-892b26fdedc6",
            "a5616a44-2a84-4715-aafe-2922909f6a58",
            "9d8fd910-ba7b-45a6-87c8-da3936312fcd",
            "da913962-03a2-47fb-8976-ccc3a223234c",
            "fe0b95ac-ad13-4791-aa0e-bf2e6bb45064",
            "20d221ad-b2da-4af3-9032-9052fa0db33f",
            "743df176-30c5-41e1-9c07-ffb854562c61",
            "f57b9190-c1cc-4aa3-aed2-5c1a372dc681",
            "5836a3f0-3c3b-4bcf-a321-17748ec047a9",
            "a35018fc-2b9f-42aa-b2a7-be53f6a9581a",
            "9e681282-d9a4-4a1c-8ac7-c26d83bcb319",
            "aa6fd248-5ee4-4097-9bb2-417d5325479e",
            "310ae9fd-50e7-4cdf-af78-4ee0376d0dc3",
            "78c169d4-208f-4c63-b9ab-3c7fb59af16d",
            "47efe1e9-535c-41fd-b81a-ef04f4cf6db5",
            "cf4404df-b93e-4131-a7da-8f9f63a60a88",
            "85615d75-0b68-47cd-87a8-ff4992787483",
            "1025ceaa-df2a-47c5-b153-1e7f96c2e73e",
            "40938251-455f-4f95-a5aa-a1a1a0880ee0",
            "7e55cc1a-d859-4706-86ca-0483dc80488e",
            "ee153a8d-cdaf-4b13-ac05-1ef4bf22b824",
            "82ff5397-3786-49da-bcce-47209c4cd5c0",
            "4f5ea330-6d18-4958-bed3-fc19354d784c",
            "ae2d342e-c78a-49bf-a970-4a7294beaa7d",
            "be154dbf-8f6e-4a48-a2c7-1f9218189016",
            "411ffbca-eb25-42aa-b4c6-730da929540b",
            "60d51644-3fe8-4bf4-81a7-59d9101d4f2a",
            "4e242e15-efc9-4653-93b3-e844fe529224",
            "f330f496-8004-4c9e-8617-f7197db6273c",
            "5bf45cdb-ffaf-4386-8739-77ce84bbd488",
            "c679f7f9-42d6-4e1c-a5fc-f25d4602ce57",
            "c37eb2bb-b7b4-4451-9eda-5e27fcd6a378",
            "c6202c23-8066-4f11-885e-6d13f7ca605e",
            "72f22dde-1985-44b0-a79b-8ce5c40cc6e0",
            "abba8f5c-aac5-404b-aa21-2ed4b4ec9100",
            "dd25d6db-81b6-4c04-99da-43bf8652eb18",
            "1327da6b-29f5-49c7-8c76-74c7c51329c1",
            "bf9c2d5e-40bc-479c-b4e8-aed0f65b0e21",
            "6d2e5fbd-7309-49af-81d0-9884066f391f",
            "71737f1e-7313-4acb-9728-fe313b5faa7c",
            "824c4fae-0a20-468b-af28-d1e56258b702",
            "7b350bfb-bddc-4aee-a028-d24a6e7695a2",
            "3c2c98d3-b36a-4207-a454-0618a02294ad",
            "4383dd0a-8dd2-443a-97d9-ed9809fbca02",
            "9dfb4cf3-c9ca-42bf-a62e-29c22d867ff7",
            "5bf6bf12-5baf-4414-a666-315b1fdfdd78",
            "f672296c-dbef-46ac-8e99-e007ea24fcc5",
            "148d2ba3-48b5-4a4c-a6fb-a9da5f62c00c",
            "0b0db33d-4090-4078-94d9-9ccfbe6c1155",
            "35031b41-9769-4efc-9a34-75a7e3aacc16",
            "9b709169-e8a3-4bfd-9111-7337fbcdbb72",
            "8a77456f-b98d-4b6b-9d18-f01e1ae36fe4",
            "9c4919c9-3f13-423b-bd9e-9981d6801191",
            "6a1adc38-3520-4e6b-ad8c-f754d92d490b",
            "eb0a6082-3367-4bde-b292-91ecb3e043d5",
            "8be7d73e-2187-4d7e-8773-303d4233999d",
            "3fa13b1e-2084-496e-b960-2cb0cb3e5647",
            "63ce94ce-21f9-4208-ba20-dec61a5ad749",
            "9601d044-2297-4446-9169-28757f7c5571",
            "f424c4f4-b6c9-45e9-977c-638e94475010",
            "55f2ec3c-f913-4525-b76a-a43b0fc31fc2",
            "d67c00ca-76da-4620-a202-3e9518bc4610",
            "f0f0385e-7abb-4810-ad45-ee5be77363b2",
            "6fe77af1-7427-4c8b-8ec0-0fc1678c8971",
            "bc23b838-a1eb-455c-bb3d-79f71192bcc0",
            "b0694959-3f6e-4a9c-886c-2400e75fa99c",
            "56e0fdc4-752b-4602-baa2-37f4f3cc2cbb",
            "f0229311-bad1-4591-b7b8-26478cfc1e75",
            "9879ed6e-2670-4699-a9fd-92fc6d041a76",
            "05e93944-2fe3-4ceb-b24e-734f95fba94d",
            "a18be850-b846-4977-8057-c3b394d66af1",
            "2a0d3508-e7b9-4db3-afef-7156d4ec09a6",
            "4e5d9910-e5f6-4717-a4be-403c0afe2f84",
            "28ef5746-3778-4716-9f63-745f89a0841c",
            "169efdf7-f2d0-462e-a5ce-d0f0ff658a6c",
            "77f0b06f-af38-4622-b6b7-62afb868c236",
            "1ab139b3-ae84-4f45-a842-05d49ac7410f",
            "3efbd6ec-07f0-4c4b-87c3-38ec3629f780",
            "1a4078d6-6a98-4fe5-a00f-b6144f59fed3",
            "207b6964-e22c-4674-a1ad-0c11f89aec32",
            "7069616c-8b44-4069-8060-67cba0a3edf5",
            "425ba00a-5333-4c68-a6a8-df32343a4eae",
            "c3bf57f1-3fa8-4cc1-921a-ad1ee5ce115c",
            "51a89fd9-3d6d-4086-9d80-01fd38628dae",
            "07d6f779-2e68-4d8e-b49a-717fa03f178d",
            "b1d9bb6b-1eeb-4fc5-b94f-8166adaca9ea",
            "d43bdcd2-084f-4ea8-a0a5-35642b54bc09",
            "03b64cb6-e144-42b4-a722-da2a2eed3d65",
            "14f0d149-7209-4a1a-a10d-e4aa0b1fb798",
            "8145b7cd-0e02-4460-9ecd-b43deb0ca1d1",
            "b33301da-b9c5-4b71-86a0-a2085d828ce5",
            "2ecf757c-b85d-4648-990f-d6b7fa35c355",
            "94eaa15f-b920-4ae3-990a-95b05dfe9949",
            "b241b55e-f1ec-49e1-882d-fc8180c3b962",
            "d27c10cb-f7b0-42ff-8970-8b2e4fe37f5d",
            "ffb18f7f-a426-4948-bc94-9d101fce7dfa",
            "c6cedb01-f4e4-4e46-a834-b1a9c02aaa95",
            "b363e799-0943-4b45-815a-c10e007ac502",
            "8442f256-bead-4210-9b0a-60b4df53be7c",
            "caa876aa-3774-4f70-8653-ea2ec31a0fcb",
            "71cd14c3-eedb-48a1-b0b1-0a079ce1bb16",
            "1390eb3b-29ca-4534-88cb-dec98704add1",
            "be011570-a459-4dea-96b8-2ac2cb6fbafb",
            "6b56fad7-4445-45ea-b502-dab8c4a5b0d2",
            "7cab8ff1-cdcb-4852-9052-bff28595db7b",
            "c992e255-cf0d-41c7-9bdb-b77e58ed795d",
            "ea8482cd-d4b7-477a-93eb-0ba89a2908e7",
            "baf4a156-5a23-4720-9c2e-d5dccef9b109",
            "006fc406-cd35-4d8a-9072-718995e280d4",
            "8d17ae69-ff32-4921-b964-37a675cb725f",
            "38f7edc4-5305-4212-80e4-b71e69ec6cc1",
            "235f3fc7-f675-4e82-9077-897ca1c955b6",
            "a567a7f2-3f34-41e3-901f-e82fb05962bd",
            "213c59ae-ce72-482f-beca-b74a229e6106",
            "40eb8e96-b363-415d-b4bb-e3ac10bb2712",
            "271347c6-a5ed-4535-8d45-c52832d791b7",
            "56d90e9c-2550-47b1-95c5-76148233061d",
            "8fab5ff4-ffe3-42cf-bd55-e7d78b674a0f",
            "cac7988b-db70-425c-b78f-cc934889a09e",
            "24e68880-e91e-4b87-9545-e73ab99f4f1f",
            "2bea7f62-1a16-40ca-a65d-cf76b884a414",
            "50901abc-aa46-4bc4-92f1-27d419b0eab0",
            "a1df232f-8334-4df3-941c-152bba328c83",
            "13a6f59c-b1ff-4bcb-9683-697c8c5c3b6f",
            "481ce12c-963f-49e3-98c6-491ef1156041",
            "2467e7f2-ef03-4140-b2b2-1d878c65eff6",
            "cf718ee3-ff1f-4c4f-ba1d-a58be834bcf8",
            "2a404cd4-dedd-4e38-b3d6-36050617bca9",
            "c724303a-8479-4489-b6ad-3dc9dea38426",
            "127f4964-dacd-4037-86b9-7ab76139689e",
            "c084b4b9-c494-4f4a-8a90-5877e2f3c1aa",
            "a6f01ce0-0eec-4619-a0be-7cdb804983a8",
            "aae6c2c7-176c-4002-8c7c-899f85aec1d5",
            "de8a7081-cd86-491f-91ce-98d56223bb89",
            "91e89d25-d3cf-4857-9ef1-7d362095802e",
            "896790b7-8fd4-4af8-8c22-03f7d70f8f7a",
            "45cc62bb-17f8-41b4-a058-c37effec256f",
            "6d807529-42cb-464c-9317-d90ebf7b0fa3",
            "c150acb1-a9f1-4244-8117-e9040726d10d",
            "7b0fde2d-d761-4243-99c7-2757f06a8aee",
            "ff1043b3-7826-4023-9ac4-4e46ed886974",
            "6308df2c-5817-463c-adf0-949fcc962285",
            "00c43e70-3596-4a7c-9b08-20b38f5849b3",
            "49c67881-6640-4c09-a81e-3b6c155d681c",
            "91f47bc3-4389-4d86-a2a4-0153eec0ed56",
            "093f0b96-1dcb-4f95-ad5e-fd46bf2fbf5e",
            "a7f3f01f-4513-4460-b800-7b123f49e481",
            "c36e0a03-1f34-4051-9317-8a5222e451fa",
            "ae4240c0-20db-4a79-b1b0-35685fa34a2b",
            "3756ea76-0e37-447d-83c3-a7031c899324",
            "a9c92b8f-52ee-41ca-a81b-d2d4ffb2fb9f",
            "8677a65a-515b-4a53-940d-57d633c07c67",
            "ff6cc54f-2807-40e4-a195-0e9e5f73cd84",
            "2af7ea1e-819f-4164-9f39-1d27c67d2302",
            "eb15b30f-0bef-470c-a16e-837d920ac03d",
            "532e59cf-9e04-4901-8091-9f5142107a67",
            "4103a822-098c-4f1b-9fdf-1b301e642bfb",
            "8e63eeea-37a9-4326-b2b0-96e2a9402275",
            "93dd2aa9-3a00-4808-b2dd-0f13ded9b61b",
            "40fc4a76-e331-400c-8eb0-781237262275",
            "9a0a5708-9a68-4852-bc15-86e6723a244e",
            "a7669611-5e57-4d85-8f3a-43856c862c6a",
            "bc16c76a-0bec-4ac8-a1f6-b9db7b8575bc",
            "1befd0a1-c340-4f12-82ab-dfa3749dbd01",
            "0e0ad2e0-f761-46e1-9555-ac8bfd6b308c",
            "f73581ad-4789-4cae-85c2-0492b658cee1",
            "00b295d6-31b3-4930-9fd6-355d40bf78d5",
            "2050ef4e-0c5f-40d3-937f-fd02cce309d2",
            "8ea9c154-2f37-4d2b-a448-46d54a884a74",
            "12a2b886-337b-4312-917d-a31784d9ed32",
            "50e6c080-6aa6-483e-bb46-67ae478890b2",
            "9345d18c-6bb2-45a3-9399-fcaa52c0ed13",
            "39922cc6-4b82-4a5f-83a3-7eab7f3f6ba8",
            "ec3aeb77-38ab-4e02-9c6b-2c4622439d81",
            "2f2f6594-35dd-4c5b-918e-08e9e2c256b1",
            "cc6e6d9d-f9cf-4715-8976-9924544e399d",
            "509e747e-4fff-4fc8-a8f4-4542f03ce608",
            "2a6ee685-c4bf-451f-b20f-547a1499ddd1",
            "d1efbb83-255f-4702-b7b5-05d9b49a9b0b",
            "434dc1cd-6b90-4776-99f0-8ea639e07902",
            "79cf4857-bbed-47c7-95c4-cba10d1e483a",
            "a3858b64-96a6-447b-a7a5-9644cbd92d53",
            "902ca2fd-7d3f-4c70-bf15-a0fd42d84078",
            "df225e33-2047-4ebb-96f4-1a4e742ce0ee",
            "3ae3f9eb-53d4-4e3a-80af-3045664f12f1",
            "a8869ad1-4ac2-41f4-8155-357790376fc7",
            "fba3fdf7-1bf3-43fb-a65c-7a4a65843408",
            "b2efec30-e959-4f48-b01f-ebb4664c2fc1",
            "79ec7db4-b5f4-4ca4-9e18-70f3046d70bf",
            "f3d26c46-e144-4f56-97b0-4f78c3b59b04",
            "f95d9c4f-536e-4919-8783-118de6247157",
            "8436378b-a42c-41e7-a5d9-54aad01b6f20",
            "a7a3f0bb-0ca1-4062-a5f7-f1b64be1f168",
            "28e18a67-4d25-4dff-9201-bce52a3ff293",
            "6d2e1cdd-25b9-478b-9742-de76e27bc365",
            "606408f7-6066-4210-83e5-077b7d059674",
            "a7ebc6b1-3ea5-4607-b06a-45bf7e19a82a",
            "8a1e7526-30af-43b0-8ff8-06013f14a322",
            "499c1043-f246-4ece-adf4-e665dda18e81",
            "37a6990e-8319-4474-a221-d6bd40f1de35",
            "8fd2ca6a-a1e2-493f-ab43-69c41f9c5a81",
            "b0da30e0-38ca-4d0f-9181-5c925ae3b3bc",
            "aff07a62-e4f8-4a3b-bcee-a5f31249c6f9",
            "c6a53936-09e9-4a70-b09c-3166c6314158",
            "666a1e25-c774-4f21-9181-60b99606ecd5",
            "d7138b48-dc58-4e02-a006-43134f7ced7f",
            "dd77ecba-5282-498a-a976-6e1504dfeb8b",
            "124c2811-d0d8-4ee3-afff-dcca4260a01f",
            "d15c1133-b52e-4b3d-bafc-9f70ba190fcf",
            "c23b8471-e42a-41b2-b339-b2992f2c8fa9",
            "2a3fe0e3-acb9-4f6c-bc2a-172c92696ad7",
            "d8203735-0388-4570-bb27-e05ebb5f84d8",
            "10f78d6e-3b62-4fa8-9778-af99e68ab5dd",
            "031d1973-75e7-4088-ab12-3cd61551808d",
            "524c4bbf-9ee8-4962-8559-587a60dd54a5",
            "c5a26ddc-5567-40a8-a5b9-de111663a7dd",
            "a4116576-75f1-425e-9608-0bc1c05e2f08",
            "6ede9384-f81a-41e1-896b-037ff3a65e19",
            "2622f16c-aa84-4ebd-927b-0876bf4c52da",
            "0602e9a2-d08c-42cd-aa63-023ea2f28b01",
            "02fa9941-815a-4b09-b4df-94dcdae43c61",
            "3f659b87-357c-4df6-930f-388c8815f097",
            "4e6376a1-580e-475c-a405-acad1c692be9",
            "c3d24df5-2eb6-493d-92f2-e76a0e31f86d",
            "ff8652f7-1b17-449d-b7e4-bd453c9b7fa3",
            "0c0f6b83-2eee-475d-a2fc-76d0351832ce",
            "4b0f782b-eefa-45fc-8b4f-6f8fa69a2c4a",
            "0c6673b3-a90e-4a88-94b4-573d1ba894b8",
            "734c22e7-f92d-4b7d-92ac-16c20749b009",
            "2e8f6d85-a77b-42a0-99ea-0e2464134a9d",
            "e73408ec-4e91-406f-b8c6-6ea6bd28f9d5",
            "3d3793df-4982-4bf5-b82d-6ac3cf0640f3",
            "bbf3c409-5bf5-44bf-8b13-31680d027c24",
            "5654f058-86c9-4c67-b646-4d9c4b5d28c0",
            "29ff8282-8d07-4f2a-b958-356ee843e3e5",
            "527cb0f8-680a-408a-ae4d-7cd216e9d3e7",
            "30635d67-fe5c-4c5e-9908-9cf937294ce4",
            "3893664b-afa3-4a1f-8a59-fedd7b0698ed",
            "134669c7-a689-4ba1-b8df-0ee65508978d",
            "27a23b44-8a0f-4fa9-a739-083a47fbf7f2",
            "f9bf76cc-44b3-46a8-9098-3c734ef713e2",
            "d66e7f0b-bc99-4935-8d0c-ae0f6e23876b",
            "2f200940-7c49-4d40-9038-3cf73b6f23ae",
            "6cf2c4f8-a548-4eac-b3f0-ca948ff4c8e1",
            "bc684da1-a9d5-444d-84af-015783690b9b",
            "8669ea05-00c2-404f-9ba9-38d9e70da4cf",
            "eb30d3e3-9cfe-4d2b-a403-9fd0c89d714f",
            "0cd01d09-d118-4d11-933b-3889dcf837f2",
            "7978a16d-6e99-4bfa-a223-de809cb57672",
            "11d8dc5f-f4f1-4fae-b5a2-2b710860783b",
            "7afd0277-2584-4647-9241-4d8a70e9771e",
            "6accb560-b8cc-4b7d-95e4-800ebe292e6e",
            "76066a58-fe92-4ea1-9832-ac5e4a521204",
            "1a8ffc4e-0522-4aea-b005-718a201aadd5",
            "17c2885f-773a-4fb5-9492-b91dcba85468",
            "62d05775-f1f2-4c3b-9bfe-e2438debd172",
            "eca6d816-8273-44d5-8348-6ea1801163bd",
            "f05131be-4cb0-4116-91c6-4131123456b2",
            "6cb0a199-c952-47ff-ae0b-d57ad460f1ec",
            "4af32a4b-691c-49f0-b8de-8fcfbb538459",
            "def3afa6-08ff-465d-85cb-521f0ab1110b",
            "82d1487c-69a9-48dd-a03b-a7979164102f",
            "f657d4bd-4601-4b84-97e0-467421e82258",
            "dd0ea683-d974-4748-8e0f-00a571eb227e",
            "28f854a9-45d6-4793-87fe-c3c2c238402c",
            "19ea0b2e-ad86-4ab1-b53f-586adf127028",
            "3563539b-a4d5-49f5-950f-cddc78eb56f1",
            "022b705b-cfa2-4f4b-af3a-d709aacd3972",
            "6c164932-7379-482e-9e70-e7bf4718ed44",
            "daa5120f-0917-41a2-9796-a81b7befc955",
            "fc6bbba0-4bde-4194-881e-0c0ab5ec45ac",
            "00f2fef1-2e82-490c-89e6-a2c4ca153d2f",
            "b83f4bed-1f5c-4113-976e-0696e5270aca",
            "c70c6cc7-50b8-498a-9c60-bf606f79c7dd",
            "723a3b91-3361-4800-831d-93e1727f63e8",
            "8dc4c183-9339-45f3-9ebe-aa00bbe51018",
            "9ad953c5-da99-4795-8b34-0ade4e4e5b1f",
            "b176e1ed-7ac9-4a48-9e98-6d360431142a",
            "00877ea7-567a-4800-8747-90edf6df2444",
            "a8286c77-6a2c-49b1-b637-41b8f1b06fef",
            "56a57df2-dac9-4a5f-8019-f29c6f998992",
            "1a333701-932b-4403-8c86-d00ea05035ed",
            "a012e507-e5fa-4ddf-b846-da1827bc3242",
            "b90c9410-0f89-41de-93ea-9def17c0d2c6",
            "3e129339-f978-4ae1-800b-68e41901da63",
            "9f97a1a1-510c-472c-af40-6c6cef140cb6",
            "60fd128f-d98d-44fc-a981-7cda6c96061d"
          ],
          "failures": [
            "12c826f0-c076-4a20-aefe-1ced2165c68e",
            "f05f4549-98a8-4027-b4a3-176c1df77130",
            "e57a9b5b-306e-4815-98ba-8f47d8cf5063",
            "9e33067b-9a61-4fde-ace3-d09bea3f8d2d",
            "e4fc9203-cb03-41b9-8e68-db3342e6930b",
            "7f6525da-1fe0-419c-b47e-833d7efb5371",
            "a068f7ba-e416-4105-9df4-0c43acf9e6fe",
            "b8f536b0-6a31-4572-a56e-614a9abb3ecf",
            "965e254b-a51a-4784-a062-2bc0ff37ebd2",
            "1e492196-851a-45cf-a20a-79c28ec99c30",
            "6438439b-c0fb-43e5-9ff5-1cff25763d7e",
            "65d909ba-37a0-4405-99e7-20720330bcfc",
            "f118eedd-7eb1-4009-b9d9-8ec5674f7ccd",
            "d86cc089-7230-42bc-a83d-14f3c18792d0",
            "994eee5e-6102-4dae-8eb4-ee5b0daa2850",
            "53c10823-5846-474b-a092-f87fed6a30fa",
            "68e67b83-4fb6-4022-b501-291d755ebe2f",
            "5eb5e487-ddda-460c-8fee-4c85ddadffca",
            "1c44f8a2-749c-48a1-aad1-9207285f1a49",
            "1c053b9d-bcd6-4c50-b408-396dc0d4647a",
            "d7870095-a2e6-4535-a54b-dfb5974d449c",
            "7a423289-8e9c-4967-a5fd-1a99094dc4b2",
            "400bd8c5-ee59-42a6-9e86-beef28021ce3",
            "e956b316-606d-44b0-9877-42b807ab9762",
            "37a48e33-04f0-4ea6-bcbc-eeed16e7d876",
            "be4a013d-b876-4d58-98ba-b830f3dbe2aa",
            "2bde11b0-274b-42d7-b0f4-6d52c8fc1792",
            "ea8e5226-ac79-4c09-a03b-bedae1dd7f5d",
            "55b37fe3-81e5-451c-93e6-309a83a5dfd1",
            "be3ad2f6-d809-4393-add8-ab49b471ac25",
            "fd117bd9-22e0-4576-b568-292e52664fd0",
            "03f34d66-3e7f-4b98-a4e2-3b383b63f332",
            "2e90e714-ce65-4349-9d3c-2e90741aebdf",
            "c7f8e11c-373c-459d-97d6-b4b2bdf43b32",
            "21e13468-1ae3-4acd-932a-1472089112f1",
            "bdd3e27f-01c2-4bcf-91d5-fda725a824ff",
            "9d5c0b80-f54d-4bd5-86a6-4cabeb523a0e",
            "1265d0d6-2adf-4d9a-b69b-a9e7d0629d7e",
            "34ed4102-20f1-4382-82b3-9b0a11f8ce92",
            "920afc83-eb1c-4e64-a211-3f4e8126ff3c",
            "a8a59c25-fc47-4916-b23a-f92183d5fbcb",
            "d3cba0da-4ab0-4806-b971-cf1a4abf2ec6",
            "e1de1e98-0c29-4736-9c4e-1ea83520bab2",
            "accce665-7461-4be4-a606-dec287bdfc3c",
            "af1d91db-1568-4d63-97d8-68f5776900a6",
            "a16b0360-1d2a-4324-873d-8ef9f0380809",
            "67a52b27-eb44-4e51-b9df-ec3beea3eda9",
            "439d9c0c-7318-4fbf-ad31-86a0c44ddf1c",
            "32fb11ba-8831-4be4-97a2-d659bfa3a52b",
            "0f002556-779f-4e85-a08f-cd52a7cf537a",
            "fc9d7255-5439-423e-b027-67a9ebd17475",
            "719e2e59-ecc9-475a-92ad-787049a61c90",
            "0cb8fbab-f13c-46f8-b8f8-13f93e3054c2",
            "8189502c-5a57-4446-b3c7-a4d6e580f985",
            "029c8c44-1b88-41af-bfdb-9370392f0759",
            "72224b84-003b-4c8b-8ae1-870f09139601",
            "e47552d0-b677-4f45-81c9-f6c13b4ead7c",
            "a663fecd-4962-4b78-adbe-7c40ae0da77d",
            "629491c0-2d00-4497-ac15-eaa040170784",
            "1533976c-5465-4165-b8b7-a7e4e9e1f044",
            "22364c62-6df7-4a47-af96-b328794b23dd",
            "cf5c9c52-6e97-40c1-8eaf-9068d9284373",
            "e834718a-4c42-4846-8f4f-e6fc468ea72b",
            "99ee59ce-4a17-4aa2-a126-c378b1552124",
            "0d8d2559-1bb4-4fd5-bebb-4838dba15b53",
            "21e1e498-a8d6-447c-9c3f-a26fa3e15ea8",
            "2c00d109-4f3e-4a13-a132-45bd2a2ddf76",
            "bab75d35-be0f-4351-9844-2e3598704fb9",
            "005844d9-2a2c-4f57-9ab0-ef9ca3247cdc",
            "5f9736a7-58ff-44b8-a238-2277562201b7",
            "381adeff-9fbe-45c5-a287-4409e02051c4",
            "b41fd77d-ab2a-429d-a538-3bba1420c984",
            "31cfad8c-3433-48ed-abd3-8e158b128f54",
            "f4410fab-d994-4a03-a448-b8735a472f5f",
            "3d8a1ca6-e01f-43f4-a68f-3241326f4a9d",
            "ea1eb6f3-93ad-4736-88d5-f6490f1725f1",
            "cd308609-78d2-4d1f-85b0-7e038593b6d3",
            "8eb454f3-0b5e-4b87-8208-a8064b3e7e78",
            "69520fec-0a95-40f8-b6ce-837f459ec641",
            "9845cf9a-37d6-4934-b212-958a921c432f",
            "801db720-b999-46a4-a973-e11ad5cf601f",
            "eef9f270-d654-4382-9447-19fa5fe036fe",
            "c3aa6734-359b-4250-87ad-21f130249937",
            "87796ee8-7309-4f34-92bc-6c91bd95436b",
            "26f5a658-66f6-4116-bc02-6c5b510ed6b4",
            "47bb40eb-1889-4fbd-a980-36776fab04cc",
            "624ce916-e3b5-402d-8a1b-e434e85e40fd",
            "2fd35f4c-cfea-4127-a257-82b8614369ed",
            "4f29a132-579b-43e7-b6fe-4a48c584c2d7",
            "34f7d6ec-772b-4ec1-a70a-fa565c7435af",
            "06bca78d-7b3f-429c-ae5c-c845aacf2b83",
            "17f1b609-f1c6-4513-9329-35d18e537155",
            "0dca0828-19fc-4c8c-9d02-8d391b33696d",
            "21b6e66a-d238-4c47-b75a-0d6b9607eba3",
            "5b4fa149-6244-4207-ab05-5582dada37b1",
            "b8572bb3-209c-4f64-ab7b-f1a6040df81d",
            "c6bb02c9-4260-453a-9b32-003ea887eb31",
            "4333f3e7-7881-4e56-bd35-bde6dd4e621d",
            "74a52f24-4c0f-4973-984f-783d44d84dae",
            "d5be7e8a-5267-44fd-923d-d6850724eab7",
            "0a3954c8-2129-40b0-bb91-d16af9a0ad15",
            "3a04a7eb-097a-4712-88e0-5ee702a43ffd",
            "0f164e02-3186-4680-8bb3-dc639fa949b7",
            "32414abd-c998-4a52-b95e-ac431344f04d",
            "79a47481-26f1-4304-b97c-62a2e7b22ccc",
            "ee5c7679-77e3-4b03-828a-57f5ef5651bc",
            "eb57b8dc-dac3-458a-8d06-d053cf909e0a",
            "b2c0ac0d-f4d7-4a73-ab56-922e4096f21f",
            "41cd57ce-51bb-410c-8a3d-939c629700f0",
            "3dcf454c-f5ca-4533-90ac-638a10c56cfc",
            "9d8c7ff9-31ef-4cd0-ba4a-37890615fcbf",
            "df60f107-34b1-40dc-81bb-35e22011c196",
            "af5414a8-74ea-47fb-b5a7-9e15c53b4b1e",
            "4806ee8f-34ca-4ae6-8138-44fe6e49743d",
            "ae0fcc5d-ac95-48fa-b4ca-587c07dfc3c3",
            "289e25e6-ded6-4641-8467-b92d503b4c16",
            "1718c31f-547d-4c30-ba91-ca0d37e8fc18",
            "580e14dd-287a-49ce-8658-2f243f9ae522",
            "1052e633-2147-433c-a69b-2bac9e1089d4",
            "2e53451c-cbdb-47fc-aa84-5e99fa5ded60",
            "a77ad794-0140-4d69-b8cb-538be6f1d5f3",
            "30aca534-de61-4024-b83f-b3cea5d2c9a7",
            "e60854a1-437c-49ab-8563-cef988023cf6",
            "a34659b0-fc20-4dea-a218-487712ba1df4",
            "06f07fc6-25c6-451d-8bed-9ddc8cf77e44",
            "5964c6cb-49e7-4030-88f3-3b8c56ec4356",
            "01c8b14e-226d-4b59-a68d-f2d7ea8e37a3",
            "df08aaf9-8125-4a0b-8b4f-1062bbd26c78",
            "0f423af4-a2ef-4431-861e-08160792d8b6",
            "2cd3b19f-8423-4af0-99fa-580a6017f1f8",
            "59b01062-a3a7-4edf-a9d6-9c24efd34b13",
            "1ee244ee-ffa2-4590-b556-9baa91885195",
            "1658fb75-363f-49a2-bc41-9018b5d250d3",
            "42fdb21d-8c33-4dc3-b043-5e151e0abd18",
            "de3d3e88-3aa4-4a71-9a6e-ce6e7cf3bcbd",
            "7cc64b0a-f66a-44da-a0e4-a0b585bd9b07",
            "25f5009c-3919-43b8-be88-3c552da4128e",
            "8f091ba3-d12b-43dc-824a-e79b67dcde4a",
            "9f47febb-65b9-46f2-9e3b-705897970655",
            "7da8f8ce-eddc-4405-9d1b-c5d0e4429d89",
            "b3073b78-3353-461f-9b97-31bdd6a21b18",
            "9a382ea5-781b-4f49-9c8c-920b07be3220",
            "aece2258-f49e-4bb6-be26-8993cd433417",
            "0b65a725-f85e-4ba5-97fd-6ef557534313",
            "dbc37e22-05eb-4de5-8ac2-82bd26d10c50",
            "65b0bf33-193c-4d70-aece-17646f489bf1",
            "8490ff03-a315-4870-8fd4-3ffc888661ca",
            "6e7ffe2c-fa02-43ba-8e49-a36a2fe9535c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5986268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10846505-32f1-479c-9b8a-485161f626ce",
          "title": "sample test",
          "fullFile": "/usr/src/app/test/puppeteer-mocha-basic.js",
          "file": "/test/puppeteer-mocha-basic.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld",
              "fullTitle": "sample test helloworld",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\npage = await browser.newPage();\n// await page.goto('http://192.168.10.180:5500');\n// const [p_target_user] = await page.$x(`//p[contains(., '345')]`);\nawait page.close();",
              "err": {},
              "uuid": "91526add-5f44-4f71-99f0-c556c2c683e1",
              "parentUUID": "10846505-32f1-479c-9b8a-485161f626ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91526add-5f44-4f71-99f0-c556c2c683e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 182,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "output": "report.html"
      },
      "version": "6.2.0"
    }
  }
}