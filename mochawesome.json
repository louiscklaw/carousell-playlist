{
  "stats": {
    "suites": 2,
    "tests": 477,
    "passes": 340,
    "pending": 0,
    "failures": 137,
    "start": "2023-01-11T12:53:46.231Z",
    "end": "2023-01-11T14:29:37.108Z",
    "duration": 5750877,
    "testsRegistered": 477,
    "passPercent": 71.27882599580713,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "08e9a1ea-8adb-4d47-b574-edaf3f0dc52e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
          "title": "click test",
          "fullFile": "/usr/src/app/test/click-test.js",
          "file": "/test/click-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld javascript -> keung_2022 -> 0",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 8897,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "49f6f7f3-5053-4316-893c-3f4195c84d0f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 1",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 8292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0a27d31a-0b28-4147-85d5-8e5fa395a0cb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 2",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 8115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7d4ba1a-9c28-4b8c-9334-a71aaa8feffc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 3",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 8012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "158e25ab-c799-4d88-b828-8d98cfafe2ee",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 4",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 7782,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd50b6ab-4eaf-424f-9107-0da0db2c81dc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 5",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 7597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9df10573-2380-4cc1-8a4a-77a4a6c8b216",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 0",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 0",
              "timedOut": false,
              "duration": 8090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "689b6597-cd9d-488c-b999-92b241040f39",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 1",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 1",
              "timedOut": false,
              "duration": 8013,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "267ec479-2316-490e-b2d3-11b9929d5d2b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 2",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 2",
              "timedOut": false,
              "duration": 8200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "da2345ee-4d58-42b7-97af-cc8137a078fd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 3",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 3",
              "timedOut": false,
              "duration": 8058,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d9b088c-f3e2-43af-a4b1-4d876c86631e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 4",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 4",
              "timedOut": false,
              "duration": 7927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a6e8fdac-1b29-4fd7-9f5e-7701067177df",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 5",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 5",
              "timedOut": false,
              "duration": 8398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0fe32857-33d9-42c6-8ece-4f96051d8f23",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 6",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 6",
              "timedOut": false,
              "duration": 7946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e77d5934-ed00-4703-b005-c05cdb666140",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 7",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 7",
              "timedOut": false,
              "duration": 8711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dcb6315a-7d9b-4c06-b472-d8901de7517a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 8",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 8",
              "timedOut": false,
              "duration": 8190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "717be1fc-b1b6-4bea-b7d3-9c1ba67f2331",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 9",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 9",
              "timedOut": false,
              "duration": 8455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78e0f9ba-9edb-456a-b531-19cfa3ad98e7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 10",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 10",
              "timedOut": false,
              "duration": 8315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0a4215c2-c715-4eb6-b1a3-1ece2ad70ca1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 0",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 8817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "86a2b2e6-5352-477a-b4e5-7a0c97c28eff",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 1",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 8248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d250c67-d28e-468f-90b0-69d9db24e673",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 2",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 7825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ddef7a0a-6630-4cb9-87e0-2899952474cb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 3",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 9246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ea8eb763-1e50-410c-96f2-897c3b18fdd0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 11198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c5fd3206-c6a8-4d8a-a1c6-1944f2314263",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 8363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a64eb61b-b55c-4ec8-a136-f1daf049218a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 8124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4618a751-f4be-4b5f-a7c3-18ee87808da2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 8447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b32d6ea7-25fd-4a84-a562-28dafbe344f0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 7926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57e7dd32-d091-484e-b2d4-2d47a43aa552",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 8317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e3770a01-5b60-4708-97e2-8581c85df9e5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 7901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a4cfb12b-9120-48bd-ae66-a32a1cd0edca",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 8503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4380f8f3-1305-44b2-be7b-853754d34ce7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 7959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b4b79188-633f-489f-bdc9-a179a9e2a123",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 9358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6e58c4cd-161c-430d-ae1f-171bdc27302a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 9090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a96e3f69-7700-4083-8f97-9da61010fae4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 8361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d09645b-15c4-4910-8dcb-50d203b53bd8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 8202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ef5e471-7860-4550-a4de-dba97762b03c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 13",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 13",
              "timedOut": false,
              "duration": 8541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a3019a2-386d-4a19-9589-0bd348c37064",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 14",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 14",
              "timedOut": false,
              "duration": 8064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc0de4c3-9843-4c3b-907a-15b657f214c8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 15",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 15",
              "timedOut": false,
              "duration": 8417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "92ad8672-b316-48a8-966a-327f67afd873",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 7737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "22ca5f23-5e3b-4cad-9fe7-74a5227c49ac",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 7854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7ad5d76b-2e07-46ee-959c-c883c964c00d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 7815,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "62c3dc72-578d-4b8b-a405-c1a36e1c771a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 8348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a72013c-b5b6-4c4b-b165-8497a06c7cb7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 8546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cd5b2287-258e-4c80-b768-a7a3808a220e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 8114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e5a809bb-4c01-43df-9c9b-42e5068f9135",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 8061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9e4e4c36-c0b9-4263-9834-3edcad4a77af",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 9342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0d574334-d5ab-48db-b3a5-1002ae8338ae",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 0",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 8229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9166fb69-1cf4-4898-a817-37e955881946",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 1",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 8467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "00ae913e-c0ba-4cba-a530-9edde8bba419",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 2",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 8004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6c7b9342-d4ec-4207-882e-28d7f2e874fd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 3",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 7849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "02fbb97d-c614-4b96-adac-409e87050206",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 4",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 8479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8de00dcf-568b-44fa-95f1-33c8155207e6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 5",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 8312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7f6c033d-1948-47be-b7c2-527299021ad4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 6",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 8417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2cd7537e-36c7-428d-bea8-a8c0fd95aeda",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 7",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 8210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46f49b6b-e34b-47f7-9fb4-97f750a243da",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 8",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 7949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "206e0e55-1638-4460-81a4-dcdf01902838",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 9",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 9095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ae40e6f-861e-4872-9eda-c001670dffe3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 10",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 7885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d3c84cdf-ddce-44aa-9e27-5b7307ef2970",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 11",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 8024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d56f93e-63a0-4892-a8ed-0d715fa37b56",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 12",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 8286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d94c72a-3705-4443-80f4-e32380746f60",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 13",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 8164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc302ea5-eb26-409c-ad51-78053471f087",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 14",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 14",
              "timedOut": false,
              "duration": 7827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d53bfd11-35b4-4b00-a521-8494f94439f9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 15",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 15",
              "timedOut": false,
              "duration": 8412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "55bfc167-9090-4422-bf9b-ce98bb89bde3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 16",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 16",
              "timedOut": false,
              "duration": 8162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc673673-6615-41ba-9380-bb5565952d12",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 7679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "248b0792-2841-4cea-9fa1-00edb7a1c6bf",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 7987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "513c28e0-2de4-40a1-92bb-468481ea6313",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 8576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e50670e6-205b-4077-a9d0-f189a1aac5f4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 7770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7582feb2-2a26-482d-8369-a263348f48eb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 7753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b4f0ded0-81cf-45e6-a8cd-0f15407c2c2f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 8099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60aebfda-e38e-4885-9306-2a2c6879173c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 8062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9c492ba-e394-4d78-9a2d-031f9d762271",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 8463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc68de83-7661-457e-9aa8-c735a247899d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 8155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f3d92d1-bd2e-494f-8ed2-6c76bcbc3435",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 8628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee227751-4ff6-4675-9e25-6d9b0836cff7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 8008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a8366d82-342e-4114-901d-7cb41dacf1fd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 8086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "934a077a-e352-45f7-9d57-c50a95118249",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 8488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3806d6a2-4d37-472c-bfab-3ccd30e31df4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 7816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0772e6c0-d8ba-4592-9d78-869ebb59b279",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 8246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ec4a9998-625b-4b07-bb51-2bee30206862",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 8059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7a67260b-3c1f-4ea5-89a7-3da94594dfe1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 9010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7508f18-401e-44ac-86e4-9cdaa9ea31d9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 8119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1c84db6e-1478-4d6d-b432-04fc94290224",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 9019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28df3a64-568c-4797-b81c-9cb12de26014",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 0",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 8927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ce726f73-f89f-4a4c-8ad6-838fd8318833",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 1",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 8760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f64371a1-bf05-4418-b20c-1a6d6f8ce3db",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 2",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 8977,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5bb2296e-ad45-43bc-9656-3343260590d0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 3",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 9383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a74bb06c-a5ac-4308-be5f-d0f5d9cd520c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 4",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 8418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4f0fc355-d4e5-4750-bdb3-7baa43fc8b29",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 5",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9847,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4ab06c44-7a47-405b-91ca-c8d1b705e581",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 6",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 9154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e80bbfdb-37fc-4857-9b8d-4aa536a58898",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 7",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 12099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d467b25-1145-437b-94ef-9a313714c09f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 8",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 7792,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "615d2dbc-e607-456e-90cf-4c6006d2346e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 9",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 8185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "24f09c9d-0056-4ad9-9f31-d66cc4092769",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 10",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 8575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d4a0947d-38c4-4eef-aaac-f13493b1a5c0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 11",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 8253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2d76d7e4-bb52-4905-bbf6-0ae21405788e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 12",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 8375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cd6f9895-a717-4482-ab8d-bb565bfdb839",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 13",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 8196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "697e0b39-7246-47a1-ac53-8b0e42f832ed",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 14",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 14",
              "timedOut": false,
              "duration": 8779,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba9aeae4-0d58-4183-b8b7-fe7d64bb84eb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 0",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 7849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b7dc694e-e071-4473-b8f6-84205bf2cc6c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 1",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 8816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "42f7a2ec-ab15-41bf-9e20-447bc197302b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 2",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 8495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "30418fc1-6d96-47a1-8bb5-4eacc5c89da5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 3",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 8062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7a0cfb7c-127e-488e-b240-723c70cc6c2a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 4",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 8253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fa54b21a-dd70-4458-b8dd-7339f12fec1f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 5",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 8628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "19988fd6-9695-4d54-b55d-9bc9d00f5187",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 6",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 8118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "27b3f1ce-d238-4f93-806e-def82927fea0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 7",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 8456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9389aa66-4d37-4f66-9107-1675e776115d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 8",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 8184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76560f19-fe17-455c-a665-b814036217da",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 9",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 8216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f7a98809-dbcd-477d-92dd-6d29dc47e2cb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 10",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 8539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8386d89-55b9-4067-a4dd-6b86bbd050be",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 11",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 8378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a733719-8fd4-43f6-aa81-a06a27447935",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 0",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 8569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3e1cd0dc-bb25-4fc0-9a50-b20095d99c24",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 1",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 8692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c3927bee-11c6-4f86-b919-7a0e6165e986",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 2",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 9011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c18cb547-2b6b-4db1-a072-6ba13206e2e3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 3",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 8237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7ed14f65-4ef2-4413-abd1-3354cffd587c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 4",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 8107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5659b3c2-384d-43d6-9cf0-118c919cd2cc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 5",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 8575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c93af842-efc1-4684-b5d4-d69ece1532dd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 6",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 8565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3f217a29-a299-42f5-a042-e34b22a9d8eb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 7",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 8130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a6a02f76-1350-4236-ad8a-32b7dbde16b2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 8",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 8196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d2d4a1c4-f35d-494b-8065-aa1aea07aa2f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 9",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 8408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1380ff89-927f-4a01-91e5-55e1ff9d44cc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 10",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 8882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c8c5bdda-c002-42aa-954e-af341f052592",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 11",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 8035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d333951e-ac48-451e-9c9d-50786344f7e6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 12",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 7607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1772778b-3043-47f8-ae42-b5f62e33b659",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 13",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 13",
              "timedOut": false,
              "duration": 7996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f9cf447-8f58-4cad-8da0-464a1d68aa6b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 14",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 14",
              "timedOut": false,
              "duration": 7412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3ff84815-2110-4e0b-9795-00bd54bafb0c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 15",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 15",
              "timedOut": false,
              "duration": 8410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "da2eb71d-371f-4088-881e-77df25aa8e39",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 0",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 0",
              "timedOut": false,
              "duration": 8341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a2ad8687-01ba-436f-86e3-cd42e13a3f2b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 1",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 1",
              "timedOut": false,
              "duration": 7996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f419052f-1865-4749-a002-a3d5c01b5fee",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 2",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 2",
              "timedOut": false,
              "duration": 7730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d0eed0a-0de2-40c3-a4f1-76dab0a12820",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 3",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 3",
              "timedOut": false,
              "duration": 7923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "18fcee87-c699-4ec0-90ec-2d735d5e1019",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 4",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 4",
              "timedOut": false,
              "duration": 7960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3f4422f4-63d3-4f3d-b018-1859f9f299a0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 5",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 5",
              "timedOut": false,
              "duration": 8053,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f73f8edc-bafa-4f24-bcbd-65790d4081c1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 6",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 6",
              "timedOut": false,
              "duration": 7723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "37b43fcc-bffa-4803-8a72-b975056fbca5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 7",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 7",
              "timedOut": false,
              "duration": 7866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a3fe427-168f-4a62-bbb5-c2e63e7c2a54",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 8",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 8",
              "timedOut": false,
              "duration": 8943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "17a8eaab-7285-46e2-b7b0-b312cb6e540b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 9",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 9",
              "timedOut": false,
              "duration": 8458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ecf5b164-3437-43b9-acdb-6de13cc9c146",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 0",
              "fullTitle": "click test helloworld python -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 15939,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3a7dc160-64f4-4f08-9d4a-120f35631750",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 1",
              "fullTitle": "click test helloworld python -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 15773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d9fae7c4-a840-4f6d-b814-635d7173e634",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 2",
              "fullTitle": "click test helloworld python -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 15439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "8f77c5ea-1482-4cba-b147-704c6a56cc5c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 3",
              "fullTitle": "click test helloworld python -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 15837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5e665eb2-4c9c-4874-9cd1-9553b126ea12",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 4",
              "fullTitle": "click test helloworld python -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 15582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "60ef45be-2487-4e16-be4a-2980951a9111",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 0",
              "fullTitle": "click test helloworld python -> memegod420 -> 0",
              "timedOut": false,
              "duration": 10034,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d3e783d-519c-4777-96aa-78545358dc8b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 1",
              "fullTitle": "click test helloworld python -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9823,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b39b683b-ea58-4756-a874-c084dc3517d0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 2",
              "fullTitle": "click test helloworld python -> memegod420 -> 2",
              "timedOut": false,
              "duration": 9593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6fd721e8-6676-4f13-83f8-a2ef26748f2a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 3",
              "fullTitle": "click test helloworld python -> memegod420 -> 3",
              "timedOut": false,
              "duration": 10205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8394c7c7-45e7-48d8-bd15-76ea87d3c066",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 4",
              "fullTitle": "click test helloworld python -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0c47555-772a-41e1-907b-e8e041977797",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 5",
              "fullTitle": "click test helloworld python -> memegod420 -> 5",
              "timedOut": false,
              "duration": 9876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67fe2f45-6203-438e-b8c1-ad2c8b38f607",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 6",
              "fullTitle": "click test helloworld python -> memegod420 -> 6",
              "timedOut": false,
              "duration": 10426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e5e64105-9eae-48dc-b671-cb65b0bc7be4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 7",
              "fullTitle": "click test helloworld python -> memegod420 -> 7",
              "timedOut": false,
              "duration": 9258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "443eab00-f468-4eb1-8c43-71a6a113831f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 8",
              "fullTitle": "click test helloworld python -> memegod420 -> 8",
              "timedOut": false,
              "duration": 9320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "23dc489a-1f37-48da-9ac6-a2e8c1b2f75b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 9",
              "fullTitle": "click test helloworld python -> memegod420 -> 9",
              "timedOut": false,
              "duration": 9371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "73e77426-640e-49e3-b384-a5b0a0a2fa31",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 10",
              "fullTitle": "click test helloworld python -> memegod420 -> 10",
              "timedOut": false,
              "duration": 9891,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bdfd5491-c373-4b4a-bc26-d5ff49c4f45c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 11",
              "fullTitle": "click test helloworld python -> memegod420 -> 11",
              "timedOut": false,
              "duration": 10059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "43ae7e77-fcfe-4d9b-83d8-f0e610af65b0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 12",
              "fullTitle": "click test helloworld python -> memegod420 -> 12",
              "timedOut": false,
              "duration": 10093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07d85aac-8e8d-47c3-a96e-85bea66738c7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 13",
              "fullTitle": "click test helloworld python -> memegod420 -> 13",
              "timedOut": false,
              "duration": 9620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8836bcf6-7d40-4f66-97be-72d8091e608c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 14",
              "fullTitle": "click test helloworld python -> memegod420 -> 14",
              "timedOut": false,
              "duration": 10189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5619ddaf-e322-40bc-8148-134bead2a1fc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 0",
              "fullTitle": "click test helloworld python -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aa07b57f-e297-4294-ae68-bff879102a97",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 1",
              "fullTitle": "click test helloworld python -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 21498,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "1f02348e-1ce4-4e72-8583-dcb1a289d077",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 2",
              "fullTitle": "click test helloworld python -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0b47294d-abc1-4195-82ad-5548d8e8aabe",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 3",
              "fullTitle": "click test helloworld python -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 22400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0056af1c-8057-4572-a10f-9698bc4f6af7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 10003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "38f79750-0a77-4e84-9ff7-a98888645761",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fb2e10e2-b8d4-40e9-868e-77ed7a10a970",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 9598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c05a0abd-1443-45da-abac-dbb05f849041",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 9746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3b430b20-4bf5-4b60-9f8a-5b47b1c81123",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 9595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "39b57a92-5faa-4e58-b70c-cdcc3eded260",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 9428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a5077f9-6b2e-42f7-93da-96df45b20c9f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 10672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11d61d05-6019-4535-8702-76ad00d68bb0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 10167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "66908785-f5d6-4748-810f-98d1fb7999dd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 9189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "37714927-142c-4556-92f6-b1fcf75b4e59",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 9618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67cb2997-aaff-4063-97e4-6bac3e7639c4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 10649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb17ede2-06d4-4df9-b476-83e2bea4455a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 9226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "806ea4b8-94a8-4076-8c0f-fca1e3d57fbd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 9442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a2e3a23a-f5b7-44f3-91a6-155bec375df8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "726b74a2-638f-4cbf-9317-0faff85811c5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "266489cc-da50-4345-959f-4621950c9869",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 10298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fdc46816-a044-4a43-9220-365d462340ca",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 11942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "10354cd7-bb86-450c-965a-4b6e65b85676",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 10478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52f5711e-2ee8-4e75-9a5a-b601833c6eb1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 11352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc16fba1-99bc-4ad8-a936-b2b5842f35fd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 10900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93cac585-45be-4661-ab70-b767f69cc9be",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 11635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c4692dae-07c3-4d15-a1b2-4e74838ed4f7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 11304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2de4d498-6e4f-42fc-98a9-8f738b64bbed",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 9945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cee1023b-60ec-4384-ba43-c240112ca7d6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 9390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ea973652-eedb-4256-8838-88b34462c7fb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 0",
              "fullTitle": "click test helloworld python -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 11488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8712b5e9-1483-46a2-88bc-e24b6dce319c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 1",
              "fullTitle": "click test helloworld python -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 10853,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cdf3096e-a820-4598-bac9-147bf1eb88e4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 2",
              "fullTitle": "click test helloworld python -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 9885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d2cacf7a-551d-4b86-9d5d-1c36dd0067db",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 3",
              "fullTitle": "click test helloworld python -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 11501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b1facaf-e14f-412d-98c0-1ad1691a4562",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 4",
              "fullTitle": "click test helloworld python -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 10045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52604cb0-17b5-4e13-b061-09664faedf2a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 5",
              "fullTitle": "click test helloworld python -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 9881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f0d1959-f9ba-4e3d-bbe1-13598c36754c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 23046,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4ff0e09d-82d1-4865-a948-345944edff46",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 22150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b81c8d5a-fb43-48b0-aa3c-82cd913f3bad",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 22797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5ab91286-a283-42ea-8950-9631e78a8fea",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 23146,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ef5c4bda-e8ef-4a84-9e5c-4da799508964",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 22896,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "41132663-9f5a-4b1a-9cea-260730a0b43b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 23099,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6fb10006-6592-4ddc-9706-5610303e85ec",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 22849,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9961a0ac-ad45-4cdc-a30d-5279132c0598",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 23211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "609687e7-9580-40ae-a8c4-5a9a051aaedb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 15325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "48236b1b-d1b9-4da9-8d2c-8ebdf60bb7ce",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 22892,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4c74ff9a-c2cd-488c-a07d-901f223c424c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 23084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9e75575c-0ef4-4d25-89c7-a1746fbe1a1a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 15686,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "070b5b9e-6da3-4b20-9ed0-d0af4a3f251d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 16738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "efa0a0a6-bc84-4701-8f8a-22d638746268",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 16222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "47d8fe02-fdf7-4c13-8b99-ffd52de8aae2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 15712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "af99f9cd-f1be-4da3-a7a7-cf0b8ce22d17",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 0",
              "fullTitle": "click test helloworld python -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 8956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46a4938a-fd43-4da2-8f1e-5bb85cc07caf",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 1",
              "fullTitle": "click test helloworld python -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 11802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a899c7a-c307-4111-8c28-9389fb32a9de",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 2",
              "fullTitle": "click test helloworld python -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 10380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2d5f610d-430f-4128-89ca-d3e709190cf1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 3",
              "fullTitle": "click test helloworld python -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 11018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ed975446-221e-4459-ad1e-7f47384fb7d8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 4",
              "fullTitle": "click test helloworld python -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76c6789b-0b54-4caf-b02a-1c5bf1d052db",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 5",
              "fullTitle": "click test helloworld python -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5244b1b9-a86f-4382-ac06-fefb5814d5c8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 6",
              "fullTitle": "click test helloworld python -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 9319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "414c42f1-b988-4ac3-9777-b20047a34221",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 7",
              "fullTitle": "click test helloworld python -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 12655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60372c2f-aa42-4626-99c2-906f73872990",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 8",
              "fullTitle": "click test helloworld python -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 10485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0bb099d7-68de-4b25-b0db-dd1b9541a1bd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 9",
              "fullTitle": "click test helloworld python -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 10544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "30ce6163-73ab-4c45-b746-1f5bfacd4810",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 10",
              "fullTitle": "click test helloworld python -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 9890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2bc6616e-4584-4d91-b750-9c60f1c29917",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 11",
              "fullTitle": "click test helloworld python -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 10230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "841b7fab-e764-4b80-a1c4-f00c5c0b20f6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 12",
              "fullTitle": "click test helloworld python -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 9617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c461e881-d192-4e9c-87b5-7f58de72b5bb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 13",
              "fullTitle": "click test helloworld python -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 9300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "651386d3-2694-4d3c-9f7b-e5deeae10430",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 14",
              "fullTitle": "click test helloworld python -> stocksamuel -> 14",
              "timedOut": false,
              "duration": 10012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0474b42-355a-4f06-acb8-a5fe5b9d9719",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 0",
              "fullTitle": "click test helloworld python -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 16405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1abbada9-48ad-4814-93ea-9634abc8af96",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 1",
              "fullTitle": "click test helloworld python -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 16302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6d0c6c25-1658-43f0-a55c-7a6eecc38ba3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 2",
              "fullTitle": "click test helloworld python -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 16607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "55ba53fd-a0c0-4dc3-a5b8-3c706b8c00ce",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 3",
              "fullTitle": "click test helloworld python -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 16277,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "99fb366b-1170-46ee-bbee-01fdea19a267",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 4",
              "fullTitle": "click test helloworld python -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 17376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7d9fa2cd-b199-458f-9c96-6d21bbd8d520",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 5",
              "fullTitle": "click test helloworld python -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 18031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0d8ba5cd-de31-4297-8d99-748ca91a3c7d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 6",
              "fullTitle": "click test helloworld python -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 16433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "972daaec-e8fb-498a-a9b0-0a6c3e45a6ba",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 7",
              "fullTitle": "click test helloworld python -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 16197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "abf9f1f7-8886-4bed-af83-cde6357c1c7c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 8",
              "fullTitle": "click test helloworld python -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 17463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "40a7a8f1-5b6d-4e55-99f9-fe6ea020dafa",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 9",
              "fullTitle": "click test helloworld python -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 17035,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "93caf0b9-50b6-450d-959f-ea49caf55ac1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 0",
              "fullTitle": "click test helloworld python -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 10433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb9bb38d-8515-43f1-b8da-1984652ea2ac",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 1",
              "fullTitle": "click test helloworld python -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 9456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d489718-4d26-4092-ad71-e64b1ca81872",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 2",
              "fullTitle": "click test helloworld python -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 10273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1daf156d-3116-46ea-8683-fe889237f274",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 3",
              "fullTitle": "click test helloworld python -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 10733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c624c85e-1ffa-45a5-b319-74f283cf3d70",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 4",
              "fullTitle": "click test helloworld python -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 10094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba662059-4e07-4dde-8775-a01243e2ef0f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 5",
              "fullTitle": "click test helloworld python -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 10004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "106a676d-e941-479d-a169-91a350925e71",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 6",
              "fullTitle": "click test helloworld python -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 10684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "45049718-b10f-4f6e-a9f6-bd94f70de40a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 7",
              "fullTitle": "click test helloworld python -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 9975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b4207cf1-6660-4883-8ad7-e01b936bcccc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 8",
              "fullTitle": "click test helloworld python -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 10173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "23388d09-8e81-4593-a6d7-703e7c6a468e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 9",
              "fullTitle": "click test helloworld python -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 10508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2af9b1ad-3f57-4a77-a4c2-d55896af062a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 10",
              "fullTitle": "click test helloworld python -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 11043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0e62af4-ab70-4748-b8c1-2e6d5b92fb0c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 11",
              "fullTitle": "click test helloworld python -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 9505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b474fc11-7dd0-4ffc-8c4f-d97853430c9d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 0",
              "fullTitle": "click test helloworld python -> hopeubest -> 0",
              "timedOut": false,
              "duration": 9547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b1a31a03-1305-41a5-a7d1-ad6721a1bdc3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 1",
              "fullTitle": "click test helloworld python -> hopeubest -> 1",
              "timedOut": false,
              "duration": 10879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e15d3f6b-5d79-4aff-b06c-a71a585516ce",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 2",
              "fullTitle": "click test helloworld python -> hopeubest -> 2",
              "timedOut": false,
              "duration": 11027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "90744743-b7bf-4d74-87b7-be0bb46076d3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 3",
              "fullTitle": "click test helloworld python -> hopeubest -> 3",
              "timedOut": false,
              "duration": 10868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "910c1e11-2b65-4b10-a2e7-b6366964b298",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 4",
              "fullTitle": "click test helloworld python -> hopeubest -> 4",
              "timedOut": false,
              "duration": 10408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "edb78894-9955-4b2e-b6ec-b49b01112a24",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 5",
              "fullTitle": "click test helloworld python -> hopeubest -> 5",
              "timedOut": false,
              "duration": 12132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7f2cc66-c631-4947-94d6-05632ef0184e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 6",
              "fullTitle": "click test helloworld python -> hopeubest -> 6",
              "timedOut": false,
              "duration": 9584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "df870e43-b7c0-4408-8f83-2bf8bc73ebe0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 7",
              "fullTitle": "click test helloworld python -> hopeubest -> 7",
              "timedOut": false,
              "duration": 10367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2440fe68-0f64-43fc-a916-808db0a8b28e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 8",
              "fullTitle": "click test helloworld python -> hopeubest -> 8",
              "timedOut": false,
              "duration": 9522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46073dff-2632-4a08-828f-5c8a82f4a615",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 9",
              "fullTitle": "click test helloworld python -> hopeubest -> 9",
              "timedOut": false,
              "duration": 9219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "94f419ed-b1d5-4532-a6eb-53bd3dc337dd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 10",
              "fullTitle": "click test helloworld python -> hopeubest -> 10",
              "timedOut": false,
              "duration": 9886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34e16d37-1aa9-469e-97e8-bc4af494c986",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 11",
              "fullTitle": "click test helloworld python -> hopeubest -> 11",
              "timedOut": false,
              "duration": 10162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e4ed0861-cf42-481a-aa9d-bc263da27038",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 12",
              "fullTitle": "click test helloworld python -> hopeubest -> 12",
              "timedOut": false,
              "duration": 9692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d58f173b-2cea-4d9a-80f8-0dd24247b7f9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 13",
              "fullTitle": "click test helloworld python -> hopeubest -> 13",
              "timedOut": false,
              "duration": 10309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72994ff1-439d-4e42-bca1-a07b47e394dc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 14",
              "fullTitle": "click test helloworld python -> hopeubest -> 14",
              "timedOut": false,
              "duration": 10573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1720498b-20c5-4f96-9262-2d2815b275f2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 15",
              "fullTitle": "click test helloworld python -> hopeubest -> 15",
              "timedOut": false,
              "duration": 9069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "035cf06e-6ca3-4bc5-9c96-9da6b54185b3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 16",
              "fullTitle": "click test helloworld python -> hopeubest -> 16",
              "timedOut": false,
              "duration": 10197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4f5c4f89-9d04-4a28-91e8-149cb22642c0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 0",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 9916,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f77e0f38-4f0b-40d0-9e8a-db60dfa1c044",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 1",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 9460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "49240971-749d-4786-af7d-5e9f3672f211",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 2",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 10222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba57560b-bdaa-4e7f-9ae7-d9b098cf4e0c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 3",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 10104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f1a232d-4be6-4359-96d3-930e48d758f1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 4",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 10029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d9377f0-fcf2-40b1-9e31-644828c50621",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 5",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 11149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8797b715-81a3-43c0-9762-c4f4b569d5c9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 6",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 10384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "94a96fb2-d42e-4fb9-b2ac-546a92f0b400",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 7",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 11515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "727a6d48-3a85-4712-b601-a5289e1679b3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 0",
              "fullTitle": "click test helloworld coding -> memegod420 -> 0",
              "timedOut": false,
              "duration": 10045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f3e89c33-b84d-400a-895c-3bf497337c2e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 1",
              "fullTitle": "click test helloworld coding -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4dfb1c57-2252-4adf-b662-f1eaa603aa03",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 2",
              "fullTitle": "click test helloworld coding -> memegod420 -> 2",
              "timedOut": false,
              "duration": 10028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5c9c707a-c96e-404b-aeae-c370e7959ac5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 3",
              "fullTitle": "click test helloworld coding -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b84d6acf-9d81-44c9-b56c-3e67f5f14224",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 4",
              "fullTitle": "click test helloworld coding -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7eefec48-3272-46c3-af36-d229fa8c1ed3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 5",
              "fullTitle": "click test helloworld coding -> memegod420 -> 5",
              "timedOut": false,
              "duration": 9530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "14527dea-2e36-48f9-81ad-8b6a781e7ab4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 6",
              "fullTitle": "click test helloworld coding -> memegod420 -> 6",
              "timedOut": false,
              "duration": 11597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1ffd4ecf-545d-4263-a15c-72fe10dbf3bb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 7",
              "fullTitle": "click test helloworld coding -> memegod420 -> 7",
              "timedOut": false,
              "duration": 12012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e177db85-fb7d-455e-9dca-79966f9dd8e0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 8",
              "fullTitle": "click test helloworld coding -> memegod420 -> 8",
              "timedOut": false,
              "duration": 10798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "873cd0b4-1343-415c-8238-6d4fa2994dfb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 9",
              "fullTitle": "click test helloworld coding -> memegod420 -> 9",
              "timedOut": false,
              "duration": 9875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "40a9ddd7-7fd3-415f-8a31-c6c5bf2d2a49",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 10",
              "fullTitle": "click test helloworld coding -> memegod420 -> 10",
              "timedOut": false,
              "duration": 9669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88f90c3b-9a03-4807-b881-d85afc5a97e4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 11",
              "fullTitle": "click test helloworld coding -> memegod420 -> 11",
              "timedOut": false,
              "duration": 10311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "25ddd8a9-2f63-43a2-bcb4-289265140372",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 0",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22955,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1353c241-8399-4221-957b-743e86592f11",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 1",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 22022,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4a1a3301-d589-4401-a4b4-3f7daa3e891d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 2",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d680b424-ca41-4979-a142-d915e6820250",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 3",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 22392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "50eb878b-bb17-4001-bda4-e71cca9bed03",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 4",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 22482,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9d505fd3-cd9f-457c-8df4-b0830f64e414",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 5",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 21256,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f4a07523-d56a-44dd-8d09-6addba82a1c2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 6",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 22953,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "277b5dd1-7c9f-400c-aeac-b69fd55ff3f3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 7",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 22319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "566c2682-028f-41bf-b4fc-6c50fd2d2973",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 8",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 22904,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d60cae4e-ed4c-4156-8d43-fc5092de1f2c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 9",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 16682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7b377235-e39b-4a25-b9fd-b3441d3b4c64",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 10",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 22155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7184ca0d-279c-4300-be3b-c3fa2be9b535",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 11",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 21751,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "577f27b0-fa45-4398-84a0-113ded0b4e73",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 12",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 16879,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d0ec25bc-3d8c-4514-b0f0-7a27362368f7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 10418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3bfb3880-dfa8-4db7-bcd4-9fd245b22eb0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10603,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "12e40742-a725-4c8a-a838-3f12dfac8ac6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 9866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3efe5c49-16e7-473c-9aa2-b85f8a7ca71c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 11197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "41004cb0-cf82-4885-a0e4-d7b2204479d1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "018e92e1-a466-43a9-8551-598fd7738472",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0a61cf5f-1486-4a27-aa17-4dbdf9f7e1b0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 12054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "857a8a3e-4e2d-4464-a0e0-ec2dc0dacc6a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 10031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b5705e23-036f-4083-b21c-5162832612e6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 0",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 15362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bdd0fd11-ae6f-4867-bbe0-55796c8aa477",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 1",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 15629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "30a6c5cf-a792-4c93-8f69-cf2d15cc6970",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 2",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 15944,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "58009436-ca60-415a-ad09-f0a8d02f126a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 3",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 15326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8e8b1723-65d7-4dc1-aa34-e589735d5bcf",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 4",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 15463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3f892b59-5757-4483-bb4c-dfc08d44df19",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 5",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 15433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a465f1e5-6c12-442f-acf6-e452f39eca65",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 6",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 15322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ab69de7e-a5bf-4f76-8e69-8f299de3c597",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 7",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 16274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "03d5831e-44f9-479b-b18c-e0aaa87dc16c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 8",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 15396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d987fd8b-19cc-4c1d-8915-5d8e8a1aa9c9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 9",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 15558,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3fde41d6-8f37-4859-930e-c9f8b267c4db",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 10",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 15519,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "59cb7ca0-ce4c-4bbc-988d-5942d55596b1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 11",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 15661,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5989b9ec-47c5-4898-bda1-42bfb6c9fb41",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 12",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 15706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6bff67ad-b0a0-4a30-aa26-cd0849f4f54f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 13",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 16073,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b1c8604e-1048-4993-8c41-d00af4e418fb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 11428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "69ed41b6-3344-46e0-813f-ec9cad7fc1d4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 9883,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6e0e8a94-fdac-469b-be88-5b8b64a025f4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 10116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0265d4d-c28a-42b4-a938-2d5f94b300c2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 10201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2cbe35e7-b8c4-4bf4-8a9c-bdd93354c19e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 10264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "35eb1e00-4687-4c57-ae87-54f8db18896e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 10385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "63df83af-1e43-4f11-8147-6a81e6dc1f8d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 10335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "04524e6f-0d4e-4aa1-a3b1-4a9011fe31ae",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 9004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "638f0813-2d42-4768-b59d-f82acd66a2b7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 9617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91b90122-2b62-4e5f-a13b-a0a28b63ca14",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 9929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b7f2784d-b9cf-4445-a7f6-7d44155e0f25",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 11094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "29cb226f-9123-4958-bb04-dd5fb0c4f20c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 10444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "95462073-2dc7-44b5-b34c-516e024ecc55",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 10798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7c4fcb77-1e2e-4701-a7b1-66c202881eb8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 9550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f203e5b0-2f3d-4986-b078-f56e7077bd0c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 14",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 14",
              "timedOut": false,
              "duration": 9918,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f5a723fa-5e9b-45db-99e0-67348257a329",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 15",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 15",
              "timedOut": false,
              "duration": 10556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2d5bfc9c-edb1-40bd-a56a-187cdec7e0d9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 9346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5ecc3753-0944-464c-b272-f8d51baa3b9b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 9951,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "86abfc39-2358-4b94-bba4-b0f3e864cbdc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 10707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4ee39586-37de-4cbe-8272-51d4241abaa3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 9927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "edd01273-067e-4143-9069-1642770e0549",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 0",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 10416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e93e4d52-d402-40fc-9288-35ed1a5d4807",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 1",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc0bc691-93fb-48a0-b139-85853e3f7e91",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 2",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 10406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5c9613d5-a7d4-4a5c-9812-630b8372473d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 3",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 11536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "268810b0-938b-41c3-b872-db20ac466b92",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 4",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 10356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4976bdfd-bbf7-43e1-b786-fab2b7df4c61",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 5",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 10267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4d1c5f98-e69a-4aa6-a8f0-721935424879",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 6",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 10472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be557da5-d071-4f76-8328-2dc11d1afd41",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 7",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 10565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eaabe873-fed6-4ada-ad50-49257e125e05",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 8",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 9846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ed3670f4-79ce-472f-9051-af8eb818d97d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 0",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 10507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2eaa149b-5be2-4b4d-bea0-01db25e66334",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 1",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 10556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "952df2e8-f248-4901-ace6-194e272c3337",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 2",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 10521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b11f193-3c14-4f19-a838-4b12d09f051a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 3",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 10761,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34cbdd0f-5589-4929-9064-252aa835a751",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 4",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 9549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5547c4bd-9738-441e-93bc-28124d55e5a0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 5",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 10221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2e6d135-9bab-4843-ac82-865206e986d8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 6",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 9932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "009d735c-57d7-4f24-90f1-e5cf7422c580",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 0",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 16314,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d6f6bca3-703d-4cd3-841b-49b5a59dfbed",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 1",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 15830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fee343fb-9e01-41a9-a298-b0491bb1fd22",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 2",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 16608,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "c0e6cf40-6c86-47cc-a07c-1805ddd22444",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 3",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 16610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ab18f439-0dae-4c41-8fe3-09e5d0a17f0c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 4",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 16076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c446c448-092c-44b8-b132-cc0cc78b5d77",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 5",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 16119,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7691f44c-7e28-4527-86a9-ad8d3e17ccea",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 6",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 17837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "50dbc53a-8bda-4489-a9f6-f536d8e5c579",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 7",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 19538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "750b38f8-59fb-4a87-85bf-0059b7a9c007",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 0",
              "fullTitle": "click test helloworld coding -> hopeubest -> 0",
              "timedOut": false,
              "duration": 14219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fd6c0a12-e5ae-454c-b5cd-857d2002c84c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 1",
              "fullTitle": "click test helloworld coding -> hopeubest -> 1",
              "timedOut": false,
              "duration": 9009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2024b745-0015-4bca-ae77-7cd4224e05a2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 2",
              "fullTitle": "click test helloworld coding -> hopeubest -> 2",
              "timedOut": false,
              "duration": 10990,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ebca0fc-4e31-413a-9ed4-53e538a7313f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 3",
              "fullTitle": "click test helloworld coding -> hopeubest -> 3",
              "timedOut": false,
              "duration": 9757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8df96a5c-4ba5-407a-954c-21b1a7d6a241",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 4",
              "fullTitle": "click test helloworld coding -> hopeubest -> 4",
              "timedOut": false,
              "duration": 10850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "275b8060-1e30-44ca-8767-3d6cc83e5875",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 5",
              "fullTitle": "click test helloworld coding -> hopeubest -> 5",
              "timedOut": false,
              "duration": 10092,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd0b5195-96b4-4b34-b3b3-7a0310afecd0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 6",
              "fullTitle": "click test helloworld coding -> hopeubest -> 6",
              "timedOut": false,
              "duration": 9856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34b78a5a-3e30-422b-b391-897db94a34ad",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 7",
              "fullTitle": "click test helloworld coding -> hopeubest -> 7",
              "timedOut": false,
              "duration": 9956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d47f477c-e987-4fb9-87ef-1dccddd00208",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 8",
              "fullTitle": "click test helloworld coding -> hopeubest -> 8",
              "timedOut": false,
              "duration": 9354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a3e7e50-16cd-4c60-884d-7e4da5f2c993",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 9",
              "fullTitle": "click test helloworld coding -> hopeubest -> 9",
              "timedOut": false,
              "duration": 10115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3b003594-1cc0-4c78-8b47-2704a1c72b46",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 10",
              "fullTitle": "click test helloworld coding -> hopeubest -> 10",
              "timedOut": false,
              "duration": 9893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ec1ac921-fb59-4027-b3f3-4b7b6de93f83",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 11",
              "fullTitle": "click test helloworld coding -> hopeubest -> 11",
              "timedOut": false,
              "duration": 11060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1b787c7f-436a-4e4d-8863-b0d96b52ac49",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 12",
              "fullTitle": "click test helloworld coding -> hopeubest -> 12",
              "timedOut": false,
              "duration": 9373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8cb59afd-a57c-464b-aa2a-27491bf62349",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 13",
              "fullTitle": "click test helloworld coding -> hopeubest -> 13",
              "timedOut": false,
              "duration": 10043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "337d9670-f38d-4ea3-a836-9398da9cb407",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 14",
              "fullTitle": "click test helloworld coding -> hopeubest -> 14",
              "timedOut": false,
              "duration": 10138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "800ea36f-b8e3-4de8-baad-498b1f040f73",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 0",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 10232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "56dcc65a-3e91-4ff2-8c51-08dc8f30f6c0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 1",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 10080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c07d40a1-7882-4bc1-8e17-db1679e2fe32",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 2",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 11060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "618944c6-729c-4233-9b68-02eb1766c3f5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 3",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 11082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60c302c2-777c-4fba-b408-cacb31ab7f45",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 4",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 11238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b55dccf3-8d13-44bd-aa41-2905ff2d7b2a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 5",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 10607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9951d1c2-31fd-4f11-892d-97828f309b7b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 6",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 10106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eacbb173-9985-4312-9859-8df324b806a0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 7",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 11758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8de0c2b3-04e5-4f89-9042-f14a33a22944",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 8",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 11312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "540b2d38-fc52-4b29-ae1b-aed349f43e91",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 9",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 11906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e149ae4e-2cda-4602-a4c2-e630bb65f474",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 10",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 11313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f68988b-0835-4e96-aca7-dfb41da221f2",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 11",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 10271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f2c46d5c-5854-48af-b078-ceb174d2cc2d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 12",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 10096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c36a00c2-dd88-4357-9178-24578e998cc0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 13",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 9219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2c63c06e-fdd7-4f51-a434-e71192577159",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 14",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 14",
              "timedOut": false,
              "duration": 10448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8b9d6b92-c81e-44a5-a535-4be9ea798436",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 15",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 15",
              "timedOut": false,
              "duration": 12724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cd475aed-dc82-4a88-b0a6-001d14c84d89",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 0",
              "fullTitle": "click test helloworld programming -> memegod420 -> 0",
              "timedOut": false,
              "duration": 9731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cbdda663-714c-4e84-8892-89dbff860d56",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 1",
              "fullTitle": "click test helloworld programming -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ebd602b5-0178-453d-bc5f-8c2ff9732380",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 2",
              "fullTitle": "click test helloworld programming -> memegod420 -> 2",
              "timedOut": false,
              "duration": 10431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5abf1b5d-1aff-4053-9665-18d4af7855e9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 3",
              "fullTitle": "click test helloworld programming -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ab1c4e70-8e32-465b-ba73-9b4dee9ec624",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 4",
              "fullTitle": "click test helloworld programming -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9887,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d340e8a4-4e07-4391-9473-bc5e6ec11113",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 5",
              "fullTitle": "click test helloworld programming -> memegod420 -> 5",
              "timedOut": false,
              "duration": 10185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9770a671-4623-406f-8eaa-5750a80133de",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 6",
              "fullTitle": "click test helloworld programming -> memegod420 -> 6",
              "timedOut": false,
              "duration": 10068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26a6369e-fed6-4122-b213-12280607e1bd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 7",
              "fullTitle": "click test helloworld programming -> memegod420 -> 7",
              "timedOut": false,
              "duration": 9804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "36d4a777-f9e7-4590-a0ff-336a5d043eb1",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 8",
              "fullTitle": "click test helloworld programming -> memegod420 -> 8",
              "timedOut": false,
              "duration": 10328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "50d26063-2b12-4c46-a039-4c02d6669cc0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 9",
              "fullTitle": "click test helloworld programming -> memegod420 -> 9",
              "timedOut": false,
              "duration": 9271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "24ca5072-21bb-4fc8-bc81-38af657285b4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 0",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22917,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "137c1ea2-e520-49ce-b1f0-27f996993562",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 1",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 22541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fc731776-3096-47f1-9f8e-fec5a4266721",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 2",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22421,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cbec9e74-4b0f-486c-addc-003954c480e0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 3",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 16924,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "c453235e-b992-4dea-be33-31a8af019e21",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 4",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 21679,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6b58b1e8-82b7-42c9-8a96-7ff805b80564",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 5",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 25180,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bf425d65-21a4-4267-9aaa-a6a05b650837",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 6",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 22026,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "97796e38-06f4-4df3-8df8-269b259bc551",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 7",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 22015,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "edaada34-c451-44fd-98f7-1199b342a558",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 8",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 25299,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "24d6646f-a23f-4ba7-90b0-462983fa0597",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 10113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "02c4323e-e4a3-49be-8c1f-2e018bac2afc",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "859d670c-480d-4ddd-ac1b-31ea5b13e3ef",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 10303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d293832e-69f5-4a73-8be6-f9e6208a5c47",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 13742,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7b0b5c68-5d4e-4d0a-beb6-38c23282e513",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 10249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "054718e5-ab32-461a-98ea-8c728753b810",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 10183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c9d1bca6-35a1-4cf0-9156-cdaf71f45dc6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 9549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "16ca1358-f736-4474-938e-991a1e2e11f3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 10462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ca742e1-ae31-4677-8942-55e3e5e08895",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 16349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9d425b4a-c046-4fd9-acde-49ea016d8f49",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 18458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "73ec373e-53f3-4574-8421-b9a3440aad1f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 17320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d454e4a2-6618-45ff-a96d-efd7115c3cdf",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 16495,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b6cb063e-3f44-4c3d-9744-6c8533b477ec",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 19823,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "12479885-ffb4-4b48-94ef-4e0388790ac0",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 16328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5601a742-9b1f-4807-9e17-6ca66c12fa4c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 17318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "dbfcf049-06e0-4750-917e-0243d800f25f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 16960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "539a82a7-609d-497a-ab0f-98c5c51f90f7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 16674,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a58b9bbf-52db-4d02-9589-48ee9d69a0a9",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 0",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 15745,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "07174654-0da5-4b1d-9a2e-5589ea2b66b5",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 1",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 15077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "14a1285b-694f-41c0-9594-7661a028744b",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 2",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 16089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "752921d4-707c-4288-b47b-bace55dd77ef",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 3",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 19191,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "698746f3-d31e-4cf9-ad0d-b29c237cb94a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 22760,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "be3c8ae6-71ac-40c7-a467-0a776859250e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 22890,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6b03fdbb-719e-4ba4-8948-b08bc0482783",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 22201,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a57886a6-8ced-4876-bce8-f72fa0da9204",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 23404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e0804b87-361e-4390-852e-1c62742803f4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 15132,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1e90e5e5-7251-4004-83f9-1596a0c2b060",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 23269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0dd6ac53-7275-4158-b811-da29e236d26f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 22845,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a12ff9a6-0a2b-4a2a-9f1d-5cff7ff6fdca",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 21905,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fdf7b62d-a8bd-4ac6-bedd-78055868a9fb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 22816,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "34508074-70fa-4ece-9a97-4574749a408e",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 22603,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "dadca357-1c86-43ae-a784-e84a514d0e79",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 22533,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b383467d-a8f3-4fe5-ba4e-5ce8b9cd09ad",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 16854,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5974e963-62a8-41b2-ba10-4c6a31b966a4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 16731,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6f13fa53-b6bf-431e-ae07-c7179f081887",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 16425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4044479a-e790-46c9-a7ab-0c024d86bcd6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 0",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 10211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7b94f530-b1a8-4e0c-9adb-6737a8d93b65",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 1",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 10283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "61118e94-c7a3-4962-bf74-cd6d930f3a70",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 2",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1e52bb18-f2fa-4eb4-9703-bcdd9154579a",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 0",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 16097,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "03571b1d-56c3-4066-ab7e-2a751fd537a4",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 1",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 16752,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fff4fc64-feeb-4fec-aa9a-58edb010ec4c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 2",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 16227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8934e840-4f3e-41ce-bd55-2497b0ecd417",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 3",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 16482,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "467c4a4a-1ac3-4f8a-8608-eb0f0d27daeb",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 4",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 17900,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f468f700-5741-4641-b47a-00218e626e3f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 5",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 16426,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "640c155e-d0ba-4165-8ffe-c1777cb256bd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 6",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 15718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5f79427b-5843-477f-96a1-50973ceaced7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 7",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 16688,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a2461927-c816-4e8c-859c-5ec5eff2f29d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 8",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 16512,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "365ff2f0-c3b4-422c-8115-e75f47dadce3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 9",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 16291,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3edd81aa-7d25-4b04-9a86-09b5f08a8240",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 10",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 16245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "30ef955d-d6d6-4afd-9dc8-01e22d63c399",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 11",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 16358,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c16d949f-7c0f-46b2-929b-9bc44d82180c",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 0",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 16467,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6ee635c9-87a2-45ad-9e60-59ab9a866226",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 1",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 15714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9ab07dbb-c33f-42a1-bef7-29639456c807",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 2",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 15252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "95ebb1c3-8304-42d3-92b5-33c194df0087",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 0",
              "fullTitle": "click test helloworld programming -> hopeubest -> 0",
              "timedOut": false,
              "duration": 16147,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a8c1a097-b183-4711-91ed-5af2012b2bfe",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 1",
              "fullTitle": "click test helloworld programming -> hopeubest -> 1",
              "timedOut": false,
              "duration": 16353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5fc5ef8d-54a4-4110-a6cb-6f87428dd542",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 2",
              "fullTitle": "click test helloworld programming -> hopeubest -> 2",
              "timedOut": false,
              "duration": 16541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3b7468d9-3f2f-4c30-86c0-928b7e65e882",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 3",
              "fullTitle": "click test helloworld programming -> hopeubest -> 3",
              "timedOut": false,
              "duration": 19930,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b1bcc4dc-92fc-4526-93c4-b5b209eedcb8",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 4",
              "fullTitle": "click test helloworld programming -> hopeubest -> 4",
              "timedOut": false,
              "duration": 17059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8a6133f5-2439-4837-a6e4-f90fcafc4388",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 5",
              "fullTitle": "click test helloworld programming -> hopeubest -> 5",
              "timedOut": false,
              "duration": 17599,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "63fe18f5-0daa-4765-840f-5568907083a6",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 6",
              "fullTitle": "click test helloworld programming -> hopeubest -> 6",
              "timedOut": false,
              "duration": 16253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "86a8266e-8fec-43f3-af0b-7c801204a5f7",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 7",
              "fullTitle": "click test helloworld programming -> hopeubest -> 7",
              "timedOut": false,
              "duration": 15377,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8b49d154-728f-4dfc-8475-14d8f1360f1d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 8",
              "fullTitle": "click test helloworld programming -> hopeubest -> 8",
              "timedOut": false,
              "duration": 16065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ce407342-90cc-432b-8aa7-bd48e0f89aec",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 9",
              "fullTitle": "click test helloworld programming -> hopeubest -> 9",
              "timedOut": false,
              "duration": 16866,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2ba5076c-447f-4356-97d9-83c0d9d6af3f",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 10",
              "fullTitle": "click test helloworld programming -> hopeubest -> 10",
              "timedOut": false,
              "duration": 16864,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c06f5f44-1b00-4b17-aa25-5efe0305d0cd",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 11",
              "fullTitle": "click test helloworld programming -> hopeubest -> 11",
              "timedOut": false,
              "duration": 16621,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c26fd3a1-c8ec-4fc3-bc16-ea538c8c73b3",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 12",
              "fullTitle": "click test helloworld programming -> hopeubest -> 12",
              "timedOut": false,
              "duration": 17268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "396669d2-0eb8-4bee-998d-53eff866b649",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 13",
              "fullTitle": "click test helloworld programming -> hopeubest -> 13",
              "timedOut": false,
              "duration": 20328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9652a067-5adb-4fcc-b3bc-af312ec83044",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 14",
              "fullTitle": "click test helloworld programming -> hopeubest -> 14",
              "timedOut": false,
              "duration": 15684,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0750efe5-df3b-4d78-ada4-70042c4eb729",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 15",
              "fullTitle": "click test helloworld programming -> hopeubest -> 15",
              "timedOut": false,
              "duration": 16475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "faf903ec-3aec-4fda-a4d2-2206f9b72594",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 16",
              "fullTitle": "click test helloworld programming -> hopeubest -> 16",
              "timedOut": false,
              "duration": 15718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d859668f-b694-40f8-b0d5-bee5fe4cd67d",
              "parentUUID": "2f778dd6-0cf6-49a7-b2e4-8bbd8045e121",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49f6f7f3-5053-4316-893c-3f4195c84d0f",
            "0a27d31a-0b28-4147-85d5-8e5fa395a0cb",
            "e7d4ba1a-9c28-4b8c-9334-a71aaa8feffc",
            "158e25ab-c799-4d88-b828-8d98cfafe2ee",
            "dd50b6ab-4eaf-424f-9107-0da0db2c81dc",
            "9df10573-2380-4cc1-8a4a-77a4a6c8b216",
            "689b6597-cd9d-488c-b999-92b241040f39",
            "267ec479-2316-490e-b2d3-11b9929d5d2b",
            "da2345ee-4d58-42b7-97af-cc8137a078fd",
            "3d9b088c-f3e2-43af-a4b1-4d876c86631e",
            "a6e8fdac-1b29-4fd7-9f5e-7701067177df",
            "0fe32857-33d9-42c6-8ece-4f96051d8f23",
            "e77d5934-ed00-4703-b005-c05cdb666140",
            "dcb6315a-7d9b-4c06-b472-d8901de7517a",
            "717be1fc-b1b6-4bea-b7d3-9c1ba67f2331",
            "78e0f9ba-9edb-456a-b531-19cfa3ad98e7",
            "0a4215c2-c715-4eb6-b1a3-1ece2ad70ca1",
            "86a2b2e6-5352-477a-b4e5-7a0c97c28eff",
            "6d250c67-d28e-468f-90b0-69d9db24e673",
            "ddef7a0a-6630-4cb9-87e0-2899952474cb",
            "ea8eb763-1e50-410c-96f2-897c3b18fdd0",
            "c5fd3206-c6a8-4d8a-a1c6-1944f2314263",
            "a64eb61b-b55c-4ec8-a136-f1daf049218a",
            "4618a751-f4be-4b5f-a7c3-18ee87808da2",
            "b32d6ea7-25fd-4a84-a562-28dafbe344f0",
            "57e7dd32-d091-484e-b2d4-2d47a43aa552",
            "e3770a01-5b60-4708-97e2-8581c85df9e5",
            "a4cfb12b-9120-48bd-ae66-a32a1cd0edca",
            "4380f8f3-1305-44b2-be7b-853754d34ce7",
            "b4b79188-633f-489f-bdc9-a179a9e2a123",
            "6e58c4cd-161c-430d-ae1f-171bdc27302a",
            "a96e3f69-7700-4083-8f97-9da61010fae4",
            "7d09645b-15c4-4910-8dcb-50d203b53bd8",
            "9ef5e471-7860-4550-a4de-dba97762b03c",
            "9a3019a2-386d-4a19-9589-0bd348c37064",
            "dc0de4c3-9843-4c3b-907a-15b657f214c8",
            "92ad8672-b316-48a8-966a-327f67afd873",
            "22ca5f23-5e3b-4cad-9fe7-74a5227c49ac",
            "7ad5d76b-2e07-46ee-959c-c883c964c00d",
            "62c3dc72-578d-4b8b-a405-c1a36e1c771a",
            "9a72013c-b5b6-4c4b-b165-8497a06c7cb7",
            "cd5b2287-258e-4c80-b768-a7a3808a220e",
            "e5a809bb-4c01-43df-9c9b-42e5068f9135",
            "9e4e4c36-c0b9-4263-9834-3edcad4a77af",
            "0d574334-d5ab-48db-b3a5-1002ae8338ae",
            "9166fb69-1cf4-4898-a817-37e955881946",
            "00ae913e-c0ba-4cba-a530-9edde8bba419",
            "6c7b9342-d4ec-4207-882e-28d7f2e874fd",
            "02fbb97d-c614-4b96-adac-409e87050206",
            "8de00dcf-568b-44fa-95f1-33c8155207e6",
            "7f6c033d-1948-47be-b7c2-527299021ad4",
            "2cd7537e-36c7-428d-bea8-a8c0fd95aeda",
            "46f49b6b-e34b-47f7-9fb4-97f750a243da",
            "206e0e55-1638-4460-81a4-dcdf01902838",
            "9ae40e6f-861e-4872-9eda-c001670dffe3",
            "d3c84cdf-ddce-44aa-9e27-5b7307ef2970",
            "5d56f93e-63a0-4892-a8ed-0d715fa37b56",
            "6d94c72a-3705-4443-80f4-e32380746f60",
            "cc302ea5-eb26-409c-ad51-78053471f087",
            "d53bfd11-35b4-4b00-a521-8494f94439f9",
            "55bfc167-9090-4422-bf9b-ce98bb89bde3",
            "cc673673-6615-41ba-9380-bb5565952d12",
            "248b0792-2841-4cea-9fa1-00edb7a1c6bf",
            "513c28e0-2de4-40a1-92bb-468481ea6313",
            "e50670e6-205b-4077-a9d0-f189a1aac5f4",
            "7582feb2-2a26-482d-8369-a263348f48eb",
            "b4f0ded0-81cf-45e6-a8cd-0f15407c2c2f",
            "60aebfda-e38e-4885-9306-2a2c6879173c",
            "a9c492ba-e394-4d78-9a2d-031f9d762271",
            "fc68de83-7661-457e-9aa8-c735a247899d",
            "8f3d92d1-bd2e-494f-8ed2-6c76bcbc3435",
            "ee227751-4ff6-4675-9e25-6d9b0836cff7",
            "a8366d82-342e-4114-901d-7cb41dacf1fd",
            "934a077a-e352-45f7-9d57-c50a95118249",
            "3806d6a2-4d37-472c-bfab-3ccd30e31df4",
            "0772e6c0-d8ba-4592-9d78-869ebb59b279",
            "ec4a9998-625b-4b07-bb51-2bee30206862",
            "7a67260b-3c1f-4ea5-89a7-3da94594dfe1",
            "e7508f18-401e-44ac-86e4-9cdaa9ea31d9",
            "1c84db6e-1478-4d6d-b432-04fc94290224",
            "28df3a64-568c-4797-b81c-9cb12de26014",
            "ce726f73-f89f-4a4c-8ad6-838fd8318833",
            "f64371a1-bf05-4418-b20c-1a6d6f8ce3db",
            "5bb2296e-ad45-43bc-9656-3343260590d0",
            "a74bb06c-a5ac-4308-be5f-d0f5d9cd520c",
            "4f0fc355-d4e5-4750-bdb3-7baa43fc8b29",
            "4ab06c44-7a47-405b-91ca-c8d1b705e581",
            "e80bbfdb-37fc-4857-9b8d-4aa536a58898",
            "9d467b25-1145-437b-94ef-9a313714c09f",
            "615d2dbc-e607-456e-90cf-4c6006d2346e",
            "24f09c9d-0056-4ad9-9f31-d66cc4092769",
            "d4a0947d-38c4-4eef-aaac-f13493b1a5c0",
            "2d76d7e4-bb52-4905-bbf6-0ae21405788e",
            "cd6f9895-a717-4482-ab8d-bb565bfdb839",
            "697e0b39-7246-47a1-ac53-8b0e42f832ed",
            "ba9aeae4-0d58-4183-b8b7-fe7d64bb84eb",
            "b7dc694e-e071-4473-b8f6-84205bf2cc6c",
            "42f7a2ec-ab15-41bf-9e20-447bc197302b",
            "30418fc1-6d96-47a1-8bb5-4eacc5c89da5",
            "7a0cfb7c-127e-488e-b240-723c70cc6c2a",
            "fa54b21a-dd70-4458-b8dd-7339f12fec1f",
            "19988fd6-9695-4d54-b55d-9bc9d00f5187",
            "27b3f1ce-d238-4f93-806e-def82927fea0",
            "9389aa66-4d37-4f66-9107-1675e776115d",
            "76560f19-fe17-455c-a665-b814036217da",
            "f7a98809-dbcd-477d-92dd-6d29dc47e2cb",
            "b8386d89-55b9-4067-a4dd-6b86bbd050be",
            "8a733719-8fd4-43f6-aa81-a06a27447935",
            "3e1cd0dc-bb25-4fc0-9a50-b20095d99c24",
            "c3927bee-11c6-4f86-b919-7a0e6165e986",
            "c18cb547-2b6b-4db1-a072-6ba13206e2e3",
            "7ed14f65-4ef2-4413-abd1-3354cffd587c",
            "5659b3c2-384d-43d6-9cf0-118c919cd2cc",
            "c93af842-efc1-4684-b5d4-d69ece1532dd",
            "3f217a29-a299-42f5-a042-e34b22a9d8eb",
            "a6a02f76-1350-4236-ad8a-32b7dbde16b2",
            "d2d4a1c4-f35d-494b-8065-aa1aea07aa2f",
            "1380ff89-927f-4a01-91e5-55e1ff9d44cc",
            "c8c5bdda-c002-42aa-954e-af341f052592",
            "d333951e-ac48-451e-9c9d-50786344f7e6",
            "1772778b-3043-47f8-ae42-b5f62e33b659",
            "5f9cf447-8f58-4cad-8da0-464a1d68aa6b",
            "3ff84815-2110-4e0b-9795-00bd54bafb0c",
            "da2eb71d-371f-4088-881e-77df25aa8e39",
            "a2ad8687-01ba-436f-86e3-cd42e13a3f2b",
            "f419052f-1865-4749-a002-a3d5c01b5fee",
            "3d0eed0a-0de2-40c3-a4f1-76dab0a12820",
            "18fcee87-c699-4ec0-90ec-2d735d5e1019",
            "3f4422f4-63d3-4f3d-b018-1859f9f299a0",
            "f73f8edc-bafa-4f24-bcbd-65790d4081c1",
            "37b43fcc-bffa-4803-8a72-b975056fbca5",
            "6a3fe427-168f-4a62-bbb5-c2e63e7c2a54",
            "17a8eaab-7285-46e2-b7b0-b312cb6e540b",
            "ecf5b164-3437-43b9-acdb-6de13cc9c146",
            "9d3e783d-519c-4777-96aa-78545358dc8b",
            "b39b683b-ea58-4756-a874-c084dc3517d0",
            "6fd721e8-6676-4f13-83f8-a2ef26748f2a",
            "8394c7c7-45e7-48d8-bd15-76ea87d3c066",
            "e0c47555-772a-41e1-907b-e8e041977797",
            "67fe2f45-6203-438e-b8c1-ad2c8b38f607",
            "e5e64105-9eae-48dc-b671-cb65b0bc7be4",
            "443eab00-f468-4eb1-8c43-71a6a113831f",
            "23dc489a-1f37-48da-9ac6-a2e8c1b2f75b",
            "73e77426-640e-49e3-b384-a5b0a0a2fa31",
            "bdfd5491-c373-4b4a-bc26-d5ff49c4f45c",
            "43ae7e77-fcfe-4d9b-83d8-f0e610af65b0",
            "07d85aac-8e8d-47c3-a96e-85bea66738c7",
            "8836bcf6-7d40-4f66-97be-72d8091e608c",
            "5619ddaf-e322-40bc-8148-134bead2a1fc",
            "38f79750-0a77-4e84-9ff7-a98888645761",
            "fb2e10e2-b8d4-40e9-868e-77ed7a10a970",
            "c05a0abd-1443-45da-abac-dbb05f849041",
            "3b430b20-4bf5-4b60-9f8a-5b47b1c81123",
            "39b57a92-5faa-4e58-b70c-cdcc3eded260",
            "8a5077f9-6b2e-42f7-93da-96df45b20c9f",
            "11d61d05-6019-4535-8702-76ad00d68bb0",
            "66908785-f5d6-4748-810f-98d1fb7999dd",
            "37714927-142c-4556-92f6-b1fcf75b4e59",
            "67cb2997-aaff-4063-97e4-6bac3e7639c4",
            "eb17ede2-06d4-4df9-b476-83e2bea4455a",
            "806ea4b8-94a8-4076-8c0f-fca1e3d57fbd",
            "a2e3a23a-f5b7-44f3-91a6-155bec375df8",
            "726b74a2-638f-4cbf-9317-0faff85811c5",
            "266489cc-da50-4345-959f-4621950c9869",
            "fdc46816-a044-4a43-9220-365d462340ca",
            "10354cd7-bb86-450c-965a-4b6e65b85676",
            "52f5711e-2ee8-4e75-9a5a-b601833c6eb1",
            "fc16fba1-99bc-4ad8-a936-b2b5842f35fd",
            "93cac585-45be-4661-ab70-b767f69cc9be",
            "c4692dae-07c3-4d15-a1b2-4e74838ed4f7",
            "2de4d498-6e4f-42fc-98a9-8f738b64bbed",
            "cee1023b-60ec-4384-ba43-c240112ca7d6",
            "ea973652-eedb-4256-8838-88b34462c7fb",
            "8712b5e9-1483-46a2-88bc-e24b6dce319c",
            "cdf3096e-a820-4598-bac9-147bf1eb88e4",
            "d2cacf7a-551d-4b86-9d5d-1c36dd0067db",
            "4b1facaf-e14f-412d-98c0-1ad1691a4562",
            "52604cb0-17b5-4e13-b061-09664faedf2a",
            "5f0d1959-f9ba-4e3d-bbe1-13598c36754c",
            "46a4938a-fd43-4da2-8f1e-5bb85cc07caf",
            "6a899c7a-c307-4111-8c28-9389fb32a9de",
            "2d5f610d-430f-4128-89ca-d3e709190cf1",
            "ed975446-221e-4459-ad1e-7f47384fb7d8",
            "76c6789b-0b54-4caf-b02a-1c5bf1d052db",
            "5244b1b9-a86f-4382-ac06-fefb5814d5c8",
            "414c42f1-b988-4ac3-9777-b20047a34221",
            "60372c2f-aa42-4626-99c2-906f73872990",
            "0bb099d7-68de-4b25-b0db-dd1b9541a1bd",
            "30ce6163-73ab-4c45-b746-1f5bfacd4810",
            "2bc6616e-4584-4d91-b750-9c60f1c29917",
            "841b7fab-e764-4b80-a1c4-f00c5c0b20f6",
            "c461e881-d192-4e9c-87b5-7f58de72b5bb",
            "651386d3-2694-4d3c-9f7b-e5deeae10430",
            "c0474b42-355a-4f06-acb8-a5fe5b9d9719",
            "eb9bb38d-8515-43f1-b8da-1984652ea2ac",
            "5d489718-4d26-4092-ad71-e64b1ca81872",
            "1daf156d-3116-46ea-8683-fe889237f274",
            "c624c85e-1ffa-45a5-b319-74f283cf3d70",
            "ba662059-4e07-4dde-8775-a01243e2ef0f",
            "106a676d-e941-479d-a169-91a350925e71",
            "45049718-b10f-4f6e-a9f6-bd94f70de40a",
            "b4207cf1-6660-4883-8ad7-e01b936bcccc",
            "23388d09-8e81-4593-a6d7-703e7c6a468e",
            "2af9b1ad-3f57-4a77-a4c2-d55896af062a",
            "c0e62af4-ab70-4748-b8c1-2e6d5b92fb0c",
            "b474fc11-7dd0-4ffc-8c4f-d97853430c9d",
            "b1a31a03-1305-41a5-a7d1-ad6721a1bdc3",
            "e15d3f6b-5d79-4aff-b06c-a71a585516ce",
            "90744743-b7bf-4d74-87b7-be0bb46076d3",
            "910c1e11-2b65-4b10-a2e7-b6366964b298",
            "edb78894-9955-4b2e-b6ec-b49b01112a24",
            "a7f2cc66-c631-4947-94d6-05632ef0184e",
            "df870e43-b7c0-4408-8f83-2bf8bc73ebe0",
            "2440fe68-0f64-43fc-a916-808db0a8b28e",
            "46073dff-2632-4a08-828f-5c8a82f4a615",
            "94f419ed-b1d5-4532-a6eb-53bd3dc337dd",
            "34e16d37-1aa9-469e-97e8-bc4af494c986",
            "e4ed0861-cf42-481a-aa9d-bc263da27038",
            "d58f173b-2cea-4d9a-80f8-0dd24247b7f9",
            "72994ff1-439d-4e42-bca1-a07b47e394dc",
            "1720498b-20c5-4f96-9262-2d2815b275f2",
            "035cf06e-6ca3-4bc5-9c96-9da6b54185b3",
            "4f5c4f89-9d04-4a28-91e8-149cb22642c0",
            "f77e0f38-4f0b-40d0-9e8a-db60dfa1c044",
            "49240971-749d-4786-af7d-5e9f3672f211",
            "ba57560b-bdaa-4e7f-9ae7-d9b098cf4e0c",
            "8f1a232d-4be6-4359-96d3-930e48d758f1",
            "7d9377f0-fcf2-40b1-9e31-644828c50621",
            "8797b715-81a3-43c0-9762-c4f4b569d5c9",
            "94a96fb2-d42e-4fb9-b2ac-546a92f0b400",
            "727a6d48-3a85-4712-b601-a5289e1679b3",
            "f3e89c33-b84d-400a-895c-3bf497337c2e",
            "4dfb1c57-2252-4adf-b662-f1eaa603aa03",
            "5c9c707a-c96e-404b-aeae-c370e7959ac5",
            "b84d6acf-9d81-44c9-b56c-3e67f5f14224",
            "7eefec48-3272-46c3-af36-d229fa8c1ed3",
            "14527dea-2e36-48f9-81ad-8b6a781e7ab4",
            "1ffd4ecf-545d-4263-a15c-72fe10dbf3bb",
            "e177db85-fb7d-455e-9dca-79966f9dd8e0",
            "873cd0b4-1343-415c-8238-6d4fa2994dfb",
            "40a9ddd7-7fd3-415f-8a31-c6c5bf2d2a49",
            "88f90c3b-9a03-4807-b881-d85afc5a97e4",
            "25ddd8a9-2f63-43a2-bcb4-289265140372",
            "3bfb3880-dfa8-4db7-bcd4-9fd245b22eb0",
            "12e40742-a725-4c8a-a838-3f12dfac8ac6",
            "3efe5c49-16e7-473c-9aa2-b85f8a7ca71c",
            "41004cb0-cf82-4885-a0e4-d7b2204479d1",
            "018e92e1-a466-43a9-8551-598fd7738472",
            "0a61cf5f-1486-4a27-aa17-4dbdf9f7e1b0",
            "857a8a3e-4e2d-4464-a0e0-ec2dc0dacc6a",
            "b5705e23-036f-4083-b21c-5162832612e6",
            "69ed41b6-3344-46e0-813f-ec9cad7fc1d4",
            "6e0e8a94-fdac-469b-be88-5b8b64a025f4",
            "e0265d4d-c28a-42b4-a938-2d5f94b300c2",
            "2cbe35e7-b8c4-4bf4-8a9c-bdd93354c19e",
            "35eb1e00-4687-4c57-ae87-54f8db18896e",
            "63df83af-1e43-4f11-8147-6a81e6dc1f8d",
            "04524e6f-0d4e-4aa1-a3b1-4a9011fe31ae",
            "638f0813-2d42-4768-b59d-f82acd66a2b7",
            "91b90122-2b62-4e5f-a13b-a0a28b63ca14",
            "b7f2784d-b9cf-4445-a7f6-7d44155e0f25",
            "29cb226f-9123-4958-bb04-dd5fb0c4f20c",
            "95462073-2dc7-44b5-b34c-516e024ecc55",
            "7c4fcb77-1e2e-4701-a7b1-66c202881eb8",
            "f203e5b0-2f3d-4986-b078-f56e7077bd0c",
            "f5a723fa-5e9b-45db-99e0-67348257a329",
            "2d5bfc9c-edb1-40bd-a56a-187cdec7e0d9",
            "5ecc3753-0944-464c-b272-f8d51baa3b9b",
            "86abfc39-2358-4b94-bba4-b0f3e864cbdc",
            "4ee39586-37de-4cbe-8272-51d4241abaa3",
            "edd01273-067e-4143-9069-1642770e0549",
            "e93e4d52-d402-40fc-9288-35ed1a5d4807",
            "dc0bc691-93fb-48a0-b139-85853e3f7e91",
            "5c9613d5-a7d4-4a5c-9812-630b8372473d",
            "268810b0-938b-41c3-b872-db20ac466b92",
            "4976bdfd-bbf7-43e1-b786-fab2b7df4c61",
            "4d1c5f98-e69a-4aa6-a8f0-721935424879",
            "be557da5-d071-4f76-8328-2dc11d1afd41",
            "eaabe873-fed6-4ada-ad50-49257e125e05",
            "ed3670f4-79ce-472f-9051-af8eb818d97d",
            "2eaa149b-5be2-4b4d-bea0-01db25e66334",
            "952df2e8-f248-4901-ace6-194e272c3337",
            "6b11f193-3c14-4f19-a838-4b12d09f051a",
            "34cbdd0f-5589-4929-9064-252aa835a751",
            "5547c4bd-9738-441e-93bc-28124d55e5a0",
            "b2e6d135-9bab-4843-ac82-865206e986d8",
            "009d735c-57d7-4f24-90f1-e5cf7422c580",
            "fd6c0a12-e5ae-454c-b5cd-857d2002c84c",
            "2024b745-0015-4bca-ae77-7cd4224e05a2",
            "9ebca0fc-4e31-413a-9ed4-53e538a7313f",
            "8df96a5c-4ba5-407a-954c-21b1a7d6a241",
            "275b8060-1e30-44ca-8767-3d6cc83e5875",
            "dd0b5195-96b4-4b34-b3b3-7a0310afecd0",
            "34b78a5a-3e30-422b-b391-897db94a34ad",
            "d47f477c-e987-4fb9-87ef-1dccddd00208",
            "9a3e7e50-16cd-4c60-884d-7e4da5f2c993",
            "3b003594-1cc0-4c78-8b47-2704a1c72b46",
            "ec1ac921-fb59-4027-b3f3-4b7b6de93f83",
            "1b787c7f-436a-4e4d-8863-b0d96b52ac49",
            "8cb59afd-a57c-464b-aa2a-27491bf62349",
            "337d9670-f38d-4ea3-a836-9398da9cb407",
            "800ea36f-b8e3-4de8-baad-498b1f040f73",
            "56dcc65a-3e91-4ff2-8c51-08dc8f30f6c0",
            "c07d40a1-7882-4bc1-8e17-db1679e2fe32",
            "618944c6-729c-4233-9b68-02eb1766c3f5",
            "60c302c2-777c-4fba-b408-cacb31ab7f45",
            "b55dccf3-8d13-44bd-aa41-2905ff2d7b2a",
            "9951d1c2-31fd-4f11-892d-97828f309b7b",
            "eacbb173-9985-4312-9859-8df324b806a0",
            "8de0c2b3-04e5-4f89-9042-f14a33a22944",
            "540b2d38-fc52-4b29-ae1b-aed349f43e91",
            "e149ae4e-2cda-4602-a4c2-e630bb65f474",
            "1f68988b-0835-4e96-aca7-dfb41da221f2",
            "f2c46d5c-5854-48af-b078-ceb174d2cc2d",
            "c36a00c2-dd88-4357-9178-24578e998cc0",
            "2c63c06e-fdd7-4f51-a434-e71192577159",
            "8b9d6b92-c81e-44a5-a535-4be9ea798436",
            "cd475aed-dc82-4a88-b0a6-001d14c84d89",
            "cbdda663-714c-4e84-8892-89dbff860d56",
            "ebd602b5-0178-453d-bc5f-8c2ff9732380",
            "5abf1b5d-1aff-4053-9665-18d4af7855e9",
            "ab1c4e70-8e32-465b-ba73-9b4dee9ec624",
            "d340e8a4-4e07-4391-9473-bc5e6ec11113",
            "9770a671-4623-406f-8eaa-5750a80133de",
            "26a6369e-fed6-4122-b213-12280607e1bd",
            "36d4a777-f9e7-4590-a0ff-336a5d043eb1",
            "50d26063-2b12-4c46-a039-4c02d6669cc0",
            "24ca5072-21bb-4fc8-bc81-38af657285b4",
            "02c4323e-e4a3-49be-8c1f-2e018bac2afc",
            "859d670c-480d-4ddd-ac1b-31ea5b13e3ef",
            "d293832e-69f5-4a73-8be6-f9e6208a5c47",
            "7b0b5c68-5d4e-4d0a-beb6-38c23282e513",
            "054718e5-ab32-461a-98ea-8c728753b810",
            "c9d1bca6-35a1-4cf0-9156-cdaf71f45dc6",
            "16ca1358-f736-4474-938e-991a1e2e11f3",
            "0ca742e1-ae31-4677-8942-55e3e5e08895",
            "7b94f530-b1a8-4e0c-9adb-6737a8d93b65",
            "61118e94-c7a3-4962-bf74-cd6d930f3a70",
            "1e52bb18-f2fa-4eb4-9703-bcdd9154579a"
          ],
          "failures": [
            "3a7dc160-64f4-4f08-9d4a-120f35631750",
            "d9fae7c4-a840-4f6d-b814-635d7173e634",
            "8f77c5ea-1482-4cba-b147-704c6a56cc5c",
            "5e665eb2-4c9c-4874-9cd1-9553b126ea12",
            "60ef45be-2487-4e16-be4a-2980951a9111",
            "aa07b57f-e297-4294-ae68-bff879102a97",
            "1f02348e-1ce4-4e72-8583-dcb1a289d077",
            "0b47294d-abc1-4195-82ad-5548d8e8aabe",
            "0056af1c-8057-4572-a10f-9698bc4f6af7",
            "4ff0e09d-82d1-4865-a948-345944edff46",
            "b81c8d5a-fb43-48b0-aa3c-82cd913f3bad",
            "5ab91286-a283-42ea-8950-9631e78a8fea",
            "ef5c4bda-e8ef-4a84-9e5c-4da799508964",
            "41132663-9f5a-4b1a-9cea-260730a0b43b",
            "6fb10006-6592-4ddc-9706-5610303e85ec",
            "9961a0ac-ad45-4cdc-a30d-5279132c0598",
            "609687e7-9580-40ae-a8c4-5a9a051aaedb",
            "48236b1b-d1b9-4da9-8d2c-8ebdf60bb7ce",
            "4c74ff9a-c2cd-488c-a07d-901f223c424c",
            "9e75575c-0ef4-4d25-89c7-a1746fbe1a1a",
            "070b5b9e-6da3-4b20-9ed0-d0af4a3f251d",
            "efa0a0a6-bc84-4701-8f8a-22d638746268",
            "47d8fe02-fdf7-4c13-8b99-ffd52de8aae2",
            "af99f9cd-f1be-4da3-a7a7-cf0b8ce22d17",
            "1abbada9-48ad-4814-93ea-9634abc8af96",
            "6d0c6c25-1658-43f0-a55c-7a6eecc38ba3",
            "55ba53fd-a0c0-4dc3-a5b8-3c706b8c00ce",
            "99fb366b-1170-46ee-bbee-01fdea19a267",
            "7d9fa2cd-b199-458f-9c96-6d21bbd8d520",
            "0d8ba5cd-de31-4297-8d99-748ca91a3c7d",
            "972daaec-e8fb-498a-a9b0-0a6c3e45a6ba",
            "abf9f1f7-8886-4bed-af83-cde6357c1c7c",
            "40a7a8f1-5b6d-4e55-99f9-fe6ea020dafa",
            "93caf0b9-50b6-450d-959f-ea49caf55ac1",
            "1353c241-8399-4221-957b-743e86592f11",
            "4a1a3301-d589-4401-a4b4-3f7daa3e891d",
            "d680b424-ca41-4979-a142-d915e6820250",
            "50eb878b-bb17-4001-bda4-e71cca9bed03",
            "9d505fd3-cd9f-457c-8df4-b0830f64e414",
            "f4a07523-d56a-44dd-8d09-6addba82a1c2",
            "277b5dd1-7c9f-400c-aeac-b69fd55ff3f3",
            "566c2682-028f-41bf-b4fc-6c50fd2d2973",
            "d60cae4e-ed4c-4156-8d43-fc5092de1f2c",
            "7b377235-e39b-4a25-b9fd-b3441d3b4c64",
            "7184ca0d-279c-4300-be3b-c3fa2be9b535",
            "577f27b0-fa45-4398-84a0-113ded0b4e73",
            "d0ec25bc-3d8c-4514-b0f0-7a27362368f7",
            "bdd0fd11-ae6f-4867-bbe0-55796c8aa477",
            "30a6c5cf-a792-4c93-8f69-cf2d15cc6970",
            "58009436-ca60-415a-ad09-f0a8d02f126a",
            "8e8b1723-65d7-4dc1-aa34-e589735d5bcf",
            "3f892b59-5757-4483-bb4c-dfc08d44df19",
            "a465f1e5-6c12-442f-acf6-e452f39eca65",
            "ab69de7e-a5bf-4f76-8e69-8f299de3c597",
            "03d5831e-44f9-479b-b18c-e0aaa87dc16c",
            "d987fd8b-19cc-4c1d-8915-5d8e8a1aa9c9",
            "3fde41d6-8f37-4859-930e-c9f8b267c4db",
            "59cb7ca0-ce4c-4bbc-988d-5942d55596b1",
            "5989b9ec-47c5-4898-bda1-42bfb6c9fb41",
            "6bff67ad-b0a0-4a30-aa26-cd0849f4f54f",
            "b1c8604e-1048-4993-8c41-d00af4e418fb",
            "d6f6bca3-703d-4cd3-841b-49b5a59dfbed",
            "fee343fb-9e01-41a9-a298-b0491bb1fd22",
            "c0e6cf40-6c86-47cc-a07c-1805ddd22444",
            "ab18f439-0dae-4c41-8fe3-09e5d0a17f0c",
            "c446c448-092c-44b8-b132-cc0cc78b5d77",
            "7691f44c-7e28-4527-86a9-ad8d3e17ccea",
            "50dbc53a-8bda-4489-a9f6-f536d8e5c579",
            "750b38f8-59fb-4a87-85bf-0059b7a9c007",
            "137c1ea2-e520-49ce-b1f0-27f996993562",
            "fc731776-3096-47f1-9f8e-fec5a4266721",
            "cbec9e74-4b0f-486c-addc-003954c480e0",
            "c453235e-b992-4dea-be33-31a8af019e21",
            "6b58b1e8-82b7-42c9-8a96-7ff805b80564",
            "bf425d65-21a4-4267-9aaa-a6a05b650837",
            "97796e38-06f4-4df3-8df8-269b259bc551",
            "edaada34-c451-44fd-98f7-1199b342a558",
            "24d6646f-a23f-4ba7-90b0-462983fa0597",
            "9d425b4a-c046-4fd9-acde-49ea016d8f49",
            "73ec373e-53f3-4574-8421-b9a3440aad1f",
            "d454e4a2-6618-45ff-a96d-efd7115c3cdf",
            "b6cb063e-3f44-4c3d-9744-6c8533b477ec",
            "12479885-ffb4-4b48-94ef-4e0388790ac0",
            "5601a742-9b1f-4807-9e17-6ca66c12fa4c",
            "dbfcf049-06e0-4750-917e-0243d800f25f",
            "539a82a7-609d-497a-ab0f-98c5c51f90f7",
            "a58b9bbf-52db-4d02-9589-48ee9d69a0a9",
            "07174654-0da5-4b1d-9a2e-5589ea2b66b5",
            "14a1285b-694f-41c0-9594-7661a028744b",
            "752921d4-707c-4288-b47b-bace55dd77ef",
            "698746f3-d31e-4cf9-ad0d-b29c237cb94a",
            "be3c8ae6-71ac-40c7-a467-0a776859250e",
            "6b03fdbb-719e-4ba4-8948-b08bc0482783",
            "a57886a6-8ced-4876-bce8-f72fa0da9204",
            "e0804b87-361e-4390-852e-1c62742803f4",
            "1e90e5e5-7251-4004-83f9-1596a0c2b060",
            "0dd6ac53-7275-4158-b811-da29e236d26f",
            "a12ff9a6-0a2b-4a2a-9f1d-5cff7ff6fdca",
            "fdf7b62d-a8bd-4ac6-bedd-78055868a9fb",
            "34508074-70fa-4ece-9a97-4574749a408e",
            "dadca357-1c86-43ae-a784-e84a514d0e79",
            "b383467d-a8f3-4fe5-ba4e-5ce8b9cd09ad",
            "5974e963-62a8-41b2-ba10-4c6a31b966a4",
            "6f13fa53-b6bf-431e-ae07-c7179f081887",
            "4044479a-e790-46c9-a7ab-0c024d86bcd6",
            "03571b1d-56c3-4066-ab7e-2a751fd537a4",
            "fff4fc64-feeb-4fec-aa9a-58edb010ec4c",
            "8934e840-4f3e-41ce-bd55-2497b0ecd417",
            "467c4a4a-1ac3-4f8a-8608-eb0f0d27daeb",
            "f468f700-5741-4641-b47a-00218e626e3f",
            "640c155e-d0ba-4165-8ffe-c1777cb256bd",
            "5f79427b-5843-477f-96a1-50973ceaced7",
            "a2461927-c816-4e8c-859c-5ec5eff2f29d",
            "365ff2f0-c3b4-422c-8115-e75f47dadce3",
            "3edd81aa-7d25-4b04-9a86-09b5f08a8240",
            "30ef955d-d6d6-4afd-9dc8-01e22d63c399",
            "c16d949f-7c0f-46b2-929b-9bc44d82180c",
            "6ee635c9-87a2-45ad-9e60-59ab9a866226",
            "9ab07dbb-c33f-42a1-bef7-29639456c807",
            "95ebb1c3-8304-42d3-92b5-33c194df0087",
            "a8c1a097-b183-4711-91ed-5af2012b2bfe",
            "5fc5ef8d-54a4-4110-a6cb-6f87428dd542",
            "3b7468d9-3f2f-4c30-86c0-928b7e65e882",
            "b1bcc4dc-92fc-4526-93c4-b5b209eedcb8",
            "8a6133f5-2439-4837-a6e4-f90fcafc4388",
            "63fe18f5-0daa-4765-840f-5568907083a6",
            "86a8266e-8fec-43f3-af0b-7c801204a5f7",
            "8b49d154-728f-4dfc-8475-14d8f1360f1d",
            "ce407342-90cc-432b-8aa7-bd48e0f89aec",
            "2ba5076c-447f-4356-97d9-83c0d9d6af3f",
            "c06f5f44-1b00-4b17-aa25-5efe0305d0cd",
            "c26fd3a1-c8ec-4fc3-bc16-ea538c8c73b3",
            "396669d2-0eb8-4bee-998d-53eff866b649",
            "9652a067-5adb-4fcc-b3bc-af312ec83044",
            "0750efe5-df3b-4d78-ada4-70042c4eb729",
            "faf903ec-3aec-4fda-a4d2-2206f9b72594",
            "d859668f-b694-40f8-b0d5-bee5fe4cd67d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5749720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7390c33a-c9d6-43e4-9a9a-9b67547f67c7",
          "title": "sample test",
          "fullFile": "/usr/src/app/test/puppeteer-mocha-basic.js",
          "file": "/test/puppeteer-mocha-basic.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld",
              "fullTitle": "sample test helloworld",
              "timedOut": false,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\npage = await browser.newPage();\n// await page.goto('http://192.168.10.180:5500');\n// const [p_target_user] = await page.$x(`//p[contains(., '345')]`);\nawait page.close();",
              "err": {},
              "uuid": "ff921458-81e8-46ab-b43d-c51a234b4850",
              "parentUUID": "7390c33a-c9d6-43e4-9a9a-9b67547f67c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff921458-81e8-46ab-b43d-c51a234b4850"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "output": "report.html"
      },
      "version": "6.2.0"
    }
  }
}