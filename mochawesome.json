{
  "stats": {
    "suites": 2,
    "tests": 488,
    "passes": 311,
    "pending": 0,
    "failures": 177,
    "start": "2023-01-10T23:29:45.304Z",
    "end": "2023-01-11T01:33:13.441Z",
    "duration": 7408137,
    "testsRegistered": 488,
    "passPercent": 63.729508196721305,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb457760-a6c9-4a24-981f-f75f87d60f3a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
          "title": "click test",
          "fullFile": "/usr/src/app/test/click-test.js",
          "file": "/test/click-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld javascript -> keung_2022 -> 0",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 13209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0fff587e-35a2-4c4d-8554-33f8174762fa",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 1",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 11957,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72cd6b53-fb1d-4867-8936-946b4c8572ff",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 2",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 11359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff0815ae-6760-4898-8b0d-79a57d7a3fc7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 3",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 12510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d94a89c8-3324-4b87-81be-161f33bd206d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 4",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 9791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ce73f8c-52bc-4396-8af0-3cada3550c8f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 5",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 10204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "488ed31b-d7dc-4d47-9632-bdb6b9525c04",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 0",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 0",
              "timedOut": false,
              "duration": 10101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3395802c-addc-43e6-b7f8-35d44d288c1e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 1",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 1",
              "timedOut": false,
              "duration": 10873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "388fdafc-f690-49e2-84cc-476285b93f54",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 2",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 2",
              "timedOut": false,
              "duration": 10670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f840dab-e9fa-4224-8d4d-d4b69383fe72",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 3",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 3",
              "timedOut": false,
              "duration": 10611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "887bd925-6a34-4f57-8fce-e7a4bd2c17a2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 4",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 4",
              "timedOut": false,
              "duration": 10648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "746e38de-ca4b-462c-b2dc-533c803dd0f9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 5",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 5",
              "timedOut": false,
              "duration": 10718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6c921362-5395-4630-8ac6-8e128527c924",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 6",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 6",
              "timedOut": false,
              "duration": 10908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d73821f-dea9-4aa8-8619-0d6424677e7a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 7",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 7",
              "timedOut": false,
              "duration": 10133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3544e6c7-9343-4938-a700-98d470a626b8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 8",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 8",
              "timedOut": false,
              "duration": 10556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e7582a0-b2c8-4720-8506-905b52206a15",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 9",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 9",
              "timedOut": false,
              "duration": 11202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8c39b88-f2a1-4f86-89b0-8edc198781d0",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 10",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 10",
              "timedOut": false,
              "duration": 12080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91eb7819-ad68-415a-a371-646709e15428",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 0",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 12054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fe8f7290-4d34-45d9-9bdb-06e8f5e568ed",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 1",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 10881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ce80b2d9-acad-420a-b356-fad333509f41",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 2",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 10554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "05fe2c06-8742-4058-8d32-3f24a7232c1f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 3",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 9873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3557df46-04b0-4850-b831-bd78c93624c4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 4",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 10896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ee7b825-33b7-4757-8c40-d171dbd1c3b6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 5",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 9932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9dd6cdf2-756e-4414-b387-0ec2907dfc63",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 6",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 10350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0f9322e2-56f5-4a6e-9032-f534d8191a6e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9860,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60cd04e4-dcdd-4c26-8895-4a5b17e61407",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 9580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "48dfe2fa-0831-4858-9d52-eb7306810ecc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 11215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d0b859d-6266-4319-ac01-cfd1ebaa67df",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 10301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ac49635-f917-43cd-8998-676579ad5873",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 10063,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "27e21bc1-2223-45ff-9e43-8436e263bc83",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 10544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "81cdaff4-e5c7-4967-bbe3-5130402b6f4f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 10154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0b905050-e78e-440e-aac6-ce47e9349a87",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 11125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "332ec4b5-9069-48ae-9589-7b365efe35b7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 11275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eac8b9bb-a459-4997-b016-6ec0df9a7a38",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 10654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1b9c1ced-231b-4ce0-b9dc-84d1e0e1874c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 9729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6c2183a0-14b2-4f0a-934e-a49558d6722b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 10305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cb5094dc-e7bc-4c60-a515-38bb41a691bf",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 9890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7114cf65-7546-4dcd-842d-0af418cdce38",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 13",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 13",
              "timedOut": false,
              "duration": 10018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "da59be54-28cb-4a52-9b29-75a47d0bfe24",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 10812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "04669e29-bf74-4686-b321-e10844de8d09",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2c3ed7af-0845-4166-8d34-40bdb34bd8ba",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 10842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68596940-9c64-4df4-9738-dad323733b4d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 9800,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "27389070-753e-44fc-8456-f03aefc54a08",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 10283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f05216f2-1e65-4c40-b798-21f817ff6505",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 10692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ab45ca7-ebbc-469c-ba65-42b30603e952",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 10099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b708de25-f30d-4bd0-8f9c-8449e800cab2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 0",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 10022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e62a4513-b781-48ee-9c5f-40057d9ef8bb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 1",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 10105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9096fad9-bcbe-4f27-b055-10ef8b97f0ad",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 2",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 9631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f06d00a5-527e-4313-9661-5ceaa48704a1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 3",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 10611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0eb317fa-b1ce-4ca3-a30a-e01d073d21ae",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 4",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 10050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "491116f1-adca-4af1-b8ac-53d581ad531d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 5",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 10828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c231042f-eb2e-41dc-b605-3f7d71cb749a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 6",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 9950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd159be5-1c5c-49b4-8387-6743ccf3c548",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 7",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 10744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8baf2e5d-fa10-4051-9f75-9f2a735f53d1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 8",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 10388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ecca110c-1c7a-41a7-9e02-9577b813e6c3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 9",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 11121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c2930174-020d-47df-b820-41202a181d66",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 10",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 10518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c09eae6a-ed3b-4f79-8d2e-dc482555e2d9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 11",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 9409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc987d0e-2edf-44b0-bfc8-d71348585f74",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 12",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9634971-f117-4adc-8c60-dd3295592580",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 13",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 10698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "37a6040a-debe-4dad-b93f-152bf27ce8e5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 14",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 14",
              "timedOut": false,
              "duration": 9966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "978d9229-20d8-4792-b83a-9182f57058a5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 15",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 15",
              "timedOut": false,
              "duration": 10248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bb8068ab-8add-4ddd-92b1-7854d9e3db0d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 9738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4fb342c2-3a0a-4465-8459-b9036867f889",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 10614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "540551c4-69ed-4450-85da-77be4f3ab576",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 10157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f46b4348-41b4-4c87-8b5f-07d9b192fa54",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 11019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c1353b46-3d2c-41e7-b329-d2c1e992cc89",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 10900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b8bda4a-b62f-41c4-81d7-ae373d63ec20",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 10095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "62e37143-7392-4be8-8977-e515bbc09080",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 9897,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a31c2c49-22d6-4aab-8b68-5abd0b08dd44",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 8999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f93ac95-4647-473b-b0d3-03c5d99f6619",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 10271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c80e7e9c-f36b-4c84-917f-ef019ef84e2e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 10670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b7c68810-3264-483a-bf8f-9771c8c70e6b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 9481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f20147f9-b8da-464d-b16a-057d928bc879",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 10801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c3c24107-cdc6-4995-abea-bcc177e0c03e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 10057,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b13704c6-4cdf-40af-83d4-a52e1624d39c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 10894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4a2ad91c-d1f8-4f12-bb0d-97bc161b4f92",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 0",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cf57c25a-5352-42d3-917e-a5210e3ef74d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 1",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b14f021d-abb6-4cf9-a1c0-7dccff8d2963",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 2",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72af3a4b-b5d9-4374-80f1-8c81649e62f6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 3",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 10769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d25d105-8dd7-4e51-b387-1d93deb4218b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 0",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 10631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6f318fa1-5e5d-452e-b343-5a2bf728e79d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 1",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 10638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8607e031-d2b7-4f25-a140-967e6d3c5dae",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 2",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 11265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "abd515bb-2418-4674-ab91-5e987565cf75",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 3",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 11390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3f9a222a-7f50-4bb0-aeef-d53ae3c119fd",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 4",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 12095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "370449ba-da24-4a93-af66-88cc19b0ad91",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 5",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 10523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1c28e46f-1865-424e-9a72-b2c225861ba9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 6",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 10795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0911eb54-2085-4429-a829-a24f68a32e95",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 7",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 10116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "15ebe332-1dc8-4cbd-a8c6-fd692d678684",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 8",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 10228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "695de7d4-c7d2-42fd-be3f-ff3262f529e0",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 9",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 10685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "daa1d981-d7a6-4df7-a656-a993261f008f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 10",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 10389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c8f779e9-95ba-4fa1-9264-9ea8cbe7cafc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 0",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 11202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d4feda83-68f6-406f-90ba-cf0674a9681e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 1",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 10701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cb876e7f-bb6f-48fe-afcc-7f73dc953062",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 2",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 10906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d4a2659-895b-4f1a-9615-44028fbeda82",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 3",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 11058,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d6147225-8354-43ee-8580-02e18a898303",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 4",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 10866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "03d0f847-dc40-40ff-8dd6-a6f504b6105f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 5",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 10467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "546a1889-9f83-479e-b44f-d1fffb1d5adb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 6",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 8915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "212da938-ebc1-4d31-90e7-631a3f84b814",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 7",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 10762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a19019e3-8b8b-451f-b256-33ad76711130",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 8",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 10711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9f3be73a-08a1-404e-ac26-04662d4212d9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 9",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 9756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5fa7d072-5838-4a8b-aacd-49d8addbf3a0",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 10",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 10159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0801729b-d03f-4240-8df9-219074f25915",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 0",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 0",
              "timedOut": false,
              "duration": 11096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "84f322ad-969d-4c2e-be3a-b5a80e1f4e07",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 1",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 1",
              "timedOut": false,
              "duration": 11044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d66fb2a-c60d-4a23-b9c0-a80135783b49",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 2",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 2",
              "timedOut": false,
              "duration": 10584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "057fe73d-1eef-4a21-8d2c-0bb978c2c171",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 3",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 3",
              "timedOut": false,
              "duration": 11078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be656185-7d8e-4207-acdd-1fa52b662a4e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 0",
              "fullTitle": "click test helloworld python -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 18499,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "14830b5a-cee4-4c19-b969-3b562209bde2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 1",
              "fullTitle": "click test helloworld python -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 17925,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "502c79bf-0225-418a-985c-12991a7209c7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 2",
              "fullTitle": "click test helloworld python -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 17896,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "88a99125-ac72-4be5-86f7-21a940a1f8cb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 3",
              "fullTitle": "click test helloworld python -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 19714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6a5707c4-e0ec-4ad5-9e86-b15707cf21c4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 4",
              "fullTitle": "click test helloworld python -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 17739,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b4bb77ea-aab4-4713-bd27-2e4aafb0c140",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 5",
              "fullTitle": "click test helloworld python -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 17799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "22606f24-0601-40cc-8dbc-6ca80faebef5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 6",
              "fullTitle": "click test helloworld python -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 17230,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "573a96cf-0e0c-4afe-87d4-ac0da1d7c3a2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 7",
              "fullTitle": "click test helloworld python -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 18740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "db36fdb8-7fa7-4d57-be20-6239e3b93622",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 8",
              "fullTitle": "click test helloworld python -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 18113,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9336ae8d-6bde-41c5-a9fa-4ca301571e84",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 9",
              "fullTitle": "click test helloworld python -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 18066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3a206cd3-4998-4c75-bbc5-9d62deb22f6f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 0",
              "fullTitle": "click test helloworld python -> memegod420 -> 0",
              "timedOut": false,
              "duration": 13245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a0d70b9-1e82-4e2b-8ed9-fb9e632a9b46",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 1",
              "fullTitle": "click test helloworld python -> memegod420 -> 1",
              "timedOut": false,
              "duration": 11833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eeec6459-faeb-4590-bed2-a7599e6cd096",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 2",
              "fullTitle": "click test helloworld python -> memegod420 -> 2",
              "timedOut": false,
              "duration": 12400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71ba7f63-57c0-44b0-b0a1-7e3de7f35d76",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 3",
              "fullTitle": "click test helloworld python -> memegod420 -> 3",
              "timedOut": false,
              "duration": 13218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5bf77dbe-8d6b-45dc-9677-c993252b36b3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 4",
              "fullTitle": "click test helloworld python -> memegod420 -> 4",
              "timedOut": false,
              "duration": 12163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "061e5533-6586-45f9-a1ee-8558a03f4c6d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 5",
              "fullTitle": "click test helloworld python -> memegod420 -> 5",
              "timedOut": false,
              "duration": 13849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "339ca1d0-cf46-47a1-a90a-b9e216ea2827",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 6",
              "fullTitle": "click test helloworld python -> memegod420 -> 6",
              "timedOut": false,
              "duration": 11875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ea4a69be-42e4-4334-816d-b3e8176dd9ab",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 7",
              "fullTitle": "click test helloworld python -> memegod420 -> 7",
              "timedOut": false,
              "duration": 12119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bb0b7bdf-75cd-4312-b57b-bcdcc8c41a29",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 8",
              "fullTitle": "click test helloworld python -> memegod420 -> 8",
              "timedOut": false,
              "duration": 13134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1c76c22-cdec-4377-9ed1-4f6a64f91cda",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 9",
              "fullTitle": "click test helloworld python -> memegod420 -> 9",
              "timedOut": false,
              "duration": 14544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b9710cda-4fd8-40d3-99be-3c23a8cfc9f0",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 10",
              "fullTitle": "click test helloworld python -> memegod420 -> 10",
              "timedOut": false,
              "duration": 12424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ad68a0e9-42cd-48d8-b81a-af591f2e0bdc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 11",
              "fullTitle": "click test helloworld python -> memegod420 -> 11",
              "timedOut": false,
              "duration": 12934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "75dbd2e6-9eb9-494b-9245-0d28deacf185",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 12",
              "fullTitle": "click test helloworld python -> memegod420 -> 12",
              "timedOut": false,
              "duration": 12587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dcc636a9-8a82-4331-bf04-066d7a043bd3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 0",
              "fullTitle": "click test helloworld python -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 25294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9fe55649-2432-4a8f-98cb-8c59b27ff9ec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 1",
              "fullTitle": "click test helloworld python -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 25610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "607ee65c-ec99-4424-b270-76b335b36471",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 2",
              "fullTitle": "click test helloworld python -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 26402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c1f3a732-13f7-4693-b2b0-0a99f516105d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 3",
              "fullTitle": "click test helloworld python -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25998,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7e862b68-4dff-4e15-8d13-aedbbcaec818",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 4",
              "fullTitle": "click test helloworld python -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 27532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "68a12883-f9ac-49e1-bf53-be25d939a6b1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 5",
              "fullTitle": "click test helloworld python -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 28282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2d031c28-a96e-4613-abcd-5874d9f4ffe4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 6",
              "fullTitle": "click test helloworld python -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 25487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e278e337-5589-4029-a430-4431afdeabb9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 13359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd12c006-390b-4181-8a2d-fba89f9c71c1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 11879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd09b4f5-83dc-4bfe-9bf0-ba13d436ef67",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 12597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c9c92c50-34b8-4aa7-b81f-ae56aefaac36",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 12264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "87e5802a-e833-43e8-8a4f-ce3bcd7c52a2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 13703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d2f5d348-582f-47bd-a03e-5693031abad1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 13887,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b524517c-1e48-46fa-96c3-0d12db6b3759",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 11072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb81aeaf-0d57-435c-924c-720f779055ac",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 11419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "86c0897c-7f1f-44d7-acae-5139107f26bf",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 11665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "12e0f7c1-c9c0-4889-9e1f-17cce9a64ff7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 11612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0621056-4f8f-40a6-9d3b-5a8c199b3b8b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 13644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "82846ccb-5099-46eb-af59-911de43ff6e8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 12470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71fea60a-fe32-4967-a850-8face1562b79",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 11139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "92b2b116-1942-49bb-bb6d-28164667a918",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 11478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0d2df975-1c90-4612-8815-af9dd5b1d1ec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 12461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5fac18f1-1a98-42a2-b553-bcd5314fcc23",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 13065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f633eacf-4ce3-4839-a284-85becd9052ee",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 12622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3b8a93ea-02fe-4c51-b3a9-7d71982bc7ef",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 11850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6f42570e-f702-430f-911f-79a6259da57a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 15085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ced7e580-a340-4385-a8de-f7f826827942",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 13094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "539f4b3a-bd58-4c01-ad09-8e2b3eacfef7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 11127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9315f21-e5e0-48af-b57f-f2824b4e7ab4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 0",
              "fullTitle": "click test helloworld python -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 11580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1527a398-d640-470c-8d30-f085af4bf0d9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 1",
              "fullTitle": "click test helloworld python -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 14078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e4e10192-fa74-4738-b49b-1a5bfc420797",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 2",
              "fullTitle": "click test helloworld python -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 14266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ed83892-377a-4473-a68f-8eac1e2096e1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 3",
              "fullTitle": "click test helloworld python -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 14258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d369db28-5bf3-439c-9496-ae3b32dad744",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 4",
              "fullTitle": "click test helloworld python -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 13207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ada763a6-3232-4dc7-9b38-2e59392b40bb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 5",
              "fullTitle": "click test helloworld python -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 13186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e9657468-f308-432d-9665-1a622581b595",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 6",
              "fullTitle": "click test helloworld python -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 13960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3319b632-c1f4-46bc-80b2-407299034870",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 7",
              "fullTitle": "click test helloworld python -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 11026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68c7dd04-7e13-44df-b929-19071e134975",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 8",
              "fullTitle": "click test helloworld python -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 14086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57546f0a-a761-4cf2-aff8-593e9e54bc97",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 9",
              "fullTitle": "click test helloworld python -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 14293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9779c094-4829-4e19-b810-a3b0eb42ef1f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 10",
              "fullTitle": "click test helloworld python -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 12644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7a0ef91b-ac52-4cdc-8ad8-c820e7c4a2e7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 11",
              "fullTitle": "click test helloworld python -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 13746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e5268616-13d8-4efb-95c8-a5e25e7a38a4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 12",
              "fullTitle": "click test helloworld python -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 14614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b7d492b-46aa-421d-bf25-362707393737",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 28416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a478df4d-37e9-418c-8ec2-de6c33e72749",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 27821,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "14303660-0b3a-40a2-9f1f-4d06fbc3cc68",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 26811,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bbfbf813-dae8-41bf-9669-d56ea442ad01",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 26386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b73d7eb1-39a3-4eac-9bb3-76cb7efda950",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 26386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "24dab836-7a6d-4a53-98f5-e81a0ce4e83e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 27266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7ec56b58-60aa-4c8f-978b-2b057fb3cb73",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 25407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "4233702b-b568-4647-8797-6e78911bcad3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 25571,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4601ebf6-3251-40af-8cbe-a212c9b9d968",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 17422,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "78138e1d-566e-4c65-97e3-8b3f2f3aae52",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 18462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1a9fc7e5-6a5c-4f38-b8c3-2516f59bcc34",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 18477,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ffd6aae2-7b6d-473c-b2ee-50c1b288f327",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 18839,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "16eba049-6842-457a-9e15-54966e784bb8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 18941,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bfc4c404-368a-47ce-8725-464ee58b975c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 20074,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "39998b36-9c98-4e4a-93f6-f112b113c46b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 18949,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0166a5d1-afb9-4daa-be9d-8b03eadbd943",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 18658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e59bf4d4-8b91-41c2-8a74-01791594755b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 19025,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ef160813-3086-45cf-98e7-f03062aa9d89",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 18555,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ef082616-b849-4906-9529-e27cd83ba5ec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 18960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e1c43b5e-e470-4d5c-9041-89126626df78",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 18214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "75b463fa-9eb2-4754-87ab-4e3c3dbb86ea",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 18068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7d37137a-fb7d-44ef-b74d-0d31d0ae8bb5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 12",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 12",
              "timedOut": false,
              "duration": 19716,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ffc8fab5-dfd9-4b0d-8d76-5e07966d8598",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 13",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 13",
              "timedOut": false,
              "duration": 18535,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e41fe2a8-e35a-4654-b242-d35e346953c6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 14",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 14",
              "timedOut": false,
              "duration": 17965,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2b5c2136-49ac-4c08-b6af-a70f3241d9ea",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 15",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 15",
              "timedOut": false,
              "duration": 19347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "156257a7-3d3e-46d5-8f4b-8f9abee90858",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 0",
              "fullTitle": "click test helloworld python -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 12325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "39e973c0-36bf-4a70-8405-7430f25addac",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 1",
              "fullTitle": "click test helloworld python -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 13297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc33e473-f226-477f-b99c-00681f9796d2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 2",
              "fullTitle": "click test helloworld python -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 13169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ce85ddd4-a2fa-4377-bf9a-1bdb4d79d794",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 3",
              "fullTitle": "click test helloworld python -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 15782,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c85b0128-7de5-412b-87af-3e5f56920f99",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 0",
              "fullTitle": "click test helloworld python -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 20543,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c6d1b2d6-4cab-400d-b6ba-b3a717fa9994",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 1",
              "fullTitle": "click test helloworld python -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 19329,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "daede4b4-ca4b-40de-94b8-6bc3b134d559",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 2",
              "fullTitle": "click test helloworld python -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 19365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ff5c88ef-ad9d-48a7-9a83-de8aa1fca586",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 3",
              "fullTitle": "click test helloworld python -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 20731,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "11e01121-e9aa-4a1f-9e24-53d0231cedc3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 4",
              "fullTitle": "click test helloworld python -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 19705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0a180274-ec74-458e-80a4-9afd4fe23ebc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 5",
              "fullTitle": "click test helloworld python -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 19668,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "96d05a28-074d-464e-9dcf-94a9ef6b7eec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 6",
              "fullTitle": "click test helloworld python -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 20883,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d400b372-c429-437a-9d02-b7e73fb54a49",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 7",
              "fullTitle": "click test helloworld python -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 21386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d9f1acd2-fd07-4ac3-9d23-7d30199a99c1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 8",
              "fullTitle": "click test helloworld python -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 18708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b6fbf37b-bf84-483d-9c3d-ef7781b505f9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 9",
              "fullTitle": "click test helloworld python -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 19256,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a47105c5-45c1-4e08-a0ce-c56cd09d1c02",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 10",
              "fullTitle": "click test helloworld python -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 19112,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8740f5af-4908-4bf4-b5d9-dda9ed5388f1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 11",
              "fullTitle": "click test helloworld python -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 18212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "19b57dfc-77ec-4091-aa5d-fa0080fbb846",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 12",
              "fullTitle": "click test helloworld python -> abcdqwr -> 12",
              "timedOut": false,
              "duration": 19437,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8c1b7430-91ea-4830-842a-7b6ff7b10922",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 13",
              "fullTitle": "click test helloworld python -> abcdqwr -> 13",
              "timedOut": false,
              "duration": 18035,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5354df15-7509-4eb8-9ff2-c6937a72048f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 14",
              "fullTitle": "click test helloworld python -> abcdqwr -> 14",
              "timedOut": false,
              "duration": 20995,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "747dc30d-4a84-476b-9681-f94c39b808a2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 15",
              "fullTitle": "click test helloworld python -> abcdqwr -> 15",
              "timedOut": false,
              "duration": 21278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8ed6d86c-002f-447f-9428-64399994d90f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 16",
              "fullTitle": "click test helloworld python -> abcdqwr -> 16",
              "timedOut": false,
              "duration": 19953,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "48927e23-d2cb-4051-ae77-435e6bb54775",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 0",
              "fullTitle": "click test helloworld python -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 11389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cec666df-528b-416f-b807-ea9548009d1f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 1",
              "fullTitle": "click test helloworld python -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 12593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f0df024-2774-41e0-8153-9cf8ce5c5356",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 2",
              "fullTitle": "click test helloworld python -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 14891,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1b506a68-0f20-4021-a0f5-9c1202b6304b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 3",
              "fullTitle": "click test helloworld python -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 12371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8230080c-2c4b-450d-a197-75b8c47cc9b1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 4",
              "fullTitle": "click test helloworld python -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 11694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc6a563f-5932-4a98-8493-bfa8c1a095d9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 5",
              "fullTitle": "click test helloworld python -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 15928,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b44bda08-6ae9-4551-bb0c-b09ba0c259d7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 6",
              "fullTitle": "click test helloworld python -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 11514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f90eff77-1c2a-4d28-8376-d4e41c540aa1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 7",
              "fullTitle": "click test helloworld python -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 14424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b3ad82cc-ca43-4f2f-8b84-bfef64151747",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 8",
              "fullTitle": "click test helloworld python -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 12261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7136e85-65ab-4a18-947b-0a736a79794a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 9",
              "fullTitle": "click test helloworld python -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 14748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7ae32f9-41c3-4934-bf47-51cf2e2ad244",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 0",
              "fullTitle": "click test helloworld python -> hopeubest -> 0",
              "timedOut": false,
              "duration": 15162,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fb14d5db-6046-4425-b5cf-516f147aecb1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 1",
              "fullTitle": "click test helloworld python -> hopeubest -> 1",
              "timedOut": false,
              "duration": 14230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fe857688-7715-47c2-bdb3-70a2d9998125",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 2",
              "fullTitle": "click test helloworld python -> hopeubest -> 2",
              "timedOut": false,
              "duration": 12796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bd8cc203-7679-4f54-a36f-510475a6e9ca",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 3",
              "fullTitle": "click test helloworld python -> hopeubest -> 3",
              "timedOut": false,
              "duration": 14209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "016c4101-6f4f-4603-8c15-ae13f7529e7c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 4",
              "fullTitle": "click test helloworld python -> hopeubest -> 4",
              "timedOut": false,
              "duration": 13343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5cafb427-9732-49a6-ae5e-bca46993c71f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 5",
              "fullTitle": "click test helloworld python -> hopeubest -> 5",
              "timedOut": false,
              "duration": 14776,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f419d37-1d8e-40a4-b5cd-ed77805fa464",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 6",
              "fullTitle": "click test helloworld python -> hopeubest -> 6",
              "timedOut": false,
              "duration": 14752,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "026a49fb-f818-4b22-835b-e21b8c8ed8d1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 7",
              "fullTitle": "click test helloworld python -> hopeubest -> 7",
              "timedOut": false,
              "duration": 13064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dae756c8-9b6d-403a-b7dc-a0041ff988ec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 8",
              "fullTitle": "click test helloworld python -> hopeubest -> 8",
              "timedOut": false,
              "duration": 11436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8cbcb786-2c49-42b8-b591-eeb0c8f8e652",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 9",
              "fullTitle": "click test helloworld python -> hopeubest -> 9",
              "timedOut": false,
              "duration": 14493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c72c1476-34d9-48f3-aebd-c1aea77110a7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 10",
              "fullTitle": "click test helloworld python -> hopeubest -> 10",
              "timedOut": false,
              "duration": 10895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52e8292a-ee26-42ec-8a30-7ea20064778e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 11",
              "fullTitle": "click test helloworld python -> hopeubest -> 11",
              "timedOut": false,
              "duration": 13570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa7cdc80-f7ad-4574-8613-bb2ad7de2bb7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 12",
              "fullTitle": "click test helloworld python -> hopeubest -> 12",
              "timedOut": false,
              "duration": 11857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9dbfe9f-4ec3-4368-bff0-7661c7e049c1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 13",
              "fullTitle": "click test helloworld python -> hopeubest -> 13",
              "timedOut": false,
              "duration": 13939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ae8d5e06-3e7a-4b17-9018-ab7ab3a8a20d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 14",
              "fullTitle": "click test helloworld python -> hopeubest -> 14",
              "timedOut": false,
              "duration": 11829,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0086d116-d2f1-40e7-83f8-322b90470fe1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 15",
              "fullTitle": "click test helloworld python -> hopeubest -> 15",
              "timedOut": false,
              "duration": 10791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fa39d80f-7280-4ac1-bb61-babea2fd6af7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 0",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 12609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "83d549e8-98a5-487e-94b1-6aab95c2e7f1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 1",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 14263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b98f8456-de72-40bb-8fe6-9dce57cd5285",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 2",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 15067,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "047350ad-eb26-4288-bf4c-576dc659f546",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 3",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 12494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7542e22b-2b55-4755-b2df-2434e3ead401",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 4",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 12456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2207a2ff-206a-4674-9913-088f93e04917",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 5",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 14123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5305ad7b-b47c-4449-859d-6aef677b11fe",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 6",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 12725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b895e262-f65b-4cd8-bda3-675b7b226472",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 7",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 12967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8acdf555-fb70-4cb7-bc56-c7f034c38285",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 8",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 14900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "16699ab8-d48f-482f-9138-a8385d293a4d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 9",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 11889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7602813d-c84b-4730-9aef-5e718bcfa0a5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 10",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 11578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0e66282a-8dc7-4b32-9dff-1752cd137435",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 11",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 14656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "745a98c9-8327-4037-80ae-698471c9894f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 12",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 15089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "42c2d3b4-e59a-4161-85dd-ada36cb371e6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 13",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 12469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d22d0d1a-5705-409e-93be-3c5bf009f0f3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 0",
              "fullTitle": "click test helloworld coding -> memegod420 -> 0",
              "timedOut": false,
              "duration": 12325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "710d32d0-9d2d-4bac-89ee-1f2718c19547",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 1",
              "fullTitle": "click test helloworld coding -> memegod420 -> 1",
              "timedOut": false,
              "duration": 12669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "afbb1274-0a50-4fa2-a4a9-e48a681110fc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 2",
              "fullTitle": "click test helloworld coding -> memegod420 -> 2",
              "timedOut": false,
              "duration": 13556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e05224fa-b129-4705-80f1-32aa8c7df918",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 3",
              "fullTitle": "click test helloworld coding -> memegod420 -> 3",
              "timedOut": false,
              "duration": 13933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "65aef475-9556-4a1e-aa51-1a85c51a4a64",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 4",
              "fullTitle": "click test helloworld coding -> memegod420 -> 4",
              "timedOut": false,
              "duration": 11919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6595da5f-a2eb-4af5-8018-bd2c2bd87308",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 5",
              "fullTitle": "click test helloworld coding -> memegod420 -> 5",
              "timedOut": false,
              "duration": 13202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "74018fc0-e348-4fa5-98a2-9f0ce01cc797",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 6",
              "fullTitle": "click test helloworld coding -> memegod420 -> 6",
              "timedOut": false,
              "duration": 13157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ee6851c-39b0-40bc-b21e-b88ed13893c8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 7",
              "fullTitle": "click test helloworld coding -> memegod420 -> 7",
              "timedOut": false,
              "duration": 11785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f8f12f78-91a1-4cb9-b4c4-165616003a04",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 8",
              "fullTitle": "click test helloworld coding -> memegod420 -> 8",
              "timedOut": false,
              "duration": 11087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "15f54590-8ec1-4f54-8dcb-e1cd6ced9552",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 9",
              "fullTitle": "click test helloworld coding -> memegod420 -> 9",
              "timedOut": false,
              "duration": 12307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "384203b5-5b0f-42ef-a594-fc108e9cfb94",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 10",
              "fullTitle": "click test helloworld coding -> memegod420 -> 10",
              "timedOut": false,
              "duration": 14291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d26911f-befe-4206-8682-6015d815b831",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 0",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 26145,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "bf272a5d-5bbc-49e1-a910-d5c760bf376d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 1",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 25834,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "30ae1e3c-5e0a-4215-b611-e13b555fc531",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 2",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 27703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8daf394e-678e-4136-96ca-ca705adf0575",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 3",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25630,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "908cf659-f505-43d1-93f4-f029bd5d0258",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 4",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 26621,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "076bc1f0-3627-4901-b98e-5ecccf56642c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 5",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 26757,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2f684ac2-f516-4d24-8ff3-a2ef4238a870",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 6",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 25809,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "68ff9bd8-93f0-4772-9442-acc9832d6a2a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 11721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26c17e32-cb32-456e-a215-6f705c54b263",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 13818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e651e0a-f9ab-4979-9eab-80de4c619b4e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 11895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68442154-6a0e-47f8-aaef-ef557006cdd1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 13253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "70c9dea0-b815-447f-992b-6c9a669e780a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 11658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "84d96c3a-7825-4023-882d-22c8baa2fc3a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 12797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2b24a2f0-6b57-47c6-93a5-06152bd4ab4a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 12818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "117f4558-6400-458c-857a-4f5660b33771",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 12971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e000e34a-5cd1-4a12-a67a-e7fcf40f2e3f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 13423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bf9b5e47-b243-4574-aaf1-dc469f5338c9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 12308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c63b24a2-2f9b-4050-b029-7691e19465b3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 12130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9961b628-127d-45d6-897b-2b4eb300ce2c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 14279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "59fab75a-22bf-4560-9874-8c96df0d9d43",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 11493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d183508e-1816-40db-9ee7-eabbfb95120b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 13061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7d9c3c1-4188-4739-9067-b53b6dc057d4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 14441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4be4a733-9e82-461f-b2be-0009a755f1fb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 11023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd8af829-4ad4-4e77-9872-ac7ffc8cad42",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 13388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d92dc0f9-8d96-4d0b-ad29-9818137ad7fe",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 12162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a0951e70-e37a-4ab1-b1af-a1f7c523df5d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 14174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "75a026af-edf3-4551-acc4-c848f9e244f9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 14351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dee05206-1d85-4ff4-b994-7dd25562741d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 14694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "92ee4d63-8eb0-4730-bb0a-c4539f38efdc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 14275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6cfa8ab9-7d47-48fe-b45f-21529965a445",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 13819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "95bfd9ad-b32e-4444-94d9-f56920a7e981",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 15407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c107f153-345a-4f09-8416-fd141aa6d35d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 13182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e8c11e8e-145c-49c5-8d25-c86e5bb6f673",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 12635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b465f4b4-8864-4867-bde5-d818f6376464",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 13",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 13",
              "timedOut": false,
              "duration": 11035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "178f1ef9-fbb4-4e1d-bc3a-866758566a3b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 14",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 14",
              "timedOut": false,
              "duration": 12405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "175241da-3a72-4f6e-86a2-773277ba5b17",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 15",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 15",
              "timedOut": false,
              "duration": 13457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f8618394-32a7-4d12-abbb-d99fd21d7ac2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 16",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 16",
              "timedOut": false,
              "duration": 15654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "76bfb978-a81c-4e9e-82c7-9d42d8833686",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 0",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 17797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "97b0d24b-22cc-4400-ba60-5e4d9765e2ae",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 1",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 17500,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a4808990-9553-47f6-a29b-ea0917bc806f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 2",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 17444,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5a9e71f0-bab7-46a2-9560-38a80f784ffd",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 3",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 17887,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e13ad1e5-f8e7-4721-9924-ddf447100b36",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 4",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 17619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7301a71f-8ce0-4047-b0e5-cde0eda8355b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 11096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "14b97772-0b6f-4e1b-9b15-c9715b70d71f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 12715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c8a22838-b48b-4078-8b4a-f6be0f7a315c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 14280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "21811066-2453-419c-88f2-e6bef48e837e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 14647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "15afe3a6-f09f-4675-abd0-67ce416e042d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 11457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71c272b5-9551-4fef-85a0-aaa463f3f54b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 11993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72004cfd-9ced-42bb-9b24-e959251d0cf9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 12548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fa82aa90-30d6-4e0d-96cb-dc07bcc6a451",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 13378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "32fc70cb-f4ec-48d9-bb4d-c6966fbb2475",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 13004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6954e0c3-777a-42fe-8690-91cbbdbef3ad",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 13775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0603942f-afc6-4ab2-a325-43eaf0868616",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 11931,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2cbd16b7-8db0-418d-b53b-8ffecae2c895",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 14907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b48b95b-353f-4f81-a51f-7237191eac88",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 12476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f9c1408c-64be-4146-975f-c36e9e1d2df8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 11725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "20e96cc9-6af6-4f96-9adb-5812784ac95d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 13587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f3f969ad-11bf-43d8-8826-ebda8de7b5f2",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 11782,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93351d49-95c3-4e08-859c-e88be733b9d5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 11521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "70cdbda4-058b-49d2-b32e-a835737dc0a7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 12943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "53c8752a-a432-4367-990f-b9b5a2d58a13",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 12250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d00171d-be31-4c47-af0d-643f21720912",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 0",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 13137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fd24d5b6-b409-4ebd-aaef-7564fb337692",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 1",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 13140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3dd0ad20-d94b-436e-b902-832add7e4acd",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 2",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 12674,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7c89114b-fc07-49b5-ac90-d8f1679cdaf4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 3",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 13492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d6444a9e-f11f-452f-895e-1557f86d4d7b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 4",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 14760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d101396f-09ec-4af3-b879-329ecf0207b1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 5",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 14099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "35f3933f-8854-4c9f-9c59-2a94c547cfb9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 6",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 13884,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "496b7610-1721-48ab-aec5-c9850285d819",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 7",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 12790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7ae9f12b-e93a-4fa9-8825-c0e774161b6d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 8",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 11432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "194ade8e-a0fb-4e54-807c-edfc0003b87c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 9",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 12347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4c409ca4-f962-4c4d-894b-cae6e0683649",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 0",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 12080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8ac51dee-48d0-4b8c-9dec-a10f9d320e00",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 1",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 10956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d111244-d07a-4aea-b555-ea8035d3a8fc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 2",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 11358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "03b77aef-c411-4827-ac6e-d539846e5bfe",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 3",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 13035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6d1399d9-1d91-449d-bde8-8335fc44c430",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 4",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 11512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "36b9b70c-f2c4-4f7e-b55f-dd54b94f37ef",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 5",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 14072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7e271b6e-ed83-4ee6-8bed-26d244e8560b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 6",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 12959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d24b7c03-3827-4cb6-a1be-a8e5bab5b18e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 0",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 19449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "46c90a9d-6cdf-4f0f-b89e-eb576b78d14b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 1",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 18399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6248f7b5-6082-4acb-aa7a-24662118a69a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 2",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 18629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "01ef71f2-25d4-474a-9422-69777baeb4ad",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 3",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 20247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "49ba5f3c-edbc-4d5f-a62f-fd9dd2e3c99f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 4",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 19364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c297ec4b-60b0-43ac-afd3-06178ea3330a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 5",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 19199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a45706b3-231f-4a1f-a5d9-f97f750f4984",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 0",
              "fullTitle": "click test helloworld coding -> hopeubest -> 0",
              "timedOut": false,
              "duration": 14212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e3f5725c-c6cc-4889-88a5-37e6129b8a8f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 1",
              "fullTitle": "click test helloworld coding -> hopeubest -> 1",
              "timedOut": false,
              "duration": 13492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b699e79a-0fa4-4721-a3c6-42738cc4fabc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 2",
              "fullTitle": "click test helloworld coding -> hopeubest -> 2",
              "timedOut": false,
              "duration": 12122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "33f33e22-3d13-45a8-89ca-88015d1dc46b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 3",
              "fullTitle": "click test helloworld coding -> hopeubest -> 3",
              "timedOut": false,
              "duration": 14225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "86409b72-d817-4fd1-a668-fbd797ddb21a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 4",
              "fullTitle": "click test helloworld coding -> hopeubest -> 4",
              "timedOut": false,
              "duration": 14081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6180ee81-000a-476d-b9c7-9f7f9ed31fc4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 5",
              "fullTitle": "click test helloworld coding -> hopeubest -> 5",
              "timedOut": false,
              "duration": 12925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "08c78d86-c7be-4e16-a692-68b5194b4f20",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 6",
              "fullTitle": "click test helloworld coding -> hopeubest -> 6",
              "timedOut": false,
              "duration": 14440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "298fe6a0-0d9e-4e37-b53d-81ca5e24a1cd",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 7",
              "fullTitle": "click test helloworld coding -> hopeubest -> 7",
              "timedOut": false,
              "duration": 13107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7edc967-aff1-443b-b991-af5262a9a4cf",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 8",
              "fullTitle": "click test helloworld coding -> hopeubest -> 8",
              "timedOut": false,
              "duration": 13175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52acd1a1-2bf9-4b80-8769-0de9c1a8b5ff",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 9",
              "fullTitle": "click test helloworld coding -> hopeubest -> 9",
              "timedOut": false,
              "duration": 13055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0b0a283-d227-4e0d-a54e-39bc3f5c53e6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 10",
              "fullTitle": "click test helloworld coding -> hopeubest -> 10",
              "timedOut": false,
              "duration": 11304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e6b9ca29-c753-49d8-a265-9ed5673408ab",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 0",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 11470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8632dca8-3165-48b4-8ba4-f5a05418bc7c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 1",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 13207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa750ded-64b9-4d8a-94de-ec3ddbda1b20",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 2",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 12758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9cb7a926-05e8-43ca-b775-26558c42be45",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 3",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 13169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "344f6e81-ac96-4e2a-a50b-839688ceb8fb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 4",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 12864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a365e72-398b-4812-8670-77f663b0a4f4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 5",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 11982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f6702a06-455e-46ae-bdee-ba1a9bbf3089",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 6",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 11306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1ee69b5d-2763-4e7b-bb24-3d81356ed053",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 7",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 13650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc63274c-c866-43d9-ac3c-d9339d748710",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 8",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 13430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "23430e34-8b5e-447f-9912-f4bafb13abc7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 9",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 14454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6cfe4756-c39d-4ef8-9b3c-061cb4c541e8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 10",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 11241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1bb097e5-757c-4dcc-af2e-6900e474cb9b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 11",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 12291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f5f20353-a23c-428b-96ac-a37b47c95079",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 0",
              "fullTitle": "click test helloworld programming -> memegod420 -> 0",
              "timedOut": false,
              "duration": 12062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e650929-a0df-4dbc-8747-757fcb4957e1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 1",
              "fullTitle": "click test helloworld programming -> memegod420 -> 1",
              "timedOut": false,
              "duration": 11642,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46aaa28d-1917-4a3f-b6f3-650b4ef5902f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 2",
              "fullTitle": "click test helloworld programming -> memegod420 -> 2",
              "timedOut": false,
              "duration": 13525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2aae0b52-8529-40ce-a9c1-fbb723291b33",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 3",
              "fullTitle": "click test helloworld programming -> memegod420 -> 3",
              "timedOut": false,
              "duration": 14317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba799362-5868-40b0-9c40-edf20b3795d7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 4",
              "fullTitle": "click test helloworld programming -> memegod420 -> 4",
              "timedOut": false,
              "duration": 11510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "17de86b3-808a-4166-b2cd-bbc9017b0239",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 5",
              "fullTitle": "click test helloworld programming -> memegod420 -> 5",
              "timedOut": false,
              "duration": 12620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4d1b386c-82ce-4054-8be9-ce51326d511f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 6",
              "fullTitle": "click test helloworld programming -> memegod420 -> 6",
              "timedOut": false,
              "duration": 12374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "394bcad0-230e-4d86-90c1-ec083ad04676",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 7",
              "fullTitle": "click test helloworld programming -> memegod420 -> 7",
              "timedOut": false,
              "duration": 11100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "840a2a6d-22de-4c5f-8ed1-11b01db6cef8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 8",
              "fullTitle": "click test helloworld programming -> memegod420 -> 8",
              "timedOut": false,
              "duration": 13642,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a5eae5c-c362-4478-8cd3-85a76720f44c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 9",
              "fullTitle": "click test helloworld programming -> memegod420 -> 9",
              "timedOut": false,
              "duration": 11817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9350f7d4-0587-4ad4-8088-9070305ae0ea",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 10",
              "fullTitle": "click test helloworld programming -> memegod420 -> 10",
              "timedOut": false,
              "duration": 11962,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d80f89e0-c0fb-4258-8f0d-f33dd45b5970",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 11",
              "fullTitle": "click test helloworld programming -> memegod420 -> 11",
              "timedOut": false,
              "duration": 11684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "70c3716b-32fa-4428-8588-0eb0898c0a60",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 12",
              "fullTitle": "click test helloworld programming -> memegod420 -> 12",
              "timedOut": false,
              "duration": 14041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e9767b2d-797c-47f2-be32-1bd0b6570204",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 13",
              "fullTitle": "click test helloworld programming -> memegod420 -> 13",
              "timedOut": false,
              "duration": 12010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2616650b-77b2-4727-985c-36835e05581e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 0",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 26524,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3e3760b9-ee7a-4e8c-b140-c56f111abb54",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 1",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 18982,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3cf0dc9b-cf7f-4707-8a52-32a1773ed1b1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 2",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 26187,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d51d7a33-1567-4b75-b68e-e3056a7000fb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 3",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8f446d2d-d4c5-44d5-9433-49a00223d007",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 4",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 28327,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "46a80af5-a39e-4ba5-a12c-0a239b8e02ff",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 5",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 25211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "29b95ae3-77f9-47b4-bd09-c766b29d9ea5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 6",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 25301,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9fac62a8-f2e5-4e94-bf44-bd9de46c096b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 7",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 26516,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8b36dec9-5ebc-4b9a-b1c6-41ceec839977",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 8",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 18988,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c843d414-d3fd-4076-9325-fca701d65371",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 9",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 25416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "51cc7ea2-50e4-44f4-9800-cf282e61579d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 10",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 25025,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e581629e-f868-4453-929e-2df30650d02b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 11",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 24990,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "77e7404a-a33c-4c2f-b50c-33ff88c4b1c7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 12",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 24931,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "24b15036-47e2-4e90-8a28-9055e54d6ce5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 13",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 25187,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c81d240e-1aac-4581-bff5-67836893892f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 13138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67b62855-0438-474e-a6bf-727e6544d5ec",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "de4139b4-1c6d-4b3d-ad3c-b7b6cf05176d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 12582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "33122d64-ca64-41c7-9ca9-eb620c34ad15",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 19505,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6ade1423-09ce-4dc9-b5d1-9bc3379866f4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 19521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c816b1ee-449e-4b01-b898-179a7cc26d85",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 18553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "82385bc0-95ea-4fd0-8ac6-161dab898c65",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 19013,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "93393dd2-8c61-4de6-9acb-4cc8fd09652c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 20198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9f4a378c-92df-4956-937e-42da655b6c83",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 18351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1b9e6336-4a48-4de8-91e1-8c39054ef3b8",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 18077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4c3365f7-a19d-4207-9647-d1720f5ba304",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 18532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "427847ea-8286-4b1a-9e76-f09cb08952bc",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 19631,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6f080159-1e8a-4c60-918d-5d90e3357abf",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 19014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0e34b0b2-0b14-4dd8-9053-d871311967d3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 0",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 18690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4653c91e-f0c2-493e-bf56-7ca0797ff27e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 1",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 18015,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d0f028f3-da37-4d47-9ed3-ecec2f8269e4",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 2",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 18031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c8e2c403-5a4e-4c28-9b8d-6ce01738632c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 3",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 18816,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a85b2523-9c25-4eed-8d8a-56e035fc021d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 4",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 17643,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b2aea362-dd86-42dc-a109-98b54235fa6d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 5",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 18434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b5f017ce-1745-473d-bd27-05337d717471",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 6",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 17385,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c4c6dd95-c266-4234-b97b-d2e39cdc7be7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 27110,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "618b26de-283f-4b3f-b3a5-019baba1bc50",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 26376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "36fe73ec-6c31-4fd4-a242-e1c168f7bfa7",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 26788,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a21166fd-d09c-4f9c-8b9c-7e2056b6a493",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 25469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "dfa49ed0-0dad-47f3-a944-95a3aacbe601",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 26101,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "513f4468-3740-4f2f-b538-ce864fc02a65",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 26143,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "32a2fe94-7324-46ce-89c4-0f03a65adaab",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 26153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6bfc2b3f-4af4-4582-b217-7dab7c8ea92e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 25778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "86086e01-5949-4e97-8674-5febe53076a3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 25833,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "66707da1-4ae4-4749-9c92-d3e51e2ed13e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 26284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5974601f-fdc0-417a-a722-5fda59023a07",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 25080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fc37beca-73ac-46e7-a5b4-59622a19f037",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 25515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d41573db-c2d0-4eec-8681-a605e034c8c3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 17536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f6674160-f5ad-435c-a30a-8c0564935e04",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 26467,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d6ea8d73-77bb-431b-8c14-f14ec85352b1",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 14",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 14",
              "timedOut": false,
              "duration": 26218,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6f76ff27-c543-4f25-8973-d6902c4ee1b5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 15",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 15",
              "timedOut": false,
              "duration": 26372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8d3ea274-3898-4863-9bc3-07b0619b2476",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 18620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b02aa1d9-118c-4069-b3ce-ebcef54809bb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 17895,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a17607c2-fdbf-4161-83ca-5168644113b0",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 18501,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fba1299e-75c8-4659-b3a3-ccb43dfac9e3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 18592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8b0a9542-53e6-4c7d-b83b-6c2c8a20bf86",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 18648,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "41f196fe-4b76-4b3f-9c81-0467cf4ad018",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 17344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e3c74944-2d71-47b9-b5f6-a90a1b455538",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 19030,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f2c8c159-d2fd-48f7-bb9a-f5b4fd9ecd7e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 17738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d5941560-675a-489e-bc72-0871e9f8e500",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 18801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d6b65d94-a680-4a95-8d8f-161092f1ba69",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 17983,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "014e8777-6cf5-4e77-b20b-92c5d897af21",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 18097,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "583003bd-3f96-4096-a33d-613fa87467e9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 17730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "225fc68d-f0d3-4098-9fa1-fc3c5c2bf16a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 12",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 12",
              "timedOut": false,
              "duration": 18523,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "73db4057-414b-43c0-a2a7-dd23358fc411",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 13",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 13",
              "timedOut": false,
              "duration": 17558,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2156c736-47c4-435e-99bf-1b8ed3854eac",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 0",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 13284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "759b7469-511c-4c22-8f9e-cd0037c7a26f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 1",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 12966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91d4ee3c-c186-4338-8c4a-9819bc58fc15",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 2",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 12174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1555148f-5401-4b9d-ab6e-c2ecaf11a536",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 3",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 11392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3eec0775-7b22-432a-b403-5d9b4e6f3e0d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 0",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 19341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "098cbd95-b3c3-4781-bf8d-f0781115e83f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 1",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 18356,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c67125d4-d562-4d83-8f91-cfd04181b219",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 2",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 18538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f7bd20a7-364a-47bf-baef-b186fc8d4ebf",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 3",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 19274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aad82920-3d72-4628-a4ca-bd50f8b6683d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 4",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 18806,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "dc9387f1-816d-40bc-baa1-d51c14369f5d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 5",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 18369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "22c1c011-b719-4096-b9f6-aaf63e0dede9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 6",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 20270,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "84fd3305-4a7e-4b6c-9393-f7e7d6a20e8d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 7",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 19151,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e61e5689-25d2-4b27-8bf2-84b703428a55",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 8",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 19560,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "de198885-6157-4dd5-be4e-ef22fbea5079",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 0",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 18642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "de0137d9-0e95-4484-88f7-10732cee8f1c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 1",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 18303,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "24e5fdce-e215-43db-aba7-105d6aa33306",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 2",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 18194,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5f320a4b-8e33-4dd0-9532-16461247106d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 3",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 18029,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "34f4ecc8-a46c-4eb3-9216-671f99b67fc5",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 4",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 18257,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "50037267-7bcb-4f72-b722-37e87824e632",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 5",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 18289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ef2751e5-93db-4efe-a2fe-46e1c8522e04",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 6",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 20771,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "03c15963-7a53-465e-914c-39a6a2589d3b",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 7",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 17937,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7a7a5d63-0d8c-4122-9554-43c4f3a9fe1d",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 8",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 19410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b3b3ada0-2543-4135-b04c-ba55b537b747",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 9",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 18394,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4ee56566-bb32-4504-b591-b4e570b7ecad",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 10",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 20700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b1c5332a-5d94-48ca-8f89-64042be65dcd",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 11",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 18451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cd032fca-8d0a-4067-bcd1-9d117d82595e",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 12",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 22559,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "47789c74-b875-46a6-b41d-bbea72ea066c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 13",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 13",
              "timedOut": false,
              "duration": 15068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Page.captureScreenshot): Target closed.",
                "estack": "Error: Protocol error (Page.captureScreenshot): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:208:63\n    at new Promise (<anonymous>)\n    at CDPSession.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:207:16)\n    at Page._screenshotTask (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1105:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "08bb92b1-e0b7-4ef2-b65c-9b23df711b4f",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 14",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 14",
              "timedOut": false,
              "duration": 19907,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "977aee9c-a2a9-4ca8-bfee-b9457a6ca4d9",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 15",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 15",
              "timedOut": false,
              "duration": 19561,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "52008c6f-3d53-44c7-95dd-88ed982a6446",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 16",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 16",
              "timedOut": false,
              "duration": 20528,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e98076b9-6029-4360-91b7-9673ce3113be",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 0",
              "fullTitle": "click test helloworld programming -> hopeubest -> 0",
              "timedOut": false,
              "duration": 18173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "915f1796-be96-44d7-91e5-42241cfedc0c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 1",
              "fullTitle": "click test helloworld programming -> hopeubest -> 1",
              "timedOut": false,
              "duration": 19473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3f0856a5-6885-43d1-a7a5-9594285a51e6",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 2",
              "fullTitle": "click test helloworld programming -> hopeubest -> 2",
              "timedOut": false,
              "duration": 19553,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7b28eb02-2e1f-4f82-94c0-889127d8323a",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 3",
              "fullTitle": "click test helloworld programming -> hopeubest -> 3",
              "timedOut": false,
              "duration": 18256,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e973e0cd-d16c-41d4-acff-dfcc0815a4fb",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 4",
              "fullTitle": "click test helloworld programming -> hopeubest -> 4",
              "timedOut": false,
              "duration": 19933,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c4322892-f2c8-484f-b2a3-266c9973e2b3",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 5",
              "fullTitle": "click test helloworld programming -> hopeubest -> 5",
              "timedOut": false,
              "duration": 19221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "451e38af-b3da-4203-9b55-026c939ac17c",
              "parentUUID": "65454e8b-101d-4764-a4eb-e5d0d73eaed9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fff587e-35a2-4c4d-8554-33f8174762fa",
            "72cd6b53-fb1d-4867-8936-946b4c8572ff",
            "ff0815ae-6760-4898-8b0d-79a57d7a3fc7",
            "d94a89c8-3324-4b87-81be-161f33bd206d",
            "6ce73f8c-52bc-4396-8af0-3cada3550c8f",
            "488ed31b-d7dc-4d47-9632-bdb6b9525c04",
            "3395802c-addc-43e6-b7f8-35d44d288c1e",
            "388fdafc-f690-49e2-84cc-476285b93f54",
            "1f840dab-e9fa-4224-8d4d-d4b69383fe72",
            "887bd925-6a34-4f57-8fce-e7a4bd2c17a2",
            "746e38de-ca4b-462c-b2dc-533c803dd0f9",
            "6c921362-5395-4630-8ac6-8e128527c924",
            "7d73821f-dea9-4aa8-8619-0d6424677e7a",
            "3544e6c7-9343-4938-a700-98d470a626b8",
            "8e7582a0-b2c8-4720-8506-905b52206a15",
            "b8c39b88-f2a1-4f86-89b0-8edc198781d0",
            "91eb7819-ad68-415a-a371-646709e15428",
            "fe8f7290-4d34-45d9-9bdb-06e8f5e568ed",
            "ce80b2d9-acad-420a-b356-fad333509f41",
            "05fe2c06-8742-4058-8d32-3f24a7232c1f",
            "3557df46-04b0-4850-b831-bd78c93624c4",
            "2ee7b825-33b7-4757-8c40-d171dbd1c3b6",
            "9dd6cdf2-756e-4414-b387-0ec2907dfc63",
            "0f9322e2-56f5-4a6e-9032-f534d8191a6e",
            "60cd04e4-dcdd-4c26-8895-4a5b17e61407",
            "48dfe2fa-0831-4858-9d52-eb7306810ecc",
            "6d0b859d-6266-4319-ac01-cfd1ebaa67df",
            "6ac49635-f917-43cd-8998-676579ad5873",
            "27e21bc1-2223-45ff-9e43-8436e263bc83",
            "81cdaff4-e5c7-4967-bbe3-5130402b6f4f",
            "0b905050-e78e-440e-aac6-ce47e9349a87",
            "332ec4b5-9069-48ae-9589-7b365efe35b7",
            "eac8b9bb-a459-4997-b016-6ec0df9a7a38",
            "1b9c1ced-231b-4ce0-b9dc-84d1e0e1874c",
            "6c2183a0-14b2-4f0a-934e-a49558d6722b",
            "cb5094dc-e7bc-4c60-a515-38bb41a691bf",
            "7114cf65-7546-4dcd-842d-0af418cdce38",
            "da59be54-28cb-4a52-9b29-75a47d0bfe24",
            "04669e29-bf74-4686-b321-e10844de8d09",
            "2c3ed7af-0845-4166-8d34-40bdb34bd8ba",
            "68596940-9c64-4df4-9738-dad323733b4d",
            "27389070-753e-44fc-8456-f03aefc54a08",
            "f05216f2-1e65-4c40-b798-21f817ff6505",
            "9ab45ca7-ebbc-469c-ba65-42b30603e952",
            "b708de25-f30d-4bd0-8f9c-8449e800cab2",
            "e62a4513-b781-48ee-9c5f-40057d9ef8bb",
            "9096fad9-bcbe-4f27-b055-10ef8b97f0ad",
            "f06d00a5-527e-4313-9661-5ceaa48704a1",
            "0eb317fa-b1ce-4ca3-a30a-e01d073d21ae",
            "491116f1-adca-4af1-b8ac-53d581ad531d",
            "c231042f-eb2e-41dc-b605-3f7d71cb749a",
            "dd159be5-1c5c-49b4-8387-6743ccf3c548",
            "8baf2e5d-fa10-4051-9f75-9f2a735f53d1",
            "ecca110c-1c7a-41a7-9e02-9577b813e6c3",
            "c2930174-020d-47df-b820-41202a181d66",
            "c09eae6a-ed3b-4f79-8d2e-dc482555e2d9",
            "dc987d0e-2edf-44b0-bfc8-d71348585f74",
            "d9634971-f117-4adc-8c60-dd3295592580",
            "37a6040a-debe-4dad-b93f-152bf27ce8e5",
            "978d9229-20d8-4792-b83a-9182f57058a5",
            "bb8068ab-8add-4ddd-92b1-7854d9e3db0d",
            "4fb342c2-3a0a-4465-8459-b9036867f889",
            "540551c4-69ed-4450-85da-77be4f3ab576",
            "f46b4348-41b4-4c87-8b5f-07d9b192fa54",
            "c1353b46-3d2c-41e7-b329-d2c1e992cc89",
            "6b8bda4a-b62f-41c4-81d7-ae373d63ec20",
            "62e37143-7392-4be8-8977-e515bbc09080",
            "a31c2c49-22d6-4aab-8b68-5abd0b08dd44",
            "8f93ac95-4647-473b-b0d3-03c5d99f6619",
            "c80e7e9c-f36b-4c84-917f-ef019ef84e2e",
            "b7c68810-3264-483a-bf8f-9771c8c70e6b",
            "f20147f9-b8da-464d-b16a-057d928bc879",
            "c3c24107-cdc6-4995-abea-bcc177e0c03e",
            "b13704c6-4cdf-40af-83d4-a52e1624d39c",
            "4a2ad91c-d1f8-4f12-bb0d-97bc161b4f92",
            "cf57c25a-5352-42d3-917e-a5210e3ef74d",
            "b14f021d-abb6-4cf9-a1c0-7dccff8d2963",
            "72af3a4b-b5d9-4374-80f1-8c81649e62f6",
            "5d25d105-8dd7-4e51-b387-1d93deb4218b",
            "6f318fa1-5e5d-452e-b343-5a2bf728e79d",
            "8607e031-d2b7-4f25-a140-967e6d3c5dae",
            "abd515bb-2418-4674-ab91-5e987565cf75",
            "3f9a222a-7f50-4bb0-aeef-d53ae3c119fd",
            "370449ba-da24-4a93-af66-88cc19b0ad91",
            "1c28e46f-1865-424e-9a72-b2c225861ba9",
            "0911eb54-2085-4429-a829-a24f68a32e95",
            "15ebe332-1dc8-4cbd-a8c6-fd692d678684",
            "695de7d4-c7d2-42fd-be3f-ff3262f529e0",
            "daa1d981-d7a6-4df7-a656-a993261f008f",
            "c8f779e9-95ba-4fa1-9264-9ea8cbe7cafc",
            "d4feda83-68f6-406f-90ba-cf0674a9681e",
            "cb876e7f-bb6f-48fe-afcc-7f73dc953062",
            "5d4a2659-895b-4f1a-9615-44028fbeda82",
            "d6147225-8354-43ee-8580-02e18a898303",
            "03d0f847-dc40-40ff-8dd6-a6f504b6105f",
            "546a1889-9f83-479e-b44f-d1fffb1d5adb",
            "212da938-ebc1-4d31-90e7-631a3f84b814",
            "a19019e3-8b8b-451f-b256-33ad76711130",
            "9f3be73a-08a1-404e-ac26-04662d4212d9",
            "5fa7d072-5838-4a8b-aacd-49d8addbf3a0",
            "0801729b-d03f-4240-8df9-219074f25915",
            "84f322ad-969d-4c2e-be3a-b5a80e1f4e07",
            "3d66fb2a-c60d-4a23-b9c0-a80135783b49",
            "057fe73d-1eef-4a21-8d2c-0bb978c2c171",
            "be656185-7d8e-4207-acdd-1fa52b662a4e",
            "8a0d70b9-1e82-4e2b-8ed9-fb9e632a9b46",
            "eeec6459-faeb-4590-bed2-a7599e6cd096",
            "71ba7f63-57c0-44b0-b0a1-7e3de7f35d76",
            "5bf77dbe-8d6b-45dc-9677-c993252b36b3",
            "061e5533-6586-45f9-a1ee-8558a03f4c6d",
            "339ca1d0-cf46-47a1-a90a-b9e216ea2827",
            "ea4a69be-42e4-4334-816d-b3e8176dd9ab",
            "bb0b7bdf-75cd-4312-b57b-bcdcc8c41a29",
            "e1c76c22-cdec-4377-9ed1-4f6a64f91cda",
            "b9710cda-4fd8-40d3-99be-3c23a8cfc9f0",
            "ad68a0e9-42cd-48d8-b81a-af591f2e0bdc",
            "75dbd2e6-9eb9-494b-9245-0d28deacf185",
            "dcc636a9-8a82-4331-bf04-066d7a043bd3",
            "dd12c006-390b-4181-8a2d-fba89f9c71c1",
            "dd09b4f5-83dc-4bfe-9bf0-ba13d436ef67",
            "c9c92c50-34b8-4aa7-b81f-ae56aefaac36",
            "87e5802a-e833-43e8-8a4f-ce3bcd7c52a2",
            "d2f5d348-582f-47bd-a03e-5693031abad1",
            "b524517c-1e48-46fa-96c3-0d12db6b3759",
            "eb81aeaf-0d57-435c-924c-720f779055ac",
            "86c0897c-7f1f-44d7-acae-5139107f26bf",
            "12e0f7c1-c9c0-4889-9e1f-17cce9a64ff7",
            "c0621056-4f8f-40a6-9d3b-5a8c199b3b8b",
            "82846ccb-5099-46eb-af59-911de43ff6e8",
            "71fea60a-fe32-4967-a850-8face1562b79",
            "92b2b116-1942-49bb-bb6d-28164667a918",
            "0d2df975-1c90-4612-8815-af9dd5b1d1ec",
            "5fac18f1-1a98-42a2-b553-bcd5314fcc23",
            "f633eacf-4ce3-4839-a284-85becd9052ee",
            "3b8a93ea-02fe-4c51-b3a9-7d71982bc7ef",
            "6f42570e-f702-430f-911f-79a6259da57a",
            "539f4b3a-bd58-4c01-ad09-8e2b3eacfef7",
            "a9315f21-e5e0-48af-b57f-f2824b4e7ab4",
            "1527a398-d640-470c-8d30-f085af4bf0d9",
            "e4e10192-fa74-4738-b49b-1a5bfc420797",
            "2ed83892-377a-4473-a68f-8eac1e2096e1",
            "d369db28-5bf3-439c-9496-ae3b32dad744",
            "ada763a6-3232-4dc7-9b38-2e59392b40bb",
            "e9657468-f308-432d-9665-1a622581b595",
            "3319b632-c1f4-46bc-80b2-407299034870",
            "68c7dd04-7e13-44df-b929-19071e134975",
            "57546f0a-a761-4cf2-aff8-593e9e54bc97",
            "9779c094-4829-4e19-b810-a3b0eb42ef1f",
            "7a0ef91b-ac52-4cdc-8ad8-c820e7c4a2e7",
            "e5268616-13d8-4efb-95c8-a5e25e7a38a4",
            "6b7d492b-46aa-421d-bf25-362707393737",
            "39e973c0-36bf-4a70-8405-7430f25addac",
            "dc33e473-f226-477f-b99c-00681f9796d2",
            "ce85ddd4-a2fa-4377-bf9a-1bdb4d79d794",
            "cec666df-528b-416f-b807-ea9548009d1f",
            "8f0df024-2774-41e0-8153-9cf8ce5c5356",
            "1b506a68-0f20-4021-a0f5-9c1202b6304b",
            "8230080c-2c4b-450d-a197-75b8c47cc9b1",
            "cc6a563f-5932-4a98-8493-bfa8c1a095d9",
            "f90eff77-1c2a-4d28-8376-d4e41c540aa1",
            "b3ad82cc-ca43-4f2f-8b84-bfef64151747",
            "e7136e85-65ab-4a18-947b-0a736a79794a",
            "e7ae32f9-41c3-4934-bf47-51cf2e2ad244",
            "fe857688-7715-47c2-bdb3-70a2d9998125",
            "bd8cc203-7679-4f54-a36f-510475a6e9ca",
            "016c4101-6f4f-4603-8c15-ae13f7529e7c",
            "5cafb427-9732-49a6-ae5e-bca46993c71f",
            "1f419d37-1d8e-40a4-b5cd-ed77805fa464",
            "026a49fb-f818-4b22-835b-e21b8c8ed8d1",
            "dae756c8-9b6d-403a-b7dc-a0041ff988ec",
            "8cbcb786-2c49-42b8-b591-eeb0c8f8e652",
            "c72c1476-34d9-48f3-aebd-c1aea77110a7",
            "52e8292a-ee26-42ec-8a30-7ea20064778e",
            "aa7cdc80-f7ad-4574-8613-bb2ad7de2bb7",
            "d9dbfe9f-4ec3-4368-bff0-7661c7e049c1",
            "ae8d5e06-3e7a-4b17-9018-ab7ab3a8a20d",
            "0086d116-d2f1-40e7-83f8-322b90470fe1",
            "fa39d80f-7280-4ac1-bb61-babea2fd6af7",
            "83d549e8-98a5-487e-94b1-6aab95c2e7f1",
            "b98f8456-de72-40bb-8fe6-9dce57cd5285",
            "047350ad-eb26-4288-bf4c-576dc659f546",
            "7542e22b-2b55-4755-b2df-2434e3ead401",
            "2207a2ff-206a-4674-9913-088f93e04917",
            "5305ad7b-b47c-4449-859d-6aef677b11fe",
            "b895e262-f65b-4cd8-bda3-675b7b226472",
            "8acdf555-fb70-4cb7-bc56-c7f034c38285",
            "16699ab8-d48f-482f-9138-a8385d293a4d",
            "7602813d-c84b-4730-9aef-5e718bcfa0a5",
            "0e66282a-8dc7-4b32-9dff-1752cd137435",
            "745a98c9-8327-4037-80ae-698471c9894f",
            "d22d0d1a-5705-409e-93be-3c5bf009f0f3",
            "710d32d0-9d2d-4bac-89ee-1f2718c19547",
            "afbb1274-0a50-4fa2-a4a9-e48a681110fc",
            "e05224fa-b129-4705-80f1-32aa8c7df918",
            "65aef475-9556-4a1e-aa51-1a85c51a4a64",
            "6595da5f-a2eb-4af5-8018-bd2c2bd87308",
            "74018fc0-e348-4fa5-98a2-9f0ce01cc797",
            "6ee6851c-39b0-40bc-b21e-b88ed13893c8",
            "f8f12f78-91a1-4cb9-b4c4-165616003a04",
            "15f54590-8ec1-4f54-8dcb-e1cd6ced9552",
            "384203b5-5b0f-42ef-a594-fc108e9cfb94",
            "7d26911f-befe-4206-8682-6015d815b831",
            "26c17e32-cb32-456e-a215-6f705c54b263",
            "8e651e0a-f9ab-4979-9eab-80de4c619b4e",
            "68442154-6a0e-47f8-aaef-ef557006cdd1",
            "70c9dea0-b815-447f-992b-6c9a669e780a",
            "84d96c3a-7825-4023-882d-22c8baa2fc3a",
            "2b24a2f0-6b57-47c6-93a5-06152bd4ab4a",
            "117f4558-6400-458c-857a-4f5660b33771",
            "e000e34a-5cd1-4a12-a67a-e7fcf40f2e3f",
            "bf9b5e47-b243-4574-aaf1-dc469f5338c9",
            "c63b24a2-2f9b-4050-b029-7691e19465b3",
            "9961b628-127d-45d6-897b-2b4eb300ce2c",
            "59fab75a-22bf-4560-9874-8c96df0d9d43",
            "d183508e-1816-40db-9ee7-eabbfb95120b",
            "e7d9c3c1-4188-4739-9067-b53b6dc057d4",
            "4be4a733-9e82-461f-b2be-0009a755f1fb",
            "dd8af829-4ad4-4e77-9872-ac7ffc8cad42",
            "d92dc0f9-8d96-4d0b-ad29-9818137ad7fe",
            "a0951e70-e37a-4ab1-b1af-a1f7c523df5d",
            "75a026af-edf3-4551-acc4-c848f9e244f9",
            "dee05206-1d85-4ff4-b994-7dd25562741d",
            "92ee4d63-8eb0-4730-bb0a-c4539f38efdc",
            "6cfa8ab9-7d47-48fe-b45f-21529965a445",
            "95bfd9ad-b32e-4444-94d9-f56920a7e981",
            "e8c11e8e-145c-49c5-8d25-c86e5bb6f673",
            "b465f4b4-8864-4867-bde5-d818f6376464",
            "178f1ef9-fbb4-4e1d-bc3a-866758566a3b",
            "175241da-3a72-4f6e-86a2-773277ba5b17",
            "f8618394-32a7-4d12-abbb-d99fd21d7ac2",
            "14b97772-0b6f-4e1b-9b15-c9715b70d71f",
            "c8a22838-b48b-4078-8b4a-f6be0f7a315c",
            "21811066-2453-419c-88f2-e6bef48e837e",
            "15afe3a6-f09f-4675-abd0-67ce416e042d",
            "71c272b5-9551-4fef-85a0-aaa463f3f54b",
            "72004cfd-9ced-42bb-9b24-e959251d0cf9",
            "fa82aa90-30d6-4e0d-96cb-dc07bcc6a451",
            "32fc70cb-f4ec-48d9-bb4d-c6966fbb2475",
            "6954e0c3-777a-42fe-8690-91cbbdbef3ad",
            "0603942f-afc6-4ab2-a325-43eaf0868616",
            "2cbd16b7-8db0-418d-b53b-8ffecae2c895",
            "6b48b95b-353f-4f81-a51f-7237191eac88",
            "f9c1408c-64be-4146-975f-c36e9e1d2df8",
            "20e96cc9-6af6-4f96-9adb-5812784ac95d",
            "f3f969ad-11bf-43d8-8826-ebda8de7b5f2",
            "93351d49-95c3-4e08-859c-e88be733b9d5",
            "70cdbda4-058b-49d2-b32e-a835737dc0a7",
            "53c8752a-a432-4367-990f-b9b5a2d58a13",
            "7d00171d-be31-4c47-af0d-643f21720912",
            "fd24d5b6-b409-4ebd-aaef-7564fb337692",
            "3dd0ad20-d94b-436e-b902-832add7e4acd",
            "7c89114b-fc07-49b5-ac90-d8f1679cdaf4",
            "d6444a9e-f11f-452f-895e-1557f86d4d7b",
            "d101396f-09ec-4af3-b879-329ecf0207b1",
            "35f3933f-8854-4c9f-9c59-2a94c547cfb9",
            "496b7610-1721-48ab-aec5-c9850285d819",
            "7ae9f12b-e93a-4fa9-8825-c0e774161b6d",
            "194ade8e-a0fb-4e54-807c-edfc0003b87c",
            "4c409ca4-f962-4c4d-894b-cae6e0683649",
            "8ac51dee-48d0-4b8c-9dec-a10f9d320e00",
            "6d111244-d07a-4aea-b555-ea8035d3a8fc",
            "03b77aef-c411-4827-ac6e-d539846e5bfe",
            "6d1399d9-1d91-449d-bde8-8335fc44c430",
            "36b9b70c-f2c4-4f7e-b55f-dd54b94f37ef",
            "7e271b6e-ed83-4ee6-8bed-26d244e8560b",
            "d24b7c03-3827-4cb6-a1be-a8e5bab5b18e",
            "e3f5725c-c6cc-4889-88a5-37e6129b8a8f",
            "b699e79a-0fa4-4721-a3c6-42738cc4fabc",
            "33f33e22-3d13-45a8-89ca-88015d1dc46b",
            "86409b72-d817-4fd1-a668-fbd797ddb21a",
            "6180ee81-000a-476d-b9c7-9f7f9ed31fc4",
            "08c78d86-c7be-4e16-a692-68b5194b4f20",
            "298fe6a0-0d9e-4e37-b53d-81ca5e24a1cd",
            "a7edc967-aff1-443b-b991-af5262a9a4cf",
            "52acd1a1-2bf9-4b80-8769-0de9c1a8b5ff",
            "e0b0a283-d227-4e0d-a54e-39bc3f5c53e6",
            "e6b9ca29-c753-49d8-a265-9ed5673408ab",
            "8632dca8-3165-48b4-8ba4-f5a05418bc7c",
            "aa750ded-64b9-4d8a-94de-ec3ddbda1b20",
            "9cb7a926-05e8-43ca-b775-26558c42be45",
            "344f6e81-ac96-4e2a-a50b-839688ceb8fb",
            "2a365e72-398b-4812-8670-77f663b0a4f4",
            "f6702a06-455e-46ae-bdee-ba1a9bbf3089",
            "1ee69b5d-2763-4e7b-bb24-3d81356ed053",
            "dc63274c-c866-43d9-ac3c-d9339d748710",
            "23430e34-8b5e-447f-9912-f4bafb13abc7",
            "6cfe4756-c39d-4ef8-9b3c-061cb4c541e8",
            "1bb097e5-757c-4dcc-af2e-6900e474cb9b",
            "f5f20353-a23c-428b-96ac-a37b47c95079",
            "8e650929-a0df-4dbc-8747-757fcb4957e1",
            "46aaa28d-1917-4a3f-b6f3-650b4ef5902f",
            "2aae0b52-8529-40ce-a9c1-fbb723291b33",
            "ba799362-5868-40b0-9c40-edf20b3795d7",
            "17de86b3-808a-4166-b2cd-bbc9017b0239",
            "4d1b386c-82ce-4054-8be9-ce51326d511f",
            "394bcad0-230e-4d86-90c1-ec083ad04676",
            "840a2a6d-22de-4c5f-8ed1-11b01db6cef8",
            "9a5eae5c-c362-4478-8cd3-85a76720f44c",
            "9350f7d4-0587-4ad4-8088-9070305ae0ea",
            "d80f89e0-c0fb-4258-8f0d-f33dd45b5970",
            "70c3716b-32fa-4428-8588-0eb0898c0a60",
            "e9767b2d-797c-47f2-be32-1bd0b6570204",
            "2616650b-77b2-4727-985c-36835e05581e",
            "67b62855-0438-474e-a6bf-727e6544d5ec",
            "de4139b4-1c6d-4b3d-ad3c-b7b6cf05176d",
            "33122d64-ca64-41c7-9ca9-eb620c34ad15",
            "759b7469-511c-4c22-8f9e-cd0037c7a26f",
            "91d4ee3c-c186-4338-8c4a-9819bc58fc15",
            "1555148f-5401-4b9d-ab6e-c2ecaf11a536",
            "3eec0775-7b22-432a-b403-5d9b4e6f3e0d"
          ],
          "failures": [
            "14830b5a-cee4-4c19-b969-3b562209bde2",
            "502c79bf-0225-418a-985c-12991a7209c7",
            "88a99125-ac72-4be5-86f7-21a940a1f8cb",
            "6a5707c4-e0ec-4ad5-9e86-b15707cf21c4",
            "b4bb77ea-aab4-4713-bd27-2e4aafb0c140",
            "22606f24-0601-40cc-8dbc-6ca80faebef5",
            "573a96cf-0e0c-4afe-87d4-ac0da1d7c3a2",
            "db36fdb8-7fa7-4d57-be20-6239e3b93622",
            "9336ae8d-6bde-41c5-a9fa-4ca301571e84",
            "3a206cd3-4998-4c75-bbc5-9d62deb22f6f",
            "9fe55649-2432-4a8f-98cb-8c59b27ff9ec",
            "607ee65c-ec99-4424-b270-76b335b36471",
            "c1f3a732-13f7-4693-b2b0-0a99f516105d",
            "7e862b68-4dff-4e15-8d13-aedbbcaec818",
            "68a12883-f9ac-49e1-bf53-be25d939a6b1",
            "2d031c28-a96e-4613-abcd-5874d9f4ffe4",
            "e278e337-5589-4029-a430-4431afdeabb9",
            "ced7e580-a340-4385-a8de-f7f826827942",
            "a478df4d-37e9-418c-8ec2-de6c33e72749",
            "14303660-0b3a-40a2-9f1f-4d06fbc3cc68",
            "bbfbf813-dae8-41bf-9669-d56ea442ad01",
            "b73d7eb1-39a3-4eac-9bb3-76cb7efda950",
            "24dab836-7a6d-4a53-98f5-e81a0ce4e83e",
            "7ec56b58-60aa-4c8f-978b-2b057fb3cb73",
            "4233702b-b568-4647-8797-6e78911bcad3",
            "4601ebf6-3251-40af-8cbe-a212c9b9d968",
            "78138e1d-566e-4c65-97e3-8b3f2f3aae52",
            "1a9fc7e5-6a5c-4f38-b8c3-2516f59bcc34",
            "ffd6aae2-7b6d-473c-b2ee-50c1b288f327",
            "16eba049-6842-457a-9e15-54966e784bb8",
            "bfc4c404-368a-47ce-8725-464ee58b975c",
            "39998b36-9c98-4e4a-93f6-f112b113c46b",
            "0166a5d1-afb9-4daa-be9d-8b03eadbd943",
            "e59bf4d4-8b91-41c2-8a74-01791594755b",
            "ef160813-3086-45cf-98e7-f03062aa9d89",
            "ef082616-b849-4906-9529-e27cd83ba5ec",
            "e1c43b5e-e470-4d5c-9041-89126626df78",
            "75b463fa-9eb2-4754-87ab-4e3c3dbb86ea",
            "7d37137a-fb7d-44ef-b74d-0d31d0ae8bb5",
            "ffc8fab5-dfd9-4b0d-8d76-5e07966d8598",
            "e41fe2a8-e35a-4654-b242-d35e346953c6",
            "2b5c2136-49ac-4c08-b6af-a70f3241d9ea",
            "156257a7-3d3e-46d5-8f4b-8f9abee90858",
            "c85b0128-7de5-412b-87af-3e5f56920f99",
            "c6d1b2d6-4cab-400d-b6ba-b3a717fa9994",
            "daede4b4-ca4b-40de-94b8-6bc3b134d559",
            "ff5c88ef-ad9d-48a7-9a83-de8aa1fca586",
            "11e01121-e9aa-4a1f-9e24-53d0231cedc3",
            "0a180274-ec74-458e-80a4-9afd4fe23ebc",
            "96d05a28-074d-464e-9dcf-94a9ef6b7eec",
            "d400b372-c429-437a-9d02-b7e73fb54a49",
            "d9f1acd2-fd07-4ac3-9d23-7d30199a99c1",
            "b6fbf37b-bf84-483d-9c3d-ef7781b505f9",
            "a47105c5-45c1-4e08-a0ce-c56cd09d1c02",
            "8740f5af-4908-4bf4-b5d9-dda9ed5388f1",
            "19b57dfc-77ec-4091-aa5d-fa0080fbb846",
            "8c1b7430-91ea-4830-842a-7b6ff7b10922",
            "5354df15-7509-4eb8-9ff2-c6937a72048f",
            "747dc30d-4a84-476b-9681-f94c39b808a2",
            "8ed6d86c-002f-447f-9428-64399994d90f",
            "48927e23-d2cb-4051-ae77-435e6bb54775",
            "b44bda08-6ae9-4551-bb0c-b09ba0c259d7",
            "fb14d5db-6046-4425-b5cf-516f147aecb1",
            "42c2d3b4-e59a-4161-85dd-ada36cb371e6",
            "bf272a5d-5bbc-49e1-a910-d5c760bf376d",
            "30ae1e3c-5e0a-4215-b611-e13b555fc531",
            "8daf394e-678e-4136-96ca-ca705adf0575",
            "908cf659-f505-43d1-93f4-f029bd5d0258",
            "076bc1f0-3627-4901-b98e-5ecccf56642c",
            "2f684ac2-f516-4d24-8ff3-a2ef4238a870",
            "68ff9bd8-93f0-4772-9442-acc9832d6a2a",
            "c107f153-345a-4f09-8416-fd141aa6d35d",
            "76bfb978-a81c-4e9e-82c7-9d42d8833686",
            "97b0d24b-22cc-4400-ba60-5e4d9765e2ae",
            "a4808990-9553-47f6-a29b-ea0917bc806f",
            "5a9e71f0-bab7-46a2-9560-38a80f784ffd",
            "e13ad1e5-f8e7-4721-9924-ddf447100b36",
            "7301a71f-8ce0-4047-b0e5-cde0eda8355b",
            "46c90a9d-6cdf-4f0f-b89e-eb576b78d14b",
            "6248f7b5-6082-4acb-aa7a-24662118a69a",
            "01ef71f2-25d4-474a-9422-69777baeb4ad",
            "49ba5f3c-edbc-4d5f-a62f-fd9dd2e3c99f",
            "c297ec4b-60b0-43ac-afd3-06178ea3330a",
            "a45706b3-231f-4a1f-a5d9-f97f750f4984",
            "3e3760b9-ee7a-4e8c-b140-c56f111abb54",
            "3cf0dc9b-cf7f-4707-8a52-32a1773ed1b1",
            "d51d7a33-1567-4b75-b68e-e3056a7000fb",
            "8f446d2d-d4c5-44d5-9433-49a00223d007",
            "46a80af5-a39e-4ba5-a12c-0a239b8e02ff",
            "29b95ae3-77f9-47b4-bd09-c766b29d9ea5",
            "9fac62a8-f2e5-4e94-bf44-bd9de46c096b",
            "8b36dec9-5ebc-4b9a-b1c6-41ceec839977",
            "c843d414-d3fd-4076-9325-fca701d65371",
            "51cc7ea2-50e4-44f4-9800-cf282e61579d",
            "e581629e-f868-4453-929e-2df30650d02b",
            "77e7404a-a33c-4c2f-b50c-33ff88c4b1c7",
            "24b15036-47e2-4e90-8a28-9055e54d6ce5",
            "c81d240e-1aac-4581-bff5-67836893892f",
            "6ade1423-09ce-4dc9-b5d1-9bc3379866f4",
            "c816b1ee-449e-4b01-b898-179a7cc26d85",
            "82385bc0-95ea-4fd0-8ac6-161dab898c65",
            "93393dd2-8c61-4de6-9acb-4cc8fd09652c",
            "9f4a378c-92df-4956-937e-42da655b6c83",
            "1b9e6336-4a48-4de8-91e1-8c39054ef3b8",
            "4c3365f7-a19d-4207-9647-d1720f5ba304",
            "427847ea-8286-4b1a-9e76-f09cb08952bc",
            "6f080159-1e8a-4c60-918d-5d90e3357abf",
            "0e34b0b2-0b14-4dd8-9053-d871311967d3",
            "4653c91e-f0c2-493e-bf56-7ca0797ff27e",
            "d0f028f3-da37-4d47-9ed3-ecec2f8269e4",
            "c8e2c403-5a4e-4c28-9b8d-6ce01738632c",
            "a85b2523-9c25-4eed-8d8a-56e035fc021d",
            "b2aea362-dd86-42dc-a109-98b54235fa6d",
            "b5f017ce-1745-473d-bd27-05337d717471",
            "c4c6dd95-c266-4234-b97b-d2e39cdc7be7",
            "618b26de-283f-4b3f-b3a5-019baba1bc50",
            "36fe73ec-6c31-4fd4-a242-e1c168f7bfa7",
            "a21166fd-d09c-4f9c-8b9c-7e2056b6a493",
            "dfa49ed0-0dad-47f3-a944-95a3aacbe601",
            "513f4468-3740-4f2f-b538-ce864fc02a65",
            "32a2fe94-7324-46ce-89c4-0f03a65adaab",
            "6bfc2b3f-4af4-4582-b217-7dab7c8ea92e",
            "86086e01-5949-4e97-8674-5febe53076a3",
            "66707da1-4ae4-4749-9c92-d3e51e2ed13e",
            "5974601f-fdc0-417a-a722-5fda59023a07",
            "fc37beca-73ac-46e7-a5b4-59622a19f037",
            "d41573db-c2d0-4eec-8681-a605e034c8c3",
            "f6674160-f5ad-435c-a30a-8c0564935e04",
            "d6ea8d73-77bb-431b-8c14-f14ec85352b1",
            "6f76ff27-c543-4f25-8973-d6902c4ee1b5",
            "8d3ea274-3898-4863-9bc3-07b0619b2476",
            "b02aa1d9-118c-4069-b3ce-ebcef54809bb",
            "a17607c2-fdbf-4161-83ca-5168644113b0",
            "fba1299e-75c8-4659-b3a3-ccb43dfac9e3",
            "8b0a9542-53e6-4c7d-b83b-6c2c8a20bf86",
            "41f196fe-4b76-4b3f-9c81-0467cf4ad018",
            "e3c74944-2d71-47b9-b5f6-a90a1b455538",
            "f2c8c159-d2fd-48f7-bb9a-f5b4fd9ecd7e",
            "d5941560-675a-489e-bc72-0871e9f8e500",
            "d6b65d94-a680-4a95-8d8f-161092f1ba69",
            "014e8777-6cf5-4e77-b20b-92c5d897af21",
            "583003bd-3f96-4096-a33d-613fa87467e9",
            "225fc68d-f0d3-4098-9fa1-fc3c5c2bf16a",
            "73db4057-414b-43c0-a2a7-dd23358fc411",
            "2156c736-47c4-435e-99bf-1b8ed3854eac",
            "098cbd95-b3c3-4781-bf8d-f0781115e83f",
            "c67125d4-d562-4d83-8f91-cfd04181b219",
            "f7bd20a7-364a-47bf-baef-b186fc8d4ebf",
            "aad82920-3d72-4628-a4ca-bd50f8b6683d",
            "dc9387f1-816d-40bc-baa1-d51c14369f5d",
            "22c1c011-b719-4096-b9f6-aaf63e0dede9",
            "84fd3305-4a7e-4b6c-9393-f7e7d6a20e8d",
            "e61e5689-25d2-4b27-8bf2-84b703428a55",
            "de198885-6157-4dd5-be4e-ef22fbea5079",
            "de0137d9-0e95-4484-88f7-10732cee8f1c",
            "24e5fdce-e215-43db-aba7-105d6aa33306",
            "5f320a4b-8e33-4dd0-9532-16461247106d",
            "34f4ecc8-a46c-4eb3-9216-671f99b67fc5",
            "50037267-7bcb-4f72-b722-37e87824e632",
            "ef2751e5-93db-4efe-a2fe-46e1c8522e04",
            "03c15963-7a53-465e-914c-39a6a2589d3b",
            "7a7a5d63-0d8c-4122-9554-43c4f3a9fe1d",
            "b3b3ada0-2543-4135-b04c-ba55b537b747",
            "4ee56566-bb32-4504-b591-b4e570b7ecad",
            "b1c5332a-5d94-48ca-8f89-64042be65dcd",
            "cd032fca-8d0a-4067-bcd1-9d117d82595e",
            "47789c74-b875-46a6-b41d-bbea72ea066c",
            "08bb92b1-e0b7-4ef2-b65c-9b23df711b4f",
            "977aee9c-a2a9-4ca8-bfee-b9457a6ca4d9",
            "52008c6f-3d53-44c7-95dd-88ed982a6446",
            "e98076b9-6029-4360-91b7-9673ce3113be",
            "915f1796-be96-44d7-91e5-42241cfedc0c",
            "3f0856a5-6885-43d1-a7a5-9594285a51e6",
            "7b28eb02-2e1f-4f82-94c0-889127d8323a",
            "e973e0cd-d16c-41d4-acff-dfcc0815a4fb",
            "c4322892-f2c8-484f-b2a3-266c9973e2b3",
            "451e38af-b3da-4203-9b55-026c939ac17c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7406607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d6e01d3-d7a4-438f-a3a0-eb3cd05d35d6",
          "title": "sample test",
          "fullFile": "/usr/src/app/test/puppeteer-mocha-basic.js",
          "file": "/test/puppeteer-mocha-basic.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld",
              "fullTitle": "sample test helloworld",
              "timedOut": false,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\npage = await browser.newPage();\n// await page.goto('http://192.168.10.180:5500');\n// const [p_target_user] = await page.$x(`//p[contains(., '345')]`);\nawait page.close();",
              "err": {},
              "uuid": "a0a5fd0b-c083-43cc-9ac6-bdcc34e63b8f",
              "parentUUID": "7d6e01d3-d7a4-438f-a3a0-eb3cd05d35d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0a5fd0b-c083-43cc-9ac6-bdcc34e63b8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "output": "report.html"
      },
      "version": "6.2.0"
    }
  }
}