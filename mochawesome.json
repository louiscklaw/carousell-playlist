{
  "stats": {
    "suites": 2,
    "tests": 541,
    "passes": 357,
    "pending": 0,
    "failures": 184,
    "start": "2023-01-09T13:35:46.324Z",
    "end": "2023-01-09T15:50:10.391Z",
    "duration": 8064067,
    "testsRegistered": 541,
    "passPercent": 65.98890942698706,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "378910eb-0cd8-4947-a51e-9997d69b3640",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
          "title": "click test",
          "fullFile": "/usr/src/app/test/click-test.js",
          "file": "/test/click-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld javascript -> keung_2022 -> 0",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 11193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "deabd05e-10bc-4ec4-83be-bd9a470b8271",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 1",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 10054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88e0fc7d-9132-4357-ac6b-b3080148a20b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 2",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 10375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5b1e7872-147d-4f0e-8467-aeadfa2fa10d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 3",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 9151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8c9e7dc4-7d7b-4622-8021-e03fb5ebb223",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 4",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 10081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e6733249-f652-44d8-aa9e-0b6ffb0d7ced",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 5",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 9197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "504c9369-7af4-4258-b5e3-903f6855d6b3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 6",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 12098,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f0e1e7a1-6cbe-471c-8e9d-1edc493d4db3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 7",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 10346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7005f037-1bb8-4ba4-9f74-b8ced4b87d3f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 8",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 9969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "30073458-44fc-46aa-b5d5-0a8c02c61f42",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 9",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 10539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "85b05083-a71e-454a-aa97-6333412b4269",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 10",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 10743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c9617611-5ed2-45b1-ac5f-330607fb92ef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 11",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 9886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba72a93c-ec84-46a5-993a-ef662446c3a5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 12",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 9545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc2e7c93-dd6e-4be6-afdd-c3f7025ef4ea",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 0",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 0",
              "timedOut": false,
              "duration": 10542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cf303a9d-178e-4c1c-b831-a7782a2752b2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 1",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5903330a-721c-4628-b7cc-65289076bfdb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 2",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 2",
              "timedOut": false,
              "duration": 9619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ab11821b-f3b8-498c-ab7a-7f88f4295d8e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 3",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9917,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fd2853e0-4e54-46a9-8450-2e88359c83bb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 4",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 4",
              "timedOut": false,
              "duration": 10186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "33204dfd-bd10-4161-8312-51bf34ce1749",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 5",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 5",
              "timedOut": false,
              "duration": 10499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3a6329fe-beb7-4f9d-b01f-b7019e2413d5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 0",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 10529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f08396c-3a61-4c70-85f4-3189b1f9fa17",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 1",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 10395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "997f10a7-935c-4dd6-b16d-a84f8d34adb4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 2",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 10226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d3f6b760-ed74-49d9-93b9-ad647934329a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 3",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 11337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "71c826a9-5afd-43e9-a4c9-d44c82b92a88",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 4",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 9326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "96ded2dc-cb62-40e9-b7df-3688c5d50a79",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 5",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 11255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "69a7a49a-66d5-49a1-8618-dcddbb5ed42e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 6",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 9650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "01f482b0-d54e-46ca-8c0f-bfd0282a8ebc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 7",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 15318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "010bf42e-2cad-40fb-ae94-cae7f0d592f7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 8",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 9025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "134549b9-bae2-43b0-9d19-c544286061ef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 9",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 9869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11320631-237d-4635-84ad-279021688de2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 10",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 10597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "837c69e5-9e6e-4bd9-936f-e728e971f69b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 11",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 10748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "60e7de7b-5335-47d2-aac9-33dcc4af43a5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 10810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "532b0ff9-55e1-411c-97e3-98f24be39138",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11bd89c1-2359-4a00-8657-e356bbfd1363",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 10912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bea7bddc-eb05-425a-b22c-84f2dc3e8b8c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 10797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d51472d0-df29-4195-adc1-228d5e5dd19a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 9675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e65f3ea-28e8-4a3f-b58d-d072784a7298",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 9855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "17d45605-1536-4585-9196-bffcc3e4ca3b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 9926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ade50ac2-a1c8-4619-8601-26f2ece4d432",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 10021,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "930583f4-8fe4-4bb8-84a7-1472d36883a3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 10185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "58348d52-e2bf-4418-a7d0-69b803ecd20c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 9879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ae2230f-3c67-481b-af66-33d0cfbd5631",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 9339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d7ec19d-0b72-43af-9d9d-8eab3640cc6b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 9966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2e2ccd81-976d-48ee-b9e3-38139bfaa307",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 9893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d7270031-704a-4561-a1d8-3b91bf90b74e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 13",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 13",
              "timedOut": false,
              "duration": 9788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26c0d387-8223-419b-852d-aec4ea726816",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 14",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 14",
              "timedOut": false,
              "duration": 9508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d5b6111d-f99c-4365-8264-fcb5e0fe70d3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 15",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 15",
              "timedOut": false,
              "duration": 9854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0a8fdd43-70ec-48a4-b1af-97e369b763d0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 10155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eaab2add-8256-48ca-b638-f4bec9ffaed7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 15082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Page.captureScreenshot): Target closed.",
                "estack": "Error: Protocol error (Page.captureScreenshot): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:208:63\n    at new Promise (<anonymous>)\n    at CDPSession.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:207:16)\n    at Page._screenshotTask (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1105:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d13feb58-05fd-46a6-975d-d63cfdf8753c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 10884,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b9b6cfc0-2f6d-4baf-9260-415145a89f17",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 10436,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57871e1c-ff47-45c4-b380-4c1e4f8a54bb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 9912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "634ba8d0-d660-46c2-9dd7-564978a6bf68",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 11291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9299ef2-6d7d-4ebc-a47b-10f6f3904928",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 10938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b4f2df01-545c-4295-a936-0a0827f723b4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 10780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "732aaa07-37e1-4361-a82f-1695203072c9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 0",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 10374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8b86965-b2ac-416c-8502-e2aa79bb0b4b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 1",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 9954,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "164914e8-abd2-4ec4-8b72-e2bb59a641c9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 2",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 10126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7741fdd3-5fe9-4779-8584-772d5982c3d2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 3",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 10457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3963f015-d1e6-4f2c-b9bd-131ace030081",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 4",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 11185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c080c1e6-7588-40b4-9bcf-1fb891939ea6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 5",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 10944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c17889a4-590d-4912-bc86-192823a818a7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 6",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 10504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "039efd78-d394-443f-b971-d2e756c5559b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 7",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 10795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e23ef923-34d7-41c4-8652-cd8e243f1745",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 8",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 11156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6f188a35-6813-4fa8-970b-3a98084f183d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 9",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 10499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dbe07eba-3591-4998-85ca-3b61452d303e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 10",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 9680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d706df60-1997-403a-9e68-fd7241109f1a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 11",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 9338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "912808fd-9490-491d-95aa-def09f3c2804",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 12",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 9153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "151f3496-2a2a-4864-8610-3232966a068e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 13",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 9866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "304964b7-eb80-4a3d-a06c-37b2b96398d2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 14",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 14",
              "timedOut": false,
              "duration": 9491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d8f28799-0ba5-4918-bf00-da4b0bd9f823",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 9818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1a9586f9-b4ae-423f-95a0-9dbb0625ad62",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 9988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2fd45da6-6bb5-4f4c-9b52-0d26f1679ef3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 10439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f497159-b14d-4eb2-8ce7-4f38ba2f097c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 10805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ccca9376-ba00-4f92-af3f-feae82dd693f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 10904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3d98c824-cb95-4927-98f7-9f9f7473830d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 10154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "08cf1053-43c3-482b-9b20-93f1d720a2f5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 10566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "afa9013c-28b7-4f77-a2e7-bce04fbe9974",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 10671,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9ff78d1-483f-4fa0-b50f-394bba462880",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 9282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2fb4106e-2993-4742-ac70-5203891d4117",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 10222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57ca0d77-aff4-41a5-b2b0-2b3f7c0fd840",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 9608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d24035cb-ff19-4709-bcfa-459e0864736f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 11225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f8966f42-cb51-486e-9297-e53cc67c0dae",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 9689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "660a0bae-62b2-4897-8f19-7340e784975c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 10565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26804eb1-1b08-4569-8bec-9fb8c3be86a8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 14",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 14",
              "timedOut": false,
              "duration": 10619,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f253f870-62b7-4a9c-a076-f2241059e7c4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 15",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 15",
              "timedOut": false,
              "duration": 10577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b3a4b95e-9bcd-489a-a070-9506047c1244",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 10944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34a0aff1-130a-4d9a-848c-52e86cd68b02",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 11051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1cba704c-2635-41c4-9a8e-6c88fa6a6bf2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 11226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dfb4fc16-cae2-465e-bb8e-d449c551c00c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 10319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0695e874-af5e-4fd1-a118-d19e608bda5f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 9969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a4c0157f-275f-4093-b365-09f6956ad350",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 10362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9bd0284-ce8e-46c5-a55d-1a7801bf2d2b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 11175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2784024a-d3aa-4251-a3e1-278d4bd37b5e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 9658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b238d5cb-8281-4831-9cfd-edad40b69978",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 9974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8ac565f-46e0-46bd-b88b-56ce91495c67",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 10397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d079cc21-54df-4a5f-abfd-e6fbc8040651",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 10768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff8e95bb-43e5-4289-8fd2-1030702d0450",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 9730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ddbced48-f0e0-4132-b023-e116e16d7450",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 0",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9994,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "36e2b695-c37f-44dd-8dae-c1ad8f61d0d2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 1",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8c06fbc8-85c6-4235-846d-b3ce2fdcddf1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 2",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 10943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a071c4c5-39f7-45e8-8be1-8fc4d7a96bb9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 3",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 10386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "05cf5aec-0c15-44df-ba10-a85cb9b472a0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 4",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b7fbe1f8-dc7c-4262-99b7-5d546a2e1e35",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 5",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26b9ebef-9d19-44a8-b775-fdd56eda5511",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 6",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 10655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc675ec1-51b4-4cc1-a55d-c8419b74577e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 7",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 10138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4a678622-03d7-48c5-8f1d-e9e05e9f5cf6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 0",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 10341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2fd0c1d6-6ffc-4df8-b898-31dc2de612c6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 1",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 10826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a005ef86-233f-48b7-a850-e9a6db61033c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 2",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 10831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2fd05c04-d116-494a-9756-431e4e7a0e1f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 3",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 11141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7df777a2-d978-4f21-8367-2cb9756832ef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 4",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 11707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8e942f1f-f75d-4637-b89e-27b2e8960d70",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 5",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 9366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d151858-ed0b-4966-926c-88311f801f25",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 6",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 12182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5eeadc62-4bb8-48ba-b6d3-f7771a636663",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 7",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 11061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7693e0d1-3c93-4fd2-b09a-b47491eab138",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 8",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 9929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e666255b-1c6b-40a1-a532-7d75f106bb21",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 0",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 9689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "921ac222-58e7-422f-9dbf-074e11c12618",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 1",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 10852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "48e2aee7-3c21-433a-bd14-71091963b3a2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 2",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 10746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2e85145-548f-469e-bf96-35e9881c4f9f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 3",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 9534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1df89a18-0151-485e-bc9b-01c49a1d4c1d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 4",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 8885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "48ee904b-2a6c-4591-870e-749ecb04413b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 5",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 9525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bd64c468-2e98-4942-b584-7902b77bc752",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 6",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 10946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "394d5ad0-6337-4811-886a-12f089c16324",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 7",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 9793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "35182a19-5388-47ed-9f28-006239105117",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 8",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 10118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f1bc603-d9a1-4b6e-9c5f-fd66d5ff6825",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 9",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 10192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d4bd1e3-45c5-473a-92f7-066a40eb1102",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 0",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 0",
              "timedOut": false,
              "duration": 10865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7dfe3ffa-3c51-47e5-b5d7-5ac7b8898f95",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 1",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 1",
              "timedOut": false,
              "duration": 10255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "efbe5f2c-274f-442e-bbad-c74a74d128d0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 2",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 2",
              "timedOut": false,
              "duration": 10294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d7581410-9b4d-4776-8c9b-01a1d8f7e999",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 3",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 3",
              "timedOut": false,
              "duration": 10481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0c9fdd48-d095-4b3b-a8b6-a849d83f1e08",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 4",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 4",
              "timedOut": false,
              "duration": 10964,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7661654b-73dd-43d3-9a49-12d441400a9a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 5",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 5",
              "timedOut": false,
              "duration": 10349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bf41dabe-35bc-4b47-ad1b-bfc9789d3bc6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 6",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 6",
              "timedOut": false,
              "duration": 11403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0c4621f-5f00-4083-a259-2ffb09d0414b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 7",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 7",
              "timedOut": false,
              "duration": 10306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67d95c7c-885e-4e64-8195-e65dc7646595",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 8",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 8",
              "timedOut": false,
              "duration": 10044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9c5029ae-86cf-4bf7-b4a1-41f2345dabe0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 9",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 9",
              "timedOut": false,
              "duration": 10678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72981d35-5907-41b8-8b74-bbb146d7b3a8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 0",
              "fullTitle": "click test helloworld python -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 18061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ca52e1c9-28d9-4fae-9e9c-b11876950715",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 1",
              "fullTitle": "click test helloworld python -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 17997,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a497230c-fa5d-4360-9482-8209cfe86fe9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 2",
              "fullTitle": "click test helloworld python -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 17582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c86003aa-38e5-41cc-b35b-a8ef7f03bf63",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 3",
              "fullTitle": "click test helloworld python -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 17883,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d0e9975a-ca2f-4346-ba23-0cb9a12d2e4e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 4",
              "fullTitle": "click test helloworld python -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 18523,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c9070096-e8cf-4083-9a21-989c51937d3d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 5",
              "fullTitle": "click test helloworld python -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 18393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e65f99fc-a57b-4da9-9701-a8f69b65db0c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 6",
              "fullTitle": "click test helloworld python -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 18156,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2de6c07c-757c-45de-8993-364f41d6cb0f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 7",
              "fullTitle": "click test helloworld python -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 17889,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "20ae459d-d1a5-4e5b-9b75-1fa4bbcf22c5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 8",
              "fullTitle": "click test helloworld python -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 18844,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "09d16664-8d84-4c06-b9bc-be5a92cccc20",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 9",
              "fullTitle": "click test helloworld python -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 18199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ec0fd4f8-3447-401f-b925-b441e7d8968e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 10",
              "fullTitle": "click test helloworld python -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 18602,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f4397b9d-13da-4f90-8cff-e6cdf6596c05",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 0",
              "fullTitle": "click test helloworld python -> memegod420 -> 0",
              "timedOut": false,
              "duration": 11013,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5b923dec-7bd5-4411-aa55-f59290d9d277",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 1",
              "fullTitle": "click test helloworld python -> memegod420 -> 1",
              "timedOut": false,
              "duration": 13109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0beed7d-87a0-43e5-9660-0aa9d3237ea3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 2",
              "fullTitle": "click test helloworld python -> memegod420 -> 2",
              "timedOut": false,
              "duration": 12068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bc6d0669-d066-418c-ba31-25f6c8f83755",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 3",
              "fullTitle": "click test helloworld python -> memegod420 -> 3",
              "timedOut": false,
              "duration": 13959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "249db08f-c7ee-4d65-980a-c94a5bd8a3b9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 4",
              "fullTitle": "click test helloworld python -> memegod420 -> 4",
              "timedOut": false,
              "duration": 13957,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2743aaf4-fc81-4731-8895-9d57f2366f55",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 5",
              "fullTitle": "click test helloworld python -> memegod420 -> 5",
              "timedOut": false,
              "duration": 12586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "166c4a9b-049a-48bc-a5fa-5627c46a3db8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 6",
              "fullTitle": "click test helloworld python -> memegod420 -> 6",
              "timedOut": false,
              "duration": 12585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1dc157ed-3deb-4aa3-ac64-a91ed1b75042",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 7",
              "fullTitle": "click test helloworld python -> memegod420 -> 7",
              "timedOut": false,
              "duration": 12325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "267e38e8-b048-4daa-ac58-142fcd109695",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 8",
              "fullTitle": "click test helloworld python -> memegod420 -> 8",
              "timedOut": false,
              "duration": 13953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ecf9e21-56bc-4a0b-8bd1-8b4d0f6e65ae",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 9",
              "fullTitle": "click test helloworld python -> memegod420 -> 9",
              "timedOut": false,
              "duration": 14314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5b2504f4-a8f1-4d38-8bb6-bdc0e363561e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 10",
              "fullTitle": "click test helloworld python -> memegod420 -> 10",
              "timedOut": false,
              "duration": 13978,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "af0b7cf0-ef3b-4045-b38d-83eeafb93e37",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 11",
              "fullTitle": "click test helloworld python -> memegod420 -> 11",
              "timedOut": false,
              "duration": 11578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "63342892-0147-4ce6-9bbd-84f8989e56ce",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 12",
              "fullTitle": "click test helloworld python -> memegod420 -> 12",
              "timedOut": false,
              "duration": 13467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "92f71f07-23f2-4f84-9496-340884933162",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 0",
              "fullTitle": "click test helloworld python -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 26333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "98662f0c-fe07-4944-a65a-cea4d956d7e6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 1",
              "fullTitle": "click test helloworld python -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 26684,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "994524be-6147-43b4-99c4-141320ce6041",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 2",
              "fullTitle": "click test helloworld python -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 26798,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7d22a9cd-9998-44cc-b5e3-ca98b003e89e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 3",
              "fullTitle": "click test helloworld python -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7565b852-7ee7-45d9-b342-675a3fc137be",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 4",
              "fullTitle": "click test helloworld python -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 25552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "544dcf3c-c24f-4ea8-aeae-67a144a8edbb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 5",
              "fullTitle": "click test helloworld python -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 26814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1d4ba980-64e1-419d-8d2d-cc31462622b1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 6",
              "fullTitle": "click test helloworld python -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 25737,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5343230c-c064-4d59-81e5-d7f1b98fc5de",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 7",
              "fullTitle": "click test helloworld python -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 25837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3b8a3bf9-30c6-462f-b919-95074444d38b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 8",
              "fullTitle": "click test helloworld python -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 25447,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "93f092e1-aba6-4f16-8790-9a7267742111",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 9",
              "fullTitle": "click test helloworld python -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 24941,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "710c2166-e434-4f1a-a8f7-e5fea0e4cae6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 10",
              "fullTitle": "click test helloworld python -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 26265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e1f297ac-4d96-48ee-a6dc-7957c0dbc1e3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 11",
              "fullTitle": "click test helloworld python -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 26399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "91ff7eab-1fe4-437f-8080-d9978e170039",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 12",
              "fullTitle": "click test helloworld python -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 25567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4c366a58-b0f9-4d03-b5a3-b6c7f4040711",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 12722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28e1eefc-36c7-4c79-bf65-dcc7d9f937f8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 11555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e246d9f9-4136-4ed0-a442-f3d3db32fba6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 10906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "694f057e-d648-425d-9103-4f32f8033543",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 11585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a9ba74eb-07be-4673-a2e7-16867f8b975e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 11884,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb1a549d-3bac-490d-9f97-93fb8934170a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 13987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ec132440-6fee-4a8f-949e-06cc1c197388",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 11738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a3ab6ee5-e168-4341-9ae6-24b4c1926870",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 12731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8693cc01-228b-4ebe-bd01-f3b024abb289",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 13539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7f3e65e2-2f5b-4c6b-b687-10fafe7d57dc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 11808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "188926f7-f4f8-4c9b-91fd-9219b5ed1080",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 12466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "652112df-0ee9-4085-bdff-6c11c2fc062d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 12936,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "52ab3828-b9a1-4bd2-b10d-4a016f865e9a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 11527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "633f582f-d10a-4a86-a26d-d60ecfa1640a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 11864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ed3c16b1-5859-4594-bba2-34f7befc046b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 14989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8d58666-554d-46ff-9316-e048878ca853",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 11974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88942bea-951f-4a4b-8192-3b74110e3b58",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 14207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0f65bc6-fe82-4cfa-bcbf-92ca206f7bf1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 12222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3445729c-11b0-486c-af41-85be04f494b9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 13389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "078398b3-4817-4e6f-91c5-5572cc3730d8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 12515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eb3e9f1a-0f00-4583-b565-e557069fc0ce",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 15254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6ae68ad1-a36f-4875-a42f-74f2ed62e36b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 14305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "98406d65-26c3-494d-b4d5-efd2e7658dda",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 15017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a1f7ad05-ffcd-41f8-a1da-546e26848daf",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 11525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fdfcc8e3-e3a0-418a-a5e7-1f81eceffd37",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 0",
              "fullTitle": "click test helloworld python -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 13913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68a254da-ab26-4a58-a0f3-3d23b0472ca4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 1",
              "fullTitle": "click test helloworld python -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 14479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "08c17528-e39c-4648-a8f0-8a5a6741141f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 2",
              "fullTitle": "click test helloworld python -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 13759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ffa694b-e836-4758-b6e2-67c938c870d6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 3",
              "fullTitle": "click test helloworld python -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 14135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8ac7a01c-cc20-4ee2-8fc5-bb4d603503ca",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 4",
              "fullTitle": "click test helloworld python -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 13608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "379bae17-7919-445d-b8fd-9c02e43992b0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 5",
              "fullTitle": "click test helloworld python -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 13317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "992d9407-b0b9-4208-b3d2-166d4bfc149f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 6",
              "fullTitle": "click test helloworld python -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 11940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2f69f9e7-0bbe-4049-bbcb-d6f9c6164fcb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 7",
              "fullTitle": "click test helloworld python -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 11980,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee93ed17-171f-49dc-9275-fbb92df875bd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 8",
              "fullTitle": "click test helloworld python -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 14592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88cb2cec-9769-4ead-a91a-f090c9b73f93",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 9",
              "fullTitle": "click test helloworld python -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 12709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34272778-185f-40c9-b6fd-d0c0f1a2491b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 10",
              "fullTitle": "click test helloworld python -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 14414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46e4e37c-5483-442e-a52d-e41a273849c3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 11",
              "fullTitle": "click test helloworld python -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 12876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0558b588-0093-4665-82dc-07829622e272",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 12",
              "fullTitle": "click test helloworld python -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 11379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ad8754c0-f103-44a0-b14b-84e972a3768e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 13",
              "fullTitle": "click test helloworld python -> codemyhomework -> 13",
              "timedOut": false,
              "duration": 14179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "de005326-281b-4bd9-8560-a7977e526e5f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 27149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4972c0f1-1d6e-4260-adc6-089c8e306ee1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 25253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6a5bafd1-e54c-472b-a33f-aa0a15558fca",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 27974,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4aeb67d3-5b33-4c79-a85a-13d9d1050aed",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 26371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1536bdfb-e2a2-4b19-a8f9-b340775337df",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 26844,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fca5c8b6-7906-490f-a697-8b2fcf90bcc9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 27374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ec449d8e-215d-43ec-b014-18f15eb85a2b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 26967,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bfbb8f23-9531-4975-a847-32961619ce5e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 27631,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d76aad58-455d-45a4-9be7-81a7abec61c3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 26982,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6bdca665-b7b3-49f0-8b08-27319960ff81",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 19152,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "05b430b8-47d0-42c3-a1f6-a1b520922381",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 18186,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "99f00fd9-96f7-41e4-b39c-60331b2293ee",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 17897,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3913b7a9-2d75-4c78-8115-2ce7d5966c12",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 17581,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d29c69ae-78db-4f66-80e2-60b3b9cea7bd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 17994,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "16b3b465-eee2-4836-866e-955b66da679b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 18946,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "adf59dad-6f1c-450a-b39a-f697831910c8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 18763,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "907fdc39-6f1b-4c07-81b2-05bf78a042e4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 19543,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d65451f5-f3c1-4809-bc68-f278e9935659",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 0",
              "fullTitle": "click test helloworld python -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 13385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa47d6a7-7016-4d67-a04c-b5cc544da53c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 1",
              "fullTitle": "click test helloworld python -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 12408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "af2fa57b-320d-479f-9c81-3aa0a1491dd7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 2",
              "fullTitle": "click test helloworld python -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 13429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "16f375e9-e44b-4050-98eb-275a3ae97239",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 3",
              "fullTitle": "click test helloworld python -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 13706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c4cb0057-02a5-481d-8abb-3abe73b08cd9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 4",
              "fullTitle": "click test helloworld python -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 11280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fbbbd416-0f44-43c8-bd19-104c944c2142",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 5",
              "fullTitle": "click test helloworld python -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 12073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e00769dc-aef4-4472-b348-e04a948e3872",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 6",
              "fullTitle": "click test helloworld python -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 13010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "28f91a2b-7df7-4de9-b763-59ced0352343",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 7",
              "fullTitle": "click test helloworld python -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 11356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4aa95e60-a8a7-4205-806b-d9ef5f678068",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 8",
              "fullTitle": "click test helloworld python -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 14521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "01a41aac-2086-4624-8517-42c9a586dcb3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 9",
              "fullTitle": "click test helloworld python -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 11983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1f419935-1dc0-48e2-acf9-5ede1267401a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 10",
              "fullTitle": "click test helloworld python -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 13323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "627deca2-4c48-477f-b4aa-a3c2647e8f05",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 11",
              "fullTitle": "click test helloworld python -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 11762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0be3627-3c38-4da5-9a8c-3eb2fdc66dad",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 12",
              "fullTitle": "click test helloworld python -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 11140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "75123fb1-a2b1-4148-a080-e4f0106ac3c4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 13",
              "fullTitle": "click test helloworld python -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 12302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8c71d22f-4bae-470e-a57d-a5083cad482b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 0",
              "fullTitle": "click test helloworld python -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 20041,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0108d3e2-184b-4e4c-964d-0b7210c772a9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 1",
              "fullTitle": "click test helloworld python -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 18802,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "41ec1d64-d581-4f23-8885-ab1b59ab60ff",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 2",
              "fullTitle": "click test helloworld python -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 18528,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "82ebdc8e-766c-4e74-9872-7f469b84469f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 3",
              "fullTitle": "click test helloworld python -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 18318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a21f5501-6798-4242-b854-3f23acabec0f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 4",
              "fullTitle": "click test helloworld python -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 25125,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "460a27f6-a7e1-49ab-a5a8-87f8607cfe78",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 5",
              "fullTitle": "click test helloworld python -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 18453,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "74cd8ccb-f922-4c28-b42f-1feab7ac832a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 6",
              "fullTitle": "click test helloworld python -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 20054,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "865036f4-2f20-41d0-b09e-962d1d95762c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 0",
              "fullTitle": "click test helloworld python -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 13037,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "14624252-7143-494f-99ec-9c296713c602",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 1",
              "fullTitle": "click test helloworld python -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 12383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2239b82e-5c23-4ddf-8956-590e992d5c3a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 2",
              "fullTitle": "click test helloworld python -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 11482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "879ea87f-1bee-4b9b-85e8-b6d271783ab5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 3",
              "fullTitle": "click test helloworld python -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 11507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6bfd64fe-b9a5-4303-ba7a-0ab62c3e0f2a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 4",
              "fullTitle": "click test helloworld python -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 11324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4d2fb4e6-a489-430b-b7cb-3ab340fb8a8a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 5",
              "fullTitle": "click test helloworld python -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 12701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "279c2079-bf9b-4779-bfb9-750e883ef3f0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 6",
              "fullTitle": "click test helloworld python -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 12579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0c13bf39-845e-4964-ac2b-90a1ec55d2b2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 7",
              "fullTitle": "click test helloworld python -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 12666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2e88e0a-c009-4167-adaf-1375e66c5a13",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 0",
              "fullTitle": "click test helloworld python -> hopeubest -> 0",
              "timedOut": false,
              "duration": 13889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c3d8d5bc-5f09-479e-a72b-74b58fa9e29b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 1",
              "fullTitle": "click test helloworld python -> hopeubest -> 1",
              "timedOut": false,
              "duration": 11598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc8bd205-d457-498b-ae49-2264e2706d39",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 2",
              "fullTitle": "click test helloworld python -> hopeubest -> 2",
              "timedOut": false,
              "duration": 11459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "17b3def2-a93b-4c6a-8b42-56f281e9959c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 3",
              "fullTitle": "click test helloworld python -> hopeubest -> 3",
              "timedOut": false,
              "duration": 11241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d91b8c1-65cc-4174-8664-c9fc88135d10",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 4",
              "fullTitle": "click test helloworld python -> hopeubest -> 4",
              "timedOut": false,
              "duration": 11957,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d5fe0b0-572e-4255-876f-f3ee2ac65585",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 5",
              "fullTitle": "click test helloworld python -> hopeubest -> 5",
              "timedOut": false,
              "duration": 11270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e683c643-4f46-4604-8694-f249a1cbc2e6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 6",
              "fullTitle": "click test helloworld python -> hopeubest -> 6",
              "timedOut": false,
              "duration": 13141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc043e34-511a-4f45-862d-107e0a497159",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 7",
              "fullTitle": "click test helloworld python -> hopeubest -> 7",
              "timedOut": false,
              "duration": 12242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b673da3a-f455-42ea-bf66-61b53ef4c674",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 0",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 14315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "051351fc-9d73-4876-be50-acf815110664",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 1",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 11234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0fd2b5d-4c18-4bf0-8e8c-e1a9b467f59a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 2",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 12026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "252a42ec-13c4-4152-a25c-138c00ada6c3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 3",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 8044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0c941a8a-d47a-4f77-8be8-44304cc50f4b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 4",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 11179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2a0772d0-c303-4059-8e01-937e311264be",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 5",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 12440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67d3bbb2-3e61-464c-8040-91143d873aef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 6",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 11913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bfa55c1e-4120-46b7-9f2d-e1fd8ea304ca",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 7",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 13850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5dba61eb-6713-405f-b2cb-8a4ce8fe4d42",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 0",
              "fullTitle": "click test helloworld coding -> memegod420 -> 0",
              "timedOut": false,
              "duration": 11426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "996de19f-6ee6-4969-b198-b1968b46f788",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 1",
              "fullTitle": "click test helloworld coding -> memegod420 -> 1",
              "timedOut": false,
              "duration": 13258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d50cadb-15c2-4c7b-932a-33bc3a005a61",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 2",
              "fullTitle": "click test helloworld coding -> memegod420 -> 2",
              "timedOut": false,
              "duration": 12449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "09de640f-caa4-45f4-85b7-bf5305ceec60",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 3",
              "fullTitle": "click test helloworld coding -> memegod420 -> 3",
              "timedOut": false,
              "duration": 11753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f3b86509-32ed-43b1-94ad-d4ad21c89348",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 4",
              "fullTitle": "click test helloworld coding -> memegod420 -> 4",
              "timedOut": false,
              "duration": 12810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1275d75c-67c7-4205-8185-b7719cf49b6a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 5",
              "fullTitle": "click test helloworld coding -> memegod420 -> 5",
              "timedOut": false,
              "duration": 14444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8c7d74e8-40f4-4e25-9211-9a0ef4f53656",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 6",
              "fullTitle": "click test helloworld coding -> memegod420 -> 6",
              "timedOut": false,
              "duration": 12473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "073c8a42-7930-4b4e-a3aa-860d6197f67d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 7",
              "fullTitle": "click test helloworld coding -> memegod420 -> 7",
              "timedOut": false,
              "duration": 13396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c229b50e-6b54-4ca6-be6c-1851197a4178",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 8",
              "fullTitle": "click test helloworld coding -> memegod420 -> 8",
              "timedOut": false,
              "duration": 13562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "26d431e5-3170-4d1c-af6f-3e64d409d60a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 9",
              "fullTitle": "click test helloworld coding -> memegod420 -> 9",
              "timedOut": false,
              "duration": 13280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be964d39-a462-4f9a-8c8d-641a364abdc7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 10",
              "fullTitle": "click test helloworld coding -> memegod420 -> 10",
              "timedOut": false,
              "duration": 13432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cff00991-4b41-4a72-911c-884ce53f2656",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 11",
              "fullTitle": "click test helloworld coding -> memegod420 -> 11",
              "timedOut": false,
              "duration": 13204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c48b79b8-d6ba-42bb-9efb-3b18d6875cc0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 12",
              "fullTitle": "click test helloworld coding -> memegod420 -> 12",
              "timedOut": false,
              "duration": 11726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "06d47615-ca53-4794-ae58-8c753e8bd9b6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 0",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 26938,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a256db11-0104-41fc-863f-ff00bb937e72",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 1",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 26185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "97fe3f36-5867-47d6-a8af-3a4d44e1da37",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 2",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 24744,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "54868b59-afd6-4459-9219-add45fecb785",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 3",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25494,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "4bcc776d-7575-45cb-9d86-8da6d4de106d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 4",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 26480,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ba9b5a41-380b-41c0-aa48-e5bf1d8dade7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 5",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 27068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c0ec761a-f167-4a68-9c75-3c9b5101fa1c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 6",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 26038,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "836d0379-0798-4f3b-91cb-8bc9e67f1f0a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 7",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 25679,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cf1bf7f4-ead0-4602-b767-e0f6e9332e72",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 8",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 25880,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "70b03702-de15-4178-a533-2aae6a66fa51",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 9",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 15036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Page.captureScreenshot): Target closed.",
                "estack": "Error: Protocol error (Page.captureScreenshot): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:208:63\n    at new Promise (<anonymous>)\n    at CDPSession.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:207:16)\n    at Page._screenshotTask (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1105:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "267f9a5e-1bc9-4d13-b839-a1643a5fede8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 10",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 25892,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9e0bbf40-eef0-42a0-be3a-29037428f5e9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 11",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 26729,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d2770df0-1926-4599-9b35-0b7f93934392",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 12",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 25942,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6a1af981-bcd8-4aab-ba74-7862b094124c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 13",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 26127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9afb5525-ead2-4851-812b-1f4bf45e0a95",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 14",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 14",
              "timedOut": false,
              "duration": 26174,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d87a240d-a8ea-4850-9240-7caa095187fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 15",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 15",
              "timedOut": false,
              "duration": 25504,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b099e56e-334d-4a51-a620-deac9b1e6fc0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 12766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db0674ed-013c-4d75-a6b0-3d5498685f04",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 13839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4a45cd3e-b9fd-4026-8097-6a707d9f33a1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 12680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b0f301f-fe6c-4568-954a-41fc62026c8a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 13561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ba9c125-96a8-4caa-b3d1-1d41cfb606b4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 11417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d192b5c4-1ef5-4dd9-ba94-dc9f0b4338ee",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 11504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b94cb507-3540-49e4-b8cf-270bbbfe6bc1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 16462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1effc05b-5e2c-4267-9350-ed1ab5d55c30",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 16029,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f9a18e33-16cc-4eae-b8e6-08027d3671fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 11400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bbce258c-97ac-495a-ac32-5250a501e5d9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 13280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1de8e04-c115-44db-a385-789648d2313c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 12050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ac099504-b6f6-4916-87a6-320efe517c47",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 15068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5450afd2-2f10-4934-9311-2d3bbbec0a6c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 15631,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8139d4cb-1f7e-479f-a10a-6ba8b0c46163",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 13925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5773437d-510b-4c52-8bef-f60285bcb93d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 12084,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bfc9a226-8180-43d8-b9f8-89a90ed37fd7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 15259,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aad2e45c-b264-4437-82e1-076156d64620",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 11316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "993d05fb-690a-4f91-baa1-0dde94f25c2a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 13767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5cc7b91f-f751-4fd2-8680-19345903185e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 12014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8c650928-d2ac-451d-9330-70f02dba7212",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 13343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ed05bb72-8015-4bc5-93cc-7ec9d9197a2b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 12474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6c31497f-380e-4cbe-83dc-44769b0a8187",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 0",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 17483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "73e41821-59f5-4ddd-a2a5-1f13c18d9433",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 1",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 17557,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7733466e-5ec4-4d5c-a1d8-8493907a9465",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 2",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 18664,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bfaca281-110b-4b67-ac1c-49fe91f515fa",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 3",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 18540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c2e16983-fb30-4915-805e-563e5be2e3d3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 4",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 17778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7e1206ab-c513-4bfe-8e59-d84f6e33ad4a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 5",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 17193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "bc7ab722-f7ef-459d-b190-d0c87ac62fe1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 6",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 18249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "072905e3-7426-40d8-bf99-e27b4494e579",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 7",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 18940,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "90d38a63-822b-4fc7-b691-70a329e620e2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 8",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 16651,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9db42f95-a90f-4007-bfd6-41d0ac59d897",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 9",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 18675,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b8569229-0b08-4458-bb4f-f1e3939e2d1b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 11488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ea57825-84ad-42a5-abe8-51279cc3d6a3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 12083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee7c4415-1261-4dee-a6e5-975b36984d0a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 10847,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57b2ceb6-c47c-47b2-9afb-bc9ae4e831d4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 14037,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "16a23d65-9af5-46d5-a593-cca09964b962",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 12339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "69341295-d20e-4060-a8e0-c068cb021b88",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 13402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2541788a-790a-437d-9893-c06e39fff5bd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 12292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a475f770-adc9-4bf5-87dc-5d4ad8365e42",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 12542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "31e2cdd5-0855-4e3f-a34d-f1dfe67d9fdd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 11767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "993a1e78-03f6-4854-8abc-17db3c0e7281",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 14073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "932c0827-a91c-4c83-9c09-41f9ae4ddc30",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 8190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ed45a2d-79fe-4af3-b41b-fdae7376a9f2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 12637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c96620be-32c7-41ee-85eb-2ec93376d710",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 14351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88ff8364-1c61-4ecb-97c1-7200bed2ec42",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 13430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bbd2d824-b05c-410d-8d3e-e95de8961fb7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 13005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fe2f23da-1502-4205-b730-01aa692d77f8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 11860,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a29d765-baab-4d5d-9268-0d989ac21831",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 12",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 12",
              "timedOut": false,
              "duration": 12865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c94ee9cf-a2d4-46e2-b832-9b405559a306",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 13",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 13",
              "timedOut": false,
              "duration": 12335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9fc58653-09c8-4ede-b9fa-d684dbf18dca",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 14",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 14",
              "timedOut": false,
              "duration": 11348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ff0024a-1091-446f-9489-7a817e8ddcb5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 0",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 13402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "73d3b5d4-cace-489b-ac1c-b78e1f02d65d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 1",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 11195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc0b34e3-32fb-4872-943e-d8a2aa11a6ec",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 2",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 14348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fad6b963-c525-47ee-9bed-79aeea4fa2d8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 3",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 11512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b91a379-4a63-4709-b8f7-a7ec370e55f7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 4",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 13264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1ebe5642-61c4-4b1c-9397-22f296c4e8cc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 5",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 14028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72d39817-43f3-41ce-90d3-1d8e1524b582",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 6",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 11047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1fb11aaf-79ca-408f-9865-d9182be0c59a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 7",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 13218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8347ba6b-06b5-4997-80c4-f2fa9000dc6c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 8",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 14912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d93f63e0-517c-422b-8cd9-ed6725f9c313",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 9",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 13383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "33e22332-37c9-46aa-a659-5c08d6eadaf9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 10",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 11701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fb76b1ef-7702-4f14-9fb6-7faecdd92f72",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 11",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 12641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93048c28-bda8-4233-b3c9-8b7a3b0b39f6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 12",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 13846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "08e04d8d-9dee-40ee-8eee-b4b25a6f05fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 13",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 14862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d87a61e9-e668-44fb-aee0-fea9e2686bd5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 14",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 14",
              "timedOut": false,
              "duration": 13350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2dbb0a66-9ce4-4ea6-8383-bd50a44f626a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 0",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 12812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "35c8a1a6-933a-486c-a4aa-272d1da2c6dc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 1",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 12391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dad78786-2a3b-489b-9cab-97c529d4f13c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 2",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 11376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1354fae-9d20-459a-a445-0103af01ae75",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 3",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 11631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46566450-72fc-4e33-ab97-669c0038729b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 4",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 11225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9ef43779-0f47-4828-931b-bd7504b456c3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 5",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 13252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db4e1afd-a853-4fc9-999b-cb439dbf987b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 6",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 11016,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78ab20b2-e889-4cc4-8236-930611a75b56",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 7",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 13041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a5d61f6-8de3-49c8-866d-1b4ffa6871b1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 8",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 13824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "23cef689-73b5-4176-ae22-9d7148a32d54",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 9",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 16472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cafa3a10-e779-457b-a04c-cd66b497465c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 10",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 14205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "02bec98f-3579-42de-acfd-8c274bf5bb15",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 11",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 12378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4292ad3b-8d39-46bf-b714-065e836fd80d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 12",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 12",
              "timedOut": false,
              "duration": 13734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78836c58-2555-4a4c-97d5-b4252482fc46",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 13",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 13",
              "timedOut": false,
              "duration": 15852,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f66d2da5-dcd2-4ceb-bf65-d59cf9984179",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 14",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 14",
              "timedOut": false,
              "duration": 12758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e77b1587-d0aa-4d06-9cc5-d497582f1515",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 15",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 15",
              "timedOut": false,
              "duration": 13983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "90ccd368-aac4-40c0-b3b5-543473ae88c8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 16",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 16",
              "timedOut": false,
              "duration": 13927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "281af417-015e-4176-8312-a9e1d9e68a8a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 0",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 18447,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "18060a71-f3c0-4712-bc2a-a0a6954366d3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 1",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 17805,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cfbf4cf9-31c2-453f-a5c9-6516570ec653",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 2",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 20720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7e3f1225-3bbb-4cc0-a95b-1f6aaee98858",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 3",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 15064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Navigation failed because browser has disconnected!",
                "estack": "Error: Navigation failed because browser has disconnected!\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/LifecycleWatcher.js:51:147\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/vendor/mitt/src/index.js:51:62\n    at Array.map (<anonymous>)\n    at Object.emit (node_modules/puppeteer-core/lib/cjs/vendor/mitt/src/index.js:51:43)\n    at CDPSession.emit (node_modules/puppeteer-core/lib/cjs/puppeteer/common/EventEmitter.js:72:22)\n    at CDPSession._onClosed (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:247:14)\n    at Connection._onClose (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:128:21)\n    at WebSocket.<anonymous> (node_modules/puppeteer-core/lib/cjs/puppeteer/node/NodeWebSocketTransport.js:17:30)\n    at WebSocket.onClose (node_modules/ws/lib/event-target.js:136:16)\n    at WebSocket.emit (node:events:513:28)\n    at WebSocket.emitClose (node_modules/ws/lib/websocket.js:246:10)\n    at Socket.socketOnClose (node_modules/ws/lib/websocket.js:1148:15)\n    at Socket.emit (node:events:513:28)\n    at TCP.<anonymous> (node:net:313:12)",
                "diff": null
              },
              "uuid": "43c3bb89-6cea-4869-99b9-7b71f7da77a2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 4",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 19663,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6c1e0301-7063-4bb0-85d4-bcc2733aa925",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 5",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 20212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e443578d-efa5-471d-a4f6-3c0d5d4235e5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 6",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 18833,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3d3776ce-462a-4288-bc8b-0f111d73268f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 7",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 19005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2cbd4fea-e418-4206-87b6-f680f268acbb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 8",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 19148,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b96eb709-f76b-4453-8ca9-f85bc6ab6a6f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 9",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 20067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9c1f918d-fb23-41dc-878f-e7754eadbf26",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 10",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 18280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c389920c-747e-4195-8922-9612783c02fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 11",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 17321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5a48fc27-5406-4849-81f3-0fdd163a74ff",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 12",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 17904,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "46d45b0c-7672-4fb3-93af-8f7051091251",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 13",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 13",
              "timedOut": false,
              "duration": 19679,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c39902f4-3f48-46db-8bff-edb1614c09c7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 14",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 14",
              "timedOut": false,
              "duration": 18312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e1bfa478-3906-4854-bd3e-2f3e1829cefc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 15",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 15",
              "timedOut": false,
              "duration": 18081,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "857768ae-1baa-4aca-8c43-f31be163f647",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 16",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 16",
              "timedOut": false,
              "duration": 19180,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fa263531-0741-4daf-aab1-29afb06cde78",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 0",
              "fullTitle": "click test helloworld coding -> hopeubest -> 0",
              "timedOut": false,
              "duration": 11332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7f8ea9e2-79fc-4e56-93e5-b9c39dd1d059",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 1",
              "fullTitle": "click test helloworld coding -> hopeubest -> 1",
              "timedOut": false,
              "duration": 16226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "49bb1ef1-9889-441f-b579-0bfc909f99d6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 2",
              "fullTitle": "click test helloworld coding -> hopeubest -> 2",
              "timedOut": false,
              "duration": 11989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a436eddb-0fa1-4aeb-8d17-44b0d5a9e2be",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 3",
              "fullTitle": "click test helloworld coding -> hopeubest -> 3",
              "timedOut": false,
              "duration": 13597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0d8fdd36-fead-4dfe-962a-4409e8b658e0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 4",
              "fullTitle": "click test helloworld coding -> hopeubest -> 4",
              "timedOut": false,
              "duration": 11708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3743cf45-ff65-444c-a37e-d1dab5476e6a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 5",
              "fullTitle": "click test helloworld coding -> hopeubest -> 5",
              "timedOut": false,
              "duration": 14313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "655bbd28-f2f8-46b2-80ca-33aa24c7526d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 6",
              "fullTitle": "click test helloworld coding -> hopeubest -> 6",
              "timedOut": false,
              "duration": 11282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9399edfe-39f2-4390-afbc-2ab156c37a24",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 7",
              "fullTitle": "click test helloworld coding -> hopeubest -> 7",
              "timedOut": false,
              "duration": 14939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1a7eef4-1a5a-48a6-a998-52a56590f221",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 8",
              "fullTitle": "click test helloworld coding -> hopeubest -> 8",
              "timedOut": false,
              "duration": 13355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "028d5777-8fe4-4c57-b0e8-f243ff155176",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 0",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 12465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0b980936-b0ac-447b-be28-21d2fdea99d6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 1",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 12221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0f5ae9df-23e9-4b6f-ba9b-e2851fbba5d7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 2",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 12780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d2466f99-5a78-40ed-8c23-2b27dabcf52a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 3",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 13558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7a05599b-838e-4fdd-9e33-0c28181f6557",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 4",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 13434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "12c6fb84-4987-485d-88b5-bc57b0573218",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 5",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 11311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "96727804-568d-45b6-8fdd-fdb22ea237c9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 0",
              "fullTitle": "click test helloworld programming -> memegod420 -> 0",
              "timedOut": false,
              "duration": 12793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "04edda57-8976-41e9-b940-b02c0c5b71f2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 1",
              "fullTitle": "click test helloworld programming -> memegod420 -> 1",
              "timedOut": false,
              "duration": 12645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11938b68-142b-4bda-9a59-1d8c775febfe",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 2",
              "fullTitle": "click test helloworld programming -> memegod420 -> 2",
              "timedOut": false,
              "duration": 12292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b51afbc5-c86b-4997-bfd6-64f5fdfb082b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 3",
              "fullTitle": "click test helloworld programming -> memegod420 -> 3",
              "timedOut": false,
              "duration": 13806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1483979d-a171-4654-91d9-1a59716434d6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 4",
              "fullTitle": "click test helloworld programming -> memegod420 -> 4",
              "timedOut": false,
              "duration": 11708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "32b96602-3ee3-4b2d-9b74-99ebfb1f47d4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 5",
              "fullTitle": "click test helloworld programming -> memegod420 -> 5",
              "timedOut": false,
              "duration": 14177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dab5fde5-2f25-48b1-90f7-63fc845f5a9e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 6",
              "fullTitle": "click test helloworld programming -> memegod420 -> 6",
              "timedOut": false,
              "duration": 14087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5584300f-d2da-492f-a791-dbc4630f07e9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 7",
              "fullTitle": "click test helloworld programming -> memegod420 -> 7",
              "timedOut": false,
              "duration": 12219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "983431ab-373f-425d-a33d-bbdcbf4522ad",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 8",
              "fullTitle": "click test helloworld programming -> memegod420 -> 8",
              "timedOut": false,
              "duration": 12550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d0e9f435-d0e0-4285-826e-f72106d42330",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 9",
              "fullTitle": "click test helloworld programming -> memegod420 -> 9",
              "timedOut": false,
              "duration": 12632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "447a594e-79b1-464c-88fe-b6c8fa7852da",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 10",
              "fullTitle": "click test helloworld programming -> memegod420 -> 10",
              "timedOut": false,
              "duration": 11134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "514eba34-9cba-4091-b726-997c12de9629",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 0",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 18722,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c2c1ce97-891d-4068-b439-621533459b17",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 1",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 26105,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8bb18d45-7091-43f1-8ae5-ac85cf4b6677",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 2",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 24538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b6489eab-c724-4f07-8510-073d0823fd6b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 3",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 25715,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "426cef68-43fa-447c-b5e0-a7fd709a9c20",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 4",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 25628,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "545666d5-f5dc-4e54-99dc-f0c96215549d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 5",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 25472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ae8eec62-f60b-4f3c-a850-a1371967c2c1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 6",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 24878,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "753fd51a-2f0a-4197-9f86-e834f7cd85e2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 7",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 25370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cbabb1e3-ab6b-43f8-8da0-2e2ef36358d0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 8",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 24824,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b6368ebd-e5bc-46ad-8aa0-dacc4f0c0069",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 9",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 27021,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "68c671c1-e1d4-49ac-aa9d-3d59a73c09f5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 10",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 25934,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "465964f6-1f50-40ce-85ac-885d8f0a580a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 11",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 25747,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7c471885-1e81-4007-beac-0ec0d60e8acc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 12",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 25511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "08a1bad2-7cd1-4bbf-af4e-923ea1e19f47",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 13",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 25495,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "fd2c5e9c-3542-41b8-be9d-66f2989502d7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 14",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 14",
              "timedOut": false,
              "duration": 25829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5983434f-87e5-4bc5-a7c7-9968be39b6a2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 15",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 15",
              "timedOut": false,
              "duration": 26558,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4c610857-e3d7-4a3a-be6f-ed737f3d7adc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 16",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 16",
              "timedOut": false,
              "duration": 26464,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2f330a5c-b91c-48b3-b7f5-0ad87991593f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 13389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "474ed85e-0378-48e4-b553-e0dd8ad5933d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 14433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e39196f5-ce8a-4971-96c6-9e0ae4169ee6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 11749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cd6a20e3-06a3-4fae-9317-238c8cf96ac0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 11803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee2f81a6-58e8-451f-8362-27ee7558b7fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 12539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2a67cb6-d1be-4c75-a031-763f612a50ec",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 11272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7582290f-3e36-4ec9-a829-83599ed674de",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 12093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07e23281-b328-40b0-a9aa-4aa6ba61d976",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 11588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3a1928a2-8d79-4176-b3c0-a18b1bea3904",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 13064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "de1ec37a-0894-4586-a0be-573e3959f56e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 13522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "87a6828c-8556-45ef-9873-62fad88ac6b0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 13854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bd53f6df-f0ed-4916-a3fb-6cff9f9aa809",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 11701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2c45a61e-d2fd-4c3e-90d3-7f13d3412d1b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 11894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c1d3f9a3-85f0-41c8-92c1-5b1e03cbe0d2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 13",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 13",
              "timedOut": false,
              "duration": 11285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88023f45-15d5-49dd-bb8c-4add32d40bd2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 14",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 14",
              "timedOut": false,
              "duration": 12316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f10d3b45-9df3-499d-b605-18cb54604410",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 15",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 15",
              "timedOut": false,
              "duration": 12444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "41ef82d1-342e-4c4a-a154-b41bbc88e441",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 16",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 16",
              "timedOut": false,
              "duration": 15050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "588f818e-18ea-4fd6-9d05-8bd9e09437cd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 20594,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5c3c56c7-4168-4ded-b63a-1cc0dcbe52f1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 19796,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0b953066-8b52-4d7f-9ca9-ac572d33a62a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 19580,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c1a2b4ea-b481-469b-8650-424de65e885e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 19540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d4c06da2-cd54-4b90-a324-88a1a4c96c1a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 18796,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "75460ef6-0cf2-4b8e-b34d-8877d1b6236c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 18903,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aabd31a9-b66b-4ec5-ba25-1c190fc003f0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 0",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 18297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f3f8f072-eaeb-40a4-9cb4-a633e3bd22af",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 1",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 18121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "743f4dac-44aa-4138-8b3c-0d300e4b7593",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 2",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 17075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "07b14299-f266-4960-b5ed-f35135893b31",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 3",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 18003,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d07d31fc-6eba-4519-bf14-ca11f5de7286",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 4",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 18172,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a70df39f-2cb1-4bcd-874d-083c0935c644",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 5",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 18509,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e1d951f4-8843-4285-97e4-aa64f013b347",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 6",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 18313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a7b77ceb-2999-4d22-8f3e-4ef50c79cd59",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 7",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 17859,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4d507094-afab-4cc3-9e90-bb00b6b9c771",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 8",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 16800,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4b56a838-dc94-4b33-84d3-1bd45e98ba5e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 9",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 17375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "057776eb-31fb-4508-a810-bf1b1ab39e8c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 10",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 18690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "6b7768af-59c2-4a28-9daa-54c26bd88fef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 11",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 17151,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c7299b9c-415d-4087-a7d7-24a10d7809c7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 12",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 12",
              "timedOut": false,
              "duration": 21390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6aa3c214-1b92-4d4d-abae-61353fa4a03c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 27095,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f0506e95-f243-4fa9-83ce-b15512470960",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 26735,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5f9b3ac1-438a-46ec-b2f4-4ce25e2f3da1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 26875,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "469dd40a-1361-451e-aac0-81575284852f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 27955,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6b20ad15-e01e-4b14-9f16-d63819b72d29",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 26954,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5cb685b9-da08-4904-a92d-f87905f5f2b4",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 25608,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "31ef4f50-61b7-4066-b6ce-706f788bf94d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 26167,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "afd0fd4c-5836-4c32-bfe0-d45223a8fe19",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 26620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "12b38948-3cd8-4268-8d1c-ff0001da6514",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 26168,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "98d086db-4617-435c-96f8-62d002e87170",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 18461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cce298dd-803d-42c7-8925-29709fdf6c7e",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 18323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8f14a771-b0c1-4f55-a38b-833ca90e06dd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 18412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5531201a-3982-4c88-a652-2c34077689ad",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 18438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d92f11e4-2fbf-4595-80fb-e22997a88c7d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 18719,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7fe78ecf-c740-41c8-b16f-22925f4776d3",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 17850,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6f7547e9-5bc8-4a89-83dc-e1e4ff610533",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 18474,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f5746204-bc2b-4f44-aa29-33010015dbef",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 21877,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "07f604e8-b922-47f3-8497-941fcc1feee5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 18194,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "06513aed-8504-438e-a46c-e0aff186703b",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 19261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "592a803c-039e-4078-8a06-c879fdfe6439",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 18274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5d05966b-e61b-4d92-b5d2-b30a4a467723",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 18102,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "7e685d9c-c632-49b0-80bd-36ff8613f6d1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 12",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 12",
              "timedOut": false,
              "duration": 18719,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d0331ec0-2435-4cc9-bf05-54159326b78a",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 0",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 11881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f2445b57-2c8a-41a2-919b-eee1240283d2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 1",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 11370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6be532f2-0a33-4275-8986-9f1f990757ed",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 2",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 12669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1b32abe1-a0a4-427c-9424-a455cd88c7c1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 3",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 11830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4e575d34-6a36-4d40-990d-f0b3007703cf",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 4",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 16112,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "409a1638-d1b5-49c1-9d0d-1abe2cc42a4d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 5",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 14868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "95aaa94c-581c-4e2a-9749-ff425171c3a6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 6",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 11743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d4de54d-3002-4c23-b8bc-c421f930f9bc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 7",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 12400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f67ee072-6a41-4391-90a3-c65c563769c1",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 8",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 13600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a61d027-201d-4aab-bb92-3dc0b974c3a0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 9",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 12905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b1d7a7f8-f1c3-4a8b-974a-2ec4d3361cdb",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 10",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 13243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "113975bc-4622-4a5f-8386-bcc9dd27dd61",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 11",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 13662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "41bd2084-40e9-4c96-914b-101abe28a2d0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 12",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 11240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "16ffcea7-5fd0-46f5-821c-d2cbebeba5b9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 13",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 13",
              "timedOut": false,
              "duration": 12202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c0027bb4-b6fa-48dc-a158-97c7812e1f1c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 14",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 14",
              "timedOut": false,
              "duration": 13749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "356fa7c8-a72d-4fa2-b893-5c6f9772b55f",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 0",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 18801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ce496bd3-4cbd-42d2-8fb4-b20111f599d7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 1",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 18130,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "936fe4c5-7e5d-4354-aa2d-37bd8f940688",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 2",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 18892,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "6b8ca2ec-d89a-41ce-8b76-8ef8d5a679a6",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 3",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 19096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "ad0d69be-1eed-4ec5-b043-cebbcc7390f0",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 4",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 19236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "22430acf-9f6d-485f-901d-07310b597dcc",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 5",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 18020,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2b421917-bfb3-43c0-9cde-c32141214ef8",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 6",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 18852,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "80005213-4733-4604-8978-420a6df3a034",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 0",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 19185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2eef85f9-d71d-43d6-a73a-bcb89a77e821",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 1",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 19492,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "530446c9-692b-4cf7-a82a-52bca8df7353",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 2",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 15054,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Page.captureScreenshot): Target closed.",
                "estack": "Error: Protocol error (Page.captureScreenshot): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:208:63\n    at new Promise (<anonymous>)\n    at CDPSession.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:207:16)\n    at Page._screenshotTask (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1105:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b9988d04-88dd-44d5-98ed-15a484ea54fd",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 3",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 19729,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "104afa29-3449-44a8-8aab-bca2cab7d002",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 4",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 17456,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a580088f-2252-4821-bb83-cd28779e6814",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 5",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 18920,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "308561ea-7e80-485e-8d9d-4ac7658072f5",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 6",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 18517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "89a76ec5-185e-40fc-8c9f-dc99e6a2763d",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 7",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 22033,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "62f2a94c-8d36-4f75-801e-6d71bd74b652",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 0",
              "fullTitle": "click test helloworld programming -> hopeubest -> 0",
              "timedOut": false,
              "duration": 18895,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "642860a5-9efa-4df4-beb9-009fec082e39",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 1",
              "fullTitle": "click test helloworld programming -> hopeubest -> 1",
              "timedOut": false,
              "duration": 19866,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cb8aa06b-850e-4f77-8994-da6032b7700c",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 2",
              "fullTitle": "click test helloworld programming -> hopeubest -> 2",
              "timedOut": false,
              "duration": 18788,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d9bbe432-867d-4b9d-9261-5872d8e2dc95",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 3",
              "fullTitle": "click test helloworld programming -> hopeubest -> 3",
              "timedOut": false,
              "duration": 19860,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0c1d9d2a-1437-4ba5-86aa-3e690daef509",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 4",
              "fullTitle": "click test helloworld programming -> hopeubest -> 4",
              "timedOut": false,
              "duration": 18109,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "dd971d83-ac1e-4828-ae3a-83af9f2b8790",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 5",
              "fullTitle": "click test helloworld programming -> hopeubest -> 5",
              "timedOut": false,
              "duration": 18188,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0e95f4d8-f379-411d-833e-41b321ec3ac2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 6",
              "fullTitle": "click test helloworld programming -> hopeubest -> 6",
              "timedOut": false,
              "duration": 18932,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5865c371-11f2-4912-b663-aeaaebecbaf2",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 7",
              "fullTitle": "click test helloworld programming -> hopeubest -> 7",
              "timedOut": false,
              "duration": 18762,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2ade477b-3890-4ac1-bd18-af5cae962ee7",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 8",
              "fullTitle": "click test helloworld programming -> hopeubest -> 8",
              "timedOut": false,
              "duration": 17996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "3da2f813-4a01-46d4-b010-8c62c5fb64c9",
              "parentUUID": "1292b7eb-ee37-489b-bc14-4f2ba4365f6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "deabd05e-10bc-4ec4-83be-bd9a470b8271",
            "88e0fc7d-9132-4357-ac6b-b3080148a20b",
            "5b1e7872-147d-4f0e-8467-aeadfa2fa10d",
            "8c9e7dc4-7d7b-4622-8021-e03fb5ebb223",
            "e6733249-f652-44d8-aa9e-0b6ffb0d7ced",
            "504c9369-7af4-4258-b5e3-903f6855d6b3",
            "f0e1e7a1-6cbe-471c-8e9d-1edc493d4db3",
            "7005f037-1bb8-4ba4-9f74-b8ced4b87d3f",
            "30073458-44fc-46aa-b5d5-0a8c02c61f42",
            "85b05083-a71e-454a-aa97-6333412b4269",
            "c9617611-5ed2-45b1-ac5f-330607fb92ef",
            "ba72a93c-ec84-46a5-993a-ef662446c3a5",
            "cc2e7c93-dd6e-4be6-afdd-c3f7025ef4ea",
            "cf303a9d-178e-4c1c-b831-a7782a2752b2",
            "5903330a-721c-4628-b7cc-65289076bfdb",
            "ab11821b-f3b8-498c-ab7a-7f88f4295d8e",
            "fd2853e0-4e54-46a9-8450-2e88359c83bb",
            "33204dfd-bd10-4161-8312-51bf34ce1749",
            "3a6329fe-beb7-4f9d-b01f-b7019e2413d5",
            "1f08396c-3a61-4c70-85f4-3189b1f9fa17",
            "997f10a7-935c-4dd6-b16d-a84f8d34adb4",
            "d3f6b760-ed74-49d9-93b9-ad647934329a",
            "71c826a9-5afd-43e9-a4c9-d44c82b92a88",
            "96ded2dc-cb62-40e9-b7df-3688c5d50a79",
            "69a7a49a-66d5-49a1-8618-dcddbb5ed42e",
            "01f482b0-d54e-46ca-8c0f-bfd0282a8ebc",
            "134549b9-bae2-43b0-9d19-c544286061ef",
            "11320631-237d-4635-84ad-279021688de2",
            "837c69e5-9e6e-4bd9-936f-e728e971f69b",
            "60e7de7b-5335-47d2-aac9-33dcc4af43a5",
            "532b0ff9-55e1-411c-97e3-98f24be39138",
            "11bd89c1-2359-4a00-8657-e356bbfd1363",
            "bea7bddc-eb05-425a-b22c-84f2dc3e8b8c",
            "d51472d0-df29-4195-adc1-228d5e5dd19a",
            "8e65f3ea-28e8-4a3f-b58d-d072784a7298",
            "17d45605-1536-4585-9196-bffcc3e4ca3b",
            "ade50ac2-a1c8-4619-8601-26f2ece4d432",
            "930583f4-8fe4-4bb8-84a7-1472d36883a3",
            "58348d52-e2bf-4418-a7d0-69b803ecd20c",
            "2ae2230f-3c67-481b-af66-33d0cfbd5631",
            "7d7ec19d-0b72-43af-9d9d-8eab3640cc6b",
            "2e2ccd81-976d-48ee-b9e3-38139bfaa307",
            "d7270031-704a-4561-a1d8-3b91bf90b74e",
            "26c0d387-8223-419b-852d-aec4ea726816",
            "d5b6111d-f99c-4365-8264-fcb5e0fe70d3",
            "0a8fdd43-70ec-48a4-b1af-97e369b763d0",
            "eaab2add-8256-48ca-b638-f4bec9ffaed7",
            "b9b6cfc0-2f6d-4baf-9260-415145a89f17",
            "57871e1c-ff47-45c4-b380-4c1e4f8a54bb",
            "634ba8d0-d660-46c2-9dd7-564978a6bf68",
            "a9299ef2-6d7d-4ebc-a47b-10f6f3904928",
            "b4f2df01-545c-4295-a936-0a0827f723b4",
            "732aaa07-37e1-4361-a82f-1695203072c9",
            "b8b86965-b2ac-416c-8502-e2aa79bb0b4b",
            "164914e8-abd2-4ec4-8b72-e2bb59a641c9",
            "7741fdd3-5fe9-4779-8584-772d5982c3d2",
            "3963f015-d1e6-4f2c-b9bd-131ace030081",
            "c080c1e6-7588-40b4-9bcf-1fb891939ea6",
            "c17889a4-590d-4912-bc86-192823a818a7",
            "039efd78-d394-443f-b971-d2e756c5559b",
            "e23ef923-34d7-41c4-8652-cd8e243f1745",
            "6f188a35-6813-4fa8-970b-3a98084f183d",
            "dbe07eba-3591-4998-85ca-3b61452d303e",
            "d706df60-1997-403a-9e68-fd7241109f1a",
            "912808fd-9490-491d-95aa-def09f3c2804",
            "151f3496-2a2a-4864-8610-3232966a068e",
            "304964b7-eb80-4a3d-a06c-37b2b96398d2",
            "d8f28799-0ba5-4918-bf00-da4b0bd9f823",
            "1a9586f9-b4ae-423f-95a0-9dbb0625ad62",
            "2fd45da6-6bb5-4f4c-9b52-0d26f1679ef3",
            "8f497159-b14d-4eb2-8ce7-4f38ba2f097c",
            "ccca9376-ba00-4f92-af3f-feae82dd693f",
            "3d98c824-cb95-4927-98f7-9f9f7473830d",
            "08cf1053-43c3-482b-9b20-93f1d720a2f5",
            "afa9013c-28b7-4f77-a2e7-bce04fbe9974",
            "a9ff78d1-483f-4fa0-b50f-394bba462880",
            "2fb4106e-2993-4742-ac70-5203891d4117",
            "57ca0d77-aff4-41a5-b2b0-2b3f7c0fd840",
            "d24035cb-ff19-4709-bcfa-459e0864736f",
            "f8966f42-cb51-486e-9297-e53cc67c0dae",
            "660a0bae-62b2-4897-8f19-7340e784975c",
            "26804eb1-1b08-4569-8bec-9fb8c3be86a8",
            "f253f870-62b7-4a9c-a076-f2241059e7c4",
            "b3a4b95e-9bcd-489a-a070-9506047c1244",
            "34a0aff1-130a-4d9a-848c-52e86cd68b02",
            "1cba704c-2635-41c4-9a8e-6c88fa6a6bf2",
            "dfb4fc16-cae2-465e-bb8e-d449c551c00c",
            "0695e874-af5e-4fd1-a118-d19e608bda5f",
            "a4c0157f-275f-4093-b365-09f6956ad350",
            "d9bd0284-ce8e-46c5-a55d-1a7801bf2d2b",
            "2784024a-d3aa-4251-a3e1-278d4bd37b5e",
            "b238d5cb-8281-4831-9cfd-edad40b69978",
            "b8ac565f-46e0-46bd-b88b-56ce91495c67",
            "d079cc21-54df-4a5f-abfd-e6fbc8040651",
            "ff8e95bb-43e5-4289-8fd2-1030702d0450",
            "ddbced48-f0e0-4132-b023-e116e16d7450",
            "36e2b695-c37f-44dd-8dae-c1ad8f61d0d2",
            "8c06fbc8-85c6-4235-846d-b3ce2fdcddf1",
            "a071c4c5-39f7-45e8-8be1-8fc4d7a96bb9",
            "05cf5aec-0c15-44df-ba10-a85cb9b472a0",
            "b7fbe1f8-dc7c-4262-99b7-5d546a2e1e35",
            "26b9ebef-9d19-44a8-b775-fdd56eda5511",
            "cc675ec1-51b4-4cc1-a55d-c8419b74577e",
            "4a678622-03d7-48c5-8f1d-e9e05e9f5cf6",
            "2fd0c1d6-6ffc-4df8-b898-31dc2de612c6",
            "a005ef86-233f-48b7-a850-e9a6db61033c",
            "2fd05c04-d116-494a-9756-431e4e7a0e1f",
            "7df777a2-d978-4f21-8367-2cb9756832ef",
            "8e942f1f-f75d-4637-b89e-27b2e8960d70",
            "5d151858-ed0b-4966-926c-88311f801f25",
            "5eeadc62-4bb8-48ba-b6d3-f7771a636663",
            "7693e0d1-3c93-4fd2-b09a-b47491eab138",
            "e666255b-1c6b-40a1-a532-7d75f106bb21",
            "921ac222-58e7-422f-9dbf-074e11c12618",
            "48e2aee7-3c21-433a-bd14-71091963b3a2",
            "b2e85145-548f-469e-bf96-35e9881c4f9f",
            "1df89a18-0151-485e-bc9b-01c49a1d4c1d",
            "48ee904b-2a6c-4591-870e-749ecb04413b",
            "bd64c468-2e98-4942-b584-7902b77bc752",
            "394d5ad0-6337-4811-886a-12f089c16324",
            "35182a19-5388-47ed-9f28-006239105117",
            "1f1bc603-d9a1-4b6e-9c5f-fd66d5ff6825",
            "7d4bd1e3-45c5-473a-92f7-066a40eb1102",
            "7dfe3ffa-3c51-47e5-b5d7-5ac7b8898f95",
            "efbe5f2c-274f-442e-bbad-c74a74d128d0",
            "d7581410-9b4d-4776-8c9b-01a1d8f7e999",
            "0c9fdd48-d095-4b3b-a8b6-a849d83f1e08",
            "7661654b-73dd-43d3-9a49-12d441400a9a",
            "bf41dabe-35bc-4b47-ad1b-bfc9789d3bc6",
            "c0c4621f-5f00-4083-a259-2ffb09d0414b",
            "67d95c7c-885e-4e64-8195-e65dc7646595",
            "9c5029ae-86cf-4bf7-b4a1-41f2345dabe0",
            "72981d35-5907-41b8-8b74-bbb146d7b3a8",
            "5b923dec-7bd5-4411-aa55-f59290d9d277",
            "c0beed7d-87a0-43e5-9660-0aa9d3237ea3",
            "bc6d0669-d066-418c-ba31-25f6c8f83755",
            "249db08f-c7ee-4d65-980a-c94a5bd8a3b9",
            "2743aaf4-fc81-4731-8895-9d57f2366f55",
            "166c4a9b-049a-48bc-a5fa-5627c46a3db8",
            "1dc157ed-3deb-4aa3-ac64-a91ed1b75042",
            "267e38e8-b048-4daa-ac58-142fcd109695",
            "0ecf9e21-56bc-4a0b-8bd1-8b4d0f6e65ae",
            "5b2504f4-a8f1-4d38-8bb6-bdc0e363561e",
            "af0b7cf0-ef3b-4045-b38d-83eeafb93e37",
            "63342892-0147-4ce6-9bbd-84f8989e56ce",
            "92f71f07-23f2-4f84-9496-340884933162",
            "28e1eefc-36c7-4c79-bf65-dcc7d9f937f8",
            "e246d9f9-4136-4ed0-a442-f3d3db32fba6",
            "694f057e-d648-425d-9103-4f32f8033543",
            "a9ba74eb-07be-4673-a2e7-16867f8b975e",
            "eb1a549d-3bac-490d-9f97-93fb8934170a",
            "ec132440-6fee-4a8f-949e-06cc1c197388",
            "a3ab6ee5-e168-4341-9ae6-24b4c1926870",
            "8693cc01-228b-4ebe-bd01-f3b024abb289",
            "7f3e65e2-2f5b-4c6b-b687-10fafe7d57dc",
            "188926f7-f4f8-4c9b-91fd-9219b5ed1080",
            "652112df-0ee9-4085-bdff-6c11c2fc062d",
            "52ab3828-b9a1-4bd2-b10d-4a016f865e9a",
            "633f582f-d10a-4a86-a26d-d60ecfa1640a",
            "ed3c16b1-5859-4594-bba2-34f7befc046b",
            "b8d58666-554d-46ff-9316-e048878ca853",
            "88942bea-951f-4a4b-8192-3b74110e3b58",
            "e0f65bc6-fe82-4cfa-bcbf-92ca206f7bf1",
            "3445729c-11b0-486c-af41-85be04f494b9",
            "078398b3-4817-4e6f-91c5-5572cc3730d8",
            "eb3e9f1a-0f00-4583-b565-e557069fc0ce",
            "98406d65-26c3-494d-b4d5-efd2e7658dda",
            "a1f7ad05-ffcd-41f8-a1da-546e26848daf",
            "fdfcc8e3-e3a0-418a-a5e7-1f81eceffd37",
            "68a254da-ab26-4a58-a0f3-3d23b0472ca4",
            "08c17528-e39c-4648-a8f0-8a5a6741141f",
            "6ffa694b-e836-4758-b6e2-67c938c870d6",
            "8ac7a01c-cc20-4ee2-8fc5-bb4d603503ca",
            "379bae17-7919-445d-b8fd-9c02e43992b0",
            "992d9407-b0b9-4208-b3d2-166d4bfc149f",
            "2f69f9e7-0bbe-4049-bbcb-d6f9c6164fcb",
            "ee93ed17-171f-49dc-9275-fbb92df875bd",
            "88cb2cec-9769-4ead-a91a-f090c9b73f93",
            "34272778-185f-40c9-b6fd-d0c0f1a2491b",
            "46e4e37c-5483-442e-a52d-e41a273849c3",
            "0558b588-0093-4665-82dc-07829622e272",
            "ad8754c0-f103-44a0-b14b-84e972a3768e",
            "de005326-281b-4bd9-8560-a7977e526e5f",
            "aa47d6a7-7016-4d67-a04c-b5cc544da53c",
            "af2fa57b-320d-479f-9c81-3aa0a1491dd7",
            "16f375e9-e44b-4050-98eb-275a3ae97239",
            "c4cb0057-02a5-481d-8abb-3abe73b08cd9",
            "fbbbd416-0f44-43c8-bd19-104c944c2142",
            "e00769dc-aef4-4472-b348-e04a948e3872",
            "28f91a2b-7df7-4de9-b763-59ced0352343",
            "4aa95e60-a8a7-4205-806b-d9ef5f678068",
            "01a41aac-2086-4624-8517-42c9a586dcb3",
            "1f419935-1dc0-48e2-acf9-5ede1267401a",
            "627deca2-4c48-477f-b4aa-a3c2647e8f05",
            "c0be3627-3c38-4da5-9a8c-3eb2fdc66dad",
            "75123fb1-a2b1-4148-a080-e4f0106ac3c4",
            "8c71d22f-4bae-470e-a57d-a5083cad482b",
            "14624252-7143-494f-99ec-9c296713c602",
            "2239b82e-5c23-4ddf-8956-590e992d5c3a",
            "879ea87f-1bee-4b9b-85e8-b6d271783ab5",
            "6bfd64fe-b9a5-4303-ba7a-0ab62c3e0f2a",
            "4d2fb4e6-a489-430b-b7cb-3ab340fb8a8a",
            "279c2079-bf9b-4779-bfb9-750e883ef3f0",
            "0c13bf39-845e-4964-ac2b-90a1ec55d2b2",
            "b2e88e0a-c009-4167-adaf-1375e66c5a13",
            "c3d8d5bc-5f09-479e-a72b-74b58fa9e29b",
            "fc8bd205-d457-498b-ae49-2264e2706d39",
            "17b3def2-a93b-4c6a-8b42-56f281e9959c",
            "9d91b8c1-65cc-4174-8664-c9fc88135d10",
            "7d5fe0b0-572e-4255-876f-f3ee2ac65585",
            "e683c643-4f46-4604-8694-f249a1cbc2e6",
            "cc043e34-511a-4f45-862d-107e0a497159",
            "b673da3a-f455-42ea-bf66-61b53ef4c674",
            "051351fc-9d73-4876-be50-acf815110664",
            "c0fd2b5d-4c18-4bf0-8e8c-e1a9b467f59a",
            "252a42ec-13c4-4152-a25c-138c00ada6c3",
            "0c941a8a-d47a-4f77-8be8-44304cc50f4b",
            "2a0772d0-c303-4059-8e01-937e311264be",
            "67d3bbb2-3e61-464c-8040-91143d873aef",
            "bfa55c1e-4120-46b7-9f2d-e1fd8ea304ca",
            "5dba61eb-6713-405f-b2cb-8a4ce8fe4d42",
            "996de19f-6ee6-4969-b198-b1968b46f788",
            "5d50cadb-15c2-4c7b-932a-33bc3a005a61",
            "09de640f-caa4-45f4-85b7-bf5305ceec60",
            "f3b86509-32ed-43b1-94ad-d4ad21c89348",
            "1275d75c-67c7-4205-8185-b7719cf49b6a",
            "8c7d74e8-40f4-4e25-9211-9a0ef4f53656",
            "073c8a42-7930-4b4e-a3aa-860d6197f67d",
            "c229b50e-6b54-4ca6-be6c-1851197a4178",
            "26d431e5-3170-4d1c-af6f-3e64d409d60a",
            "be964d39-a462-4f9a-8c8d-641a364abdc7",
            "cff00991-4b41-4a72-911c-884ce53f2656",
            "c48b79b8-d6ba-42bb-9efb-3b18d6875cc0",
            "06d47615-ca53-4794-ae58-8c753e8bd9b6",
            "db0674ed-013c-4d75-a6b0-3d5498685f04",
            "4a45cd3e-b9fd-4026-8097-6a707d9f33a1",
            "4b0f301f-fe6c-4568-954a-41fc62026c8a",
            "2ba9c125-96a8-4caa-b3d1-1d41cfb606b4",
            "d192b5c4-1ef5-4dd9-ba94-dc9f0b4338ee",
            "b94cb507-3540-49e4-b8cf-270bbbfe6bc1",
            "bbce258c-97ac-495a-ac32-5250a501e5d9",
            "e1de8e04-c115-44db-a385-789648d2313c",
            "ac099504-b6f6-4916-87a6-320efe517c47",
            "5450afd2-2f10-4934-9311-2d3bbbec0a6c",
            "5773437d-510b-4c52-8bef-f60285bcb93d",
            "bfc9a226-8180-43d8-b9f8-89a90ed37fd7",
            "993d05fb-690a-4f91-baa1-0dde94f25c2a",
            "5cc7b91f-f751-4fd2-8680-19345903185e",
            "8c650928-d2ac-451d-9330-70f02dba7212",
            "ed05bb72-8015-4bc5-93cc-7ec9d9197a2b",
            "6c31497f-380e-4cbe-83dc-44769b0a8187",
            "6ea57825-84ad-42a5-abe8-51279cc3d6a3",
            "ee7c4415-1261-4dee-a6e5-975b36984d0a",
            "57b2ceb6-c47c-47b2-9afb-bc9ae4e831d4",
            "16a23d65-9af5-46d5-a593-cca09964b962",
            "69341295-d20e-4060-a8e0-c068cb021b88",
            "2541788a-790a-437d-9893-c06e39fff5bd",
            "a475f770-adc9-4bf5-87dc-5d4ad8365e42",
            "31e2cdd5-0855-4e3f-a34d-f1dfe67d9fdd",
            "993a1e78-03f6-4854-8abc-17db3c0e7281",
            "932c0827-a91c-4c83-9c09-41f9ae4ddc30",
            "2ed45a2d-79fe-4af3-b41b-fdae7376a9f2",
            "c96620be-32c7-41ee-85eb-2ec93376d710",
            "88ff8364-1c61-4ecb-97c1-7200bed2ec42",
            "bbd2d824-b05c-410d-8d3e-e95de8961fb7",
            "fe2f23da-1502-4205-b730-01aa692d77f8",
            "8a29d765-baab-4d5d-9268-0d989ac21831",
            "c94ee9cf-a2d4-46e2-b832-9b405559a306",
            "9fc58653-09c8-4ede-b9fa-d684dbf18dca",
            "0ff0024a-1091-446f-9489-7a817e8ddcb5",
            "73d3b5d4-cace-489b-ac1c-b78e1f02d65d",
            "cc0b34e3-32fb-4872-943e-d8a2aa11a6ec",
            "fad6b963-c525-47ee-9bed-79aeea4fa2d8",
            "6b91a379-4a63-4709-b8f7-a7ec370e55f7",
            "1ebe5642-61c4-4b1c-9397-22f296c4e8cc",
            "72d39817-43f3-41ce-90d3-1d8e1524b582",
            "1fb11aaf-79ca-408f-9865-d9182be0c59a",
            "8347ba6b-06b5-4997-80c4-f2fa9000dc6c",
            "d93f63e0-517c-422b-8cd9-ed6725f9c313",
            "33e22332-37c9-46aa-a659-5c08d6eadaf9",
            "fb76b1ef-7702-4f14-9fb6-7faecdd92f72",
            "93048c28-bda8-4233-b3c9-8b7a3b0b39f6",
            "08e04d8d-9dee-40ee-8eee-b4b25a6f05fd",
            "d87a61e9-e668-44fb-aee0-fea9e2686bd5",
            "2dbb0a66-9ce4-4ea6-8383-bd50a44f626a",
            "35c8a1a6-933a-486c-a4aa-272d1da2c6dc",
            "dad78786-2a3b-489b-9cab-97c529d4f13c",
            "e1354fae-9d20-459a-a445-0103af01ae75",
            "46566450-72fc-4e33-ab97-669c0038729b",
            "9ef43779-0f47-4828-931b-bd7504b456c3",
            "db4e1afd-a853-4fc9-999b-cb439dbf987b",
            "78ab20b2-e889-4cc4-8236-930611a75b56",
            "6a5d61f6-8de3-49c8-866d-1b4ffa6871b1",
            "23cef689-73b5-4176-ae22-9d7148a32d54",
            "02bec98f-3579-42de-acfd-8c274bf5bb15",
            "4292ad3b-8d39-46bf-b714-065e836fd80d",
            "78836c58-2555-4a4c-97d5-b4252482fc46",
            "e77b1587-d0aa-4d06-9cc5-d497582f1515",
            "90ccd368-aac4-40c0-b3b5-543473ae88c8",
            "281af417-015e-4176-8312-a9e1d9e68a8a",
            "7f8ea9e2-79fc-4e56-93e5-b9c39dd1d059",
            "a436eddb-0fa1-4aeb-8d17-44b0d5a9e2be",
            "0d8fdd36-fead-4dfe-962a-4409e8b658e0",
            "3743cf45-ff65-444c-a37e-d1dab5476e6a",
            "655bbd28-f2f8-46b2-80ca-33aa24c7526d",
            "9399edfe-39f2-4390-afbc-2ab156c37a24",
            "e1a7eef4-1a5a-48a6-a998-52a56590f221",
            "028d5777-8fe4-4c57-b0e8-f243ff155176",
            "0b980936-b0ac-447b-be28-21d2fdea99d6",
            "0f5ae9df-23e9-4b6f-ba9b-e2851fbba5d7",
            "d2466f99-5a78-40ed-8c23-2b27dabcf52a",
            "7a05599b-838e-4fdd-9e33-0c28181f6557",
            "12c6fb84-4987-485d-88b5-bc57b0573218",
            "96727804-568d-45b6-8fdd-fdb22ea237c9",
            "04edda57-8976-41e9-b940-b02c0c5b71f2",
            "11938b68-142b-4bda-9a59-1d8c775febfe",
            "b51afbc5-c86b-4997-bfd6-64f5fdfb082b",
            "1483979d-a171-4654-91d9-1a59716434d6",
            "32b96602-3ee3-4b2d-9b74-99ebfb1f47d4",
            "dab5fde5-2f25-48b1-90f7-63fc845f5a9e",
            "5584300f-d2da-492f-a791-dbc4630f07e9",
            "983431ab-373f-425d-a33d-bbdcbf4522ad",
            "d0e9f435-d0e0-4285-826e-f72106d42330",
            "447a594e-79b1-464c-88fe-b6c8fa7852da",
            "514eba34-9cba-4091-b726-997c12de9629",
            "474ed85e-0378-48e4-b553-e0dd8ad5933d",
            "e39196f5-ce8a-4971-96c6-9e0ae4169ee6",
            "cd6a20e3-06a3-4fae-9317-238c8cf96ac0",
            "ee2f81a6-58e8-451f-8362-27ee7558b7fd",
            "b2a67cb6-d1be-4c75-a031-763f612a50ec",
            "7582290f-3e36-4ec9-a829-83599ed674de",
            "07e23281-b328-40b0-a9aa-4aa6ba61d976",
            "3a1928a2-8d79-4176-b3c0-a18b1bea3904",
            "de1ec37a-0894-4586-a0be-573e3959f56e",
            "87a6828c-8556-45ef-9873-62fad88ac6b0",
            "bd53f6df-f0ed-4916-a3fb-6cff9f9aa809",
            "2c45a61e-d2fd-4c3e-90d3-7f13d3412d1b",
            "c1d3f9a3-85f0-41c8-92c1-5b1e03cbe0d2",
            "88023f45-15d5-49dd-bb8c-4add32d40bd2",
            "f10d3b45-9df3-499d-b605-18cb54604410",
            "41ef82d1-342e-4c4a-a154-b41bbc88e441",
            "588f818e-18ea-4fd6-9d05-8bd9e09437cd",
            "f2445b57-2c8a-41a2-919b-eee1240283d2",
            "6be532f2-0a33-4275-8986-9f1f990757ed",
            "1b32abe1-a0a4-427c-9424-a455cd88c7c1",
            "4e575d34-6a36-4d40-990d-f0b3007703cf",
            "95aaa94c-581c-4e2a-9749-ff425171c3a6",
            "9d4de54d-3002-4c23-b8bc-c421f930f9bc",
            "f67ee072-6a41-4391-90a3-c65c563769c1",
            "6a61d027-201d-4aab-bb92-3dc0b974c3a0",
            "b1d7a7f8-f1c3-4a8b-974a-2ec4d3361cdb",
            "113975bc-4622-4a5f-8386-bcc9dd27dd61",
            "41bd2084-40e9-4c96-914b-101abe28a2d0",
            "16ffcea7-5fd0-46f5-821c-d2cbebeba5b9",
            "c0027bb4-b6fa-48dc-a158-97c7812e1f1c",
            "356fa7c8-a72d-4fa2-b893-5c6f9772b55f"
          ],
          "failures": [
            "010bf42e-2cad-40fb-ae94-cae7f0d592f7",
            "d13feb58-05fd-46a6-975d-d63cfdf8753c",
            "ca52e1c9-28d9-4fae-9e9c-b11876950715",
            "a497230c-fa5d-4360-9482-8209cfe86fe9",
            "c86003aa-38e5-41cc-b35b-a8ef7f03bf63",
            "d0e9975a-ca2f-4346-ba23-0cb9a12d2e4e",
            "c9070096-e8cf-4083-9a21-989c51937d3d",
            "e65f99fc-a57b-4da9-9701-a8f69b65db0c",
            "2de6c07c-757c-45de-8993-364f41d6cb0f",
            "20ae459d-d1a5-4e5b-9b75-1fa4bbcf22c5",
            "09d16664-8d84-4c06-b9bc-be5a92cccc20",
            "ec0fd4f8-3447-401f-b925-b441e7d8968e",
            "f4397b9d-13da-4f90-8cff-e6cdf6596c05",
            "98662f0c-fe07-4944-a65a-cea4d956d7e6",
            "994524be-6147-43b4-99c4-141320ce6041",
            "7d22a9cd-9998-44cc-b5e3-ca98b003e89e",
            "7565b852-7ee7-45d9-b342-675a3fc137be",
            "544dcf3c-c24f-4ea8-aeae-67a144a8edbb",
            "1d4ba980-64e1-419d-8d2d-cc31462622b1",
            "5343230c-c064-4d59-81e5-d7f1b98fc5de",
            "3b8a3bf9-30c6-462f-b919-95074444d38b",
            "93f092e1-aba6-4f16-8790-9a7267742111",
            "710c2166-e434-4f1a-a8f7-e5fea0e4cae6",
            "e1f297ac-4d96-48ee-a6dc-7957c0dbc1e3",
            "91ff7eab-1fe4-437f-8080-d9978e170039",
            "4c366a58-b0f9-4d03-b5a3-b6c7f4040711",
            "6ae68ad1-a36f-4875-a42f-74f2ed62e36b",
            "4972c0f1-1d6e-4260-adc6-089c8e306ee1",
            "6a5bafd1-e54c-472b-a33f-aa0a15558fca",
            "4aeb67d3-5b33-4c79-a85a-13d9d1050aed",
            "1536bdfb-e2a2-4b19-a8f9-b340775337df",
            "fca5c8b6-7906-490f-a697-8b2fcf90bcc9",
            "ec449d8e-215d-43ec-b014-18f15eb85a2b",
            "bfbb8f23-9531-4975-a847-32961619ce5e",
            "d76aad58-455d-45a4-9be7-81a7abec61c3",
            "6bdca665-b7b3-49f0-8b08-27319960ff81",
            "05b430b8-47d0-42c3-a1f6-a1b520922381",
            "99f00fd9-96f7-41e4-b39c-60331b2293ee",
            "3913b7a9-2d75-4c78-8115-2ce7d5966c12",
            "d29c69ae-78db-4f66-80e2-60b3b9cea7bd",
            "16b3b465-eee2-4836-866e-955b66da679b",
            "adf59dad-6f1c-450a-b39a-f697831910c8",
            "907fdc39-6f1b-4c07-81b2-05bf78a042e4",
            "d65451f5-f3c1-4809-bc68-f278e9935659",
            "0108d3e2-184b-4e4c-964d-0b7210c772a9",
            "41ec1d64-d581-4f23-8885-ab1b59ab60ff",
            "82ebdc8e-766c-4e74-9872-7f469b84469f",
            "a21f5501-6798-4242-b854-3f23acabec0f",
            "460a27f6-a7e1-49ab-a5a8-87f8607cfe78",
            "74cd8ccb-f922-4c28-b42f-1feab7ac832a",
            "865036f4-2f20-41d0-b09e-962d1d95762c",
            "a256db11-0104-41fc-863f-ff00bb937e72",
            "97fe3f36-5867-47d6-a8af-3a4d44e1da37",
            "54868b59-afd6-4459-9219-add45fecb785",
            "4bcc776d-7575-45cb-9d86-8da6d4de106d",
            "ba9b5a41-380b-41c0-aa48-e5bf1d8dade7",
            "c0ec761a-f167-4a68-9c75-3c9b5101fa1c",
            "836d0379-0798-4f3b-91cb-8bc9e67f1f0a",
            "cf1bf7f4-ead0-4602-b767-e0f6e9332e72",
            "70b03702-de15-4178-a533-2aae6a66fa51",
            "267f9a5e-1bc9-4d13-b839-a1643a5fede8",
            "9e0bbf40-eef0-42a0-be3a-29037428f5e9",
            "d2770df0-1926-4599-9b35-0b7f93934392",
            "6a1af981-bcd8-4aab-ba74-7862b094124c",
            "9afb5525-ead2-4851-812b-1f4bf45e0a95",
            "d87a240d-a8ea-4850-9240-7caa095187fd",
            "b099e56e-334d-4a51-a620-deac9b1e6fc0",
            "1effc05b-5e2c-4267-9350-ed1ab5d55c30",
            "f9a18e33-16cc-4eae-b8e6-08027d3671fd",
            "8139d4cb-1f7e-479f-a10a-6ba8b0c46163",
            "aad2e45c-b264-4437-82e1-076156d64620",
            "73e41821-59f5-4ddd-a2a5-1f13c18d9433",
            "7733466e-5ec4-4d5c-a1d8-8493907a9465",
            "bfaca281-110b-4b67-ac1c-49fe91f515fa",
            "c2e16983-fb30-4915-805e-563e5be2e3d3",
            "7e1206ab-c513-4bfe-8e59-d84f6e33ad4a",
            "bc7ab722-f7ef-459d-b190-d0c87ac62fe1",
            "072905e3-7426-40d8-bf99-e27b4494e579",
            "90d38a63-822b-4fc7-b691-70a329e620e2",
            "9db42f95-a90f-4007-bfd6-41d0ac59d897",
            "b8569229-0b08-4458-bb4f-f1e3939e2d1b",
            "cafa3a10-e779-457b-a04c-cd66b497465c",
            "f66d2da5-dcd2-4ceb-bf65-d59cf9984179",
            "18060a71-f3c0-4712-bc2a-a0a6954366d3",
            "cfbf4cf9-31c2-453f-a5c9-6516570ec653",
            "7e3f1225-3bbb-4cc0-a95b-1f6aaee98858",
            "43c3bb89-6cea-4869-99b9-7b71f7da77a2",
            "6c1e0301-7063-4bb0-85d4-bcc2733aa925",
            "e443578d-efa5-471d-a4f6-3c0d5d4235e5",
            "3d3776ce-462a-4288-bc8b-0f111d73268f",
            "2cbd4fea-e418-4206-87b6-f680f268acbb",
            "b96eb709-f76b-4453-8ca9-f85bc6ab6a6f",
            "9c1f918d-fb23-41dc-878f-e7754eadbf26",
            "c389920c-747e-4195-8922-9612783c02fd",
            "5a48fc27-5406-4849-81f3-0fdd163a74ff",
            "46d45b0c-7672-4fb3-93af-8f7051091251",
            "c39902f4-3f48-46db-8bff-edb1614c09c7",
            "e1bfa478-3906-4854-bd3e-2f3e1829cefc",
            "857768ae-1baa-4aca-8c43-f31be163f647",
            "fa263531-0741-4daf-aab1-29afb06cde78",
            "49bb1ef1-9889-441f-b579-0bfc909f99d6",
            "c2c1ce97-891d-4068-b439-621533459b17",
            "8bb18d45-7091-43f1-8ae5-ac85cf4b6677",
            "b6489eab-c724-4f07-8510-073d0823fd6b",
            "426cef68-43fa-447c-b5e0-a7fd709a9c20",
            "545666d5-f5dc-4e54-99dc-f0c96215549d",
            "ae8eec62-f60b-4f3c-a850-a1371967c2c1",
            "753fd51a-2f0a-4197-9f86-e834f7cd85e2",
            "cbabb1e3-ab6b-43f8-8da0-2e2ef36358d0",
            "b6368ebd-e5bc-46ad-8aa0-dacc4f0c0069",
            "68c671c1-e1d4-49ac-aa9d-3d59a73c09f5",
            "465964f6-1f50-40ce-85ac-885d8f0a580a",
            "7c471885-1e81-4007-beac-0ec0d60e8acc",
            "08a1bad2-7cd1-4bbf-af4e-923ea1e19f47",
            "fd2c5e9c-3542-41b8-be9d-66f2989502d7",
            "5983434f-87e5-4bc5-a7c7-9968be39b6a2",
            "4c610857-e3d7-4a3a-be6f-ed737f3d7adc",
            "2f330a5c-b91c-48b3-b7f5-0ad87991593f",
            "5c3c56c7-4168-4ded-b63a-1cc0dcbe52f1",
            "0b953066-8b52-4d7f-9ca9-ac572d33a62a",
            "c1a2b4ea-b481-469b-8650-424de65e885e",
            "d4c06da2-cd54-4b90-a324-88a1a4c96c1a",
            "75460ef6-0cf2-4b8e-b34d-8877d1b6236c",
            "aabd31a9-b66b-4ec5-ba25-1c190fc003f0",
            "f3f8f072-eaeb-40a4-9cb4-a633e3bd22af",
            "743f4dac-44aa-4138-8b3c-0d300e4b7593",
            "07b14299-f266-4960-b5ed-f35135893b31",
            "d07d31fc-6eba-4519-bf14-ca11f5de7286",
            "a70df39f-2cb1-4bcd-874d-083c0935c644",
            "e1d951f4-8843-4285-97e4-aa64f013b347",
            "a7b77ceb-2999-4d22-8f3e-4ef50c79cd59",
            "4d507094-afab-4cc3-9e90-bb00b6b9c771",
            "4b56a838-dc94-4b33-84d3-1bd45e98ba5e",
            "057776eb-31fb-4508-a810-bf1b1ab39e8c",
            "6b7768af-59c2-4a28-9daa-54c26bd88fef",
            "c7299b9c-415d-4087-a7d7-24a10d7809c7",
            "6aa3c214-1b92-4d4d-abae-61353fa4a03c",
            "f0506e95-f243-4fa9-83ce-b15512470960",
            "5f9b3ac1-438a-46ec-b2f4-4ce25e2f3da1",
            "469dd40a-1361-451e-aac0-81575284852f",
            "6b20ad15-e01e-4b14-9f16-d63819b72d29",
            "5cb685b9-da08-4904-a92d-f87905f5f2b4",
            "31ef4f50-61b7-4066-b6ce-706f788bf94d",
            "afd0fd4c-5836-4c32-bfe0-d45223a8fe19",
            "12b38948-3cd8-4268-8d1c-ff0001da6514",
            "98d086db-4617-435c-96f8-62d002e87170",
            "cce298dd-803d-42c7-8925-29709fdf6c7e",
            "8f14a771-b0c1-4f55-a38b-833ca90e06dd",
            "5531201a-3982-4c88-a652-2c34077689ad",
            "d92f11e4-2fbf-4595-80fb-e22997a88c7d",
            "7fe78ecf-c740-41c8-b16f-22925f4776d3",
            "6f7547e9-5bc8-4a89-83dc-e1e4ff610533",
            "f5746204-bc2b-4f44-aa29-33010015dbef",
            "07f604e8-b922-47f3-8497-941fcc1feee5",
            "06513aed-8504-438e-a46c-e0aff186703b",
            "592a803c-039e-4078-8a06-c879fdfe6439",
            "5d05966b-e61b-4d92-b5d2-b30a4a467723",
            "7e685d9c-c632-49b0-80bd-36ff8613f6d1",
            "d0331ec0-2435-4cc9-bf05-54159326b78a",
            "409a1638-d1b5-49c1-9d0d-1abe2cc42a4d",
            "ce496bd3-4cbd-42d2-8fb4-b20111f599d7",
            "936fe4c5-7e5d-4354-aa2d-37bd8f940688",
            "6b8ca2ec-d89a-41ce-8b76-8ef8d5a679a6",
            "ad0d69be-1eed-4ec5-b043-cebbcc7390f0",
            "22430acf-9f6d-485f-901d-07310b597dcc",
            "2b421917-bfb3-43c0-9cde-c32141214ef8",
            "80005213-4733-4604-8978-420a6df3a034",
            "2eef85f9-d71d-43d6-a73a-bcb89a77e821",
            "530446c9-692b-4cf7-a82a-52bca8df7353",
            "b9988d04-88dd-44d5-98ed-15a484ea54fd",
            "104afa29-3449-44a8-8aab-bca2cab7d002",
            "a580088f-2252-4821-bb83-cd28779e6814",
            "308561ea-7e80-485e-8d9d-4ac7658072f5",
            "89a76ec5-185e-40fc-8c9f-dc99e6a2763d",
            "62f2a94c-8d36-4f75-801e-6d71bd74b652",
            "642860a5-9efa-4df4-beb9-009fec082e39",
            "cb8aa06b-850e-4f77-8994-da6032b7700c",
            "d9bbe432-867d-4b9d-9261-5872d8e2dc95",
            "0c1d9d2a-1437-4ba5-86aa-3e690daef509",
            "dd971d83-ac1e-4828-ae3a-83af9f2b8790",
            "0e95f4d8-f379-411d-833e-41b321ec3ac2",
            "5865c371-11f2-4912-b663-aeaaebecbaf2",
            "2ade477b-3890-4ac1-bd18-af5cae962ee7",
            "3da2f813-4a01-46d4-b010-8c62c5fb64c9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8062503,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64266c7d-2842-4fb4-bdfc-d4adf6a1a779",
          "title": "sample test",
          "fullFile": "/usr/src/app/test/puppeteer-mocha-basic.js",
          "file": "/test/puppeteer-mocha-basic.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld",
              "fullTitle": "sample test helloworld",
              "timedOut": false,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\npage = await browser.newPage();\n// await page.goto('http://192.168.10.180:5500');\n// const [p_target_user] = await page.$x(`//p[contains(., '345')]`);\nawait page.close();",
              "err": {},
              "uuid": "33737d23-b2e5-4d2d-817a-9abba2a9d034",
              "parentUUID": "64266c7d-2842-4fb4-bdfc-d4adf6a1a779",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33737d23-b2e5-4d2d-817a-9abba2a9d034"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "output": "report.html"
      },
      "version": "6.2.0"
    }
  }
}