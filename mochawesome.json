{
  "stats": {
    "suites": 2,
    "tests": 497,
    "passes": 356,
    "pending": 0,
    "failures": 141,
    "start": "2023-01-10T13:10:47.868Z",
    "end": "2023-01-10T14:49:42.350Z",
    "duration": 5934482,
    "testsRegistered": 497,
    "passPercent": 71.6297786720322,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1d365657-dd8f-496e-97b9-fadb494f600e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3751e039-9b78-4aa7-b134-8941e17efa90",
          "title": "click test",
          "fullFile": "/usr/src/app/test/click-test.js",
          "file": "/test/click-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld javascript -> keung_2022 -> 0",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 8914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "50a23217-db6a-4f7e-9ad7-45e4a095daa9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 1",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 7741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ce7c6912-2d64-4657-8813-0e3852e46871",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 2",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 7770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ce7e9031-f903-4ca7-b089-9c662b492929",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 3",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 7645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2de22c29-83cc-49e6-912c-abeb23d6e87f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 4",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 7711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5774418e-0438-4e4f-a88e-490d97fe0e23",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 5",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 7582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3249bedc-22e6-42ee-b972-1fc71dd29232",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 6",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 7750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1b966e6f-6c67-4d89-8e28-6cff0bffdba0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 7",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 8017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ff85b55d-881a-4010-81db-af2debab4599",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> keung_2022 -> 8",
              "fullTitle": "click test helloworld javascript -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 8881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "823fd5ef-37b0-43dc-b2ae-a788705c8375",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 0",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 0",
              "timedOut": false,
              "duration": 7993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76a1c989-2017-42a7-8fcf-8dceea5e0a09",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 1",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 1",
              "timedOut": false,
              "duration": 7862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2cec3f42-72bb-4dee-a3d7-31b7148074ef",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 2",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 2",
              "timedOut": false,
              "duration": 7673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9f96467a-73b1-4629-8e8e-1946cb65d733",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 3",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 3",
              "timedOut": false,
              "duration": 7976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "10b15e77-84ef-4ea2-9295-d52c4bf610f4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 4",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 4",
              "timedOut": false,
              "duration": 8178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ddcdab8c-893f-4c13-b2b9-1415df2ee6ff",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 5",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 5",
              "timedOut": false,
              "duration": 7731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e784c3d4-1a66-477b-8d95-0b9f1d7e6f37",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 6",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 6",
              "timedOut": false,
              "duration": 8108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4890ab13-9189-4c5e-92e2-47cddcec63b6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 7",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 7",
              "timedOut": false,
              "duration": 7516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1089d6af-009e-44e3-8663-1c8b0de0d7b4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 8",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 8",
              "timedOut": false,
              "duration": 8416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc7cf3cc-aa04-445e-b7d8-e031a893c2da",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 9",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 9",
              "timedOut": false,
              "duration": 8290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a99e3fe0-b6cf-460c-8b00-b434ba11425d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 10",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 10",
              "timedOut": false,
              "duration": 7666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c33aabef-a3c9-45a9-99d1-1b430f638d6a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 11",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 11",
              "timedOut": false,
              "duration": 8872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68d826d7-a595-45d9-af48-e309d11d8c99",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 12",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 12",
              "timedOut": false,
              "duration": 7997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "81abbc3c-813b-49fa-aa83-119f8036888d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> memegod420 -> 13",
              "fullTitle": "click test helloworld javascript -> memegod420 -> 13",
              "timedOut": false,
              "duration": 8282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f070e83c-181b-4a0b-be76-21bbf82234c7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 0",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 7809,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "12a7d10b-f45f-4cca-bb60-6e5ca345b085",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 1",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 7655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b63fd0a5-fa49-4ee2-96c0-1e97578712a0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 2",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 7820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f86b40d-e850-442e-80ed-5c5fa187ca71",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 3",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 7913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e91fabd9-efd0-493e-838f-fc1c6c1dcd7e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 4",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 8012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1d3f7853-bebb-466e-853f-b53b6de44e70",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 5",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 6913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1376cd5a-4453-44a6-8ca9-695a65333971",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> kylema11201 -> 6",
              "fullTitle": "click test helloworld javascript -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 8269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e5c444d3-998d-43d9-9221-a243f741aef2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 7427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "af471e9d-7c75-4b41-a6a9-4686859f558f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 8076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ec7ed29-bf15-4013-9018-624ccc176f57",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 8011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4211afd0-b493-4f91-9803-bf29ddd4ca9f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 7473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6dc3e503-5bb1-4f46-9fd3-8080fdddb61e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 8068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d5a04ad5-e298-4753-ae56-291d1801f78c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 8833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e4950a85-6024-44f3-9a3c-58c7a9c4aadf",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 7904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34221754-25ad-448a-a09a-3139fb087b5c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 8155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "316b23b5-289d-4e69-9575-21be189acfc4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 7935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "009ba07e-a7f2-4414-ae87-b26c0b1b1127",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 7765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8f2b390f-c72b-4336-86e0-6ccd13f17fa8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 10",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 10",
              "timedOut": false,
              "duration": 8535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2daec129-838b-4846-bb5b-a428cdda0de3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 11",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 11",
              "timedOut": false,
              "duration": 8207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bc13d1ca-aef8-4150-b1d9-33162d4f4ea3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> easy_assignment_hk -> 12",
              "fullTitle": "click test helloworld javascript -> easy_assignment_hk -> 12",
              "timedOut": false,
              "duration": 8138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "32c9ace3-b70a-4263-9fc5-2b49c118c7e0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 7652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9d7cc79-9f9f-4b55-97bf-d01c8ac5dcfb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 7626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "83820695-24fa-4b5b-9433-4164658dc22d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 8651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5e8c7bfc-b542-46b0-a022-f25e45878c9d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 7764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46857f0d-7d27-4fce-8bc3-f53b5aa08652",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 7894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ab35448-5fab-49b7-8035-1a14e1c1d705",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 7119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b9ec921a-8e1a-4189-85a2-ead62ac8cda2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 8028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4416aa75-08c1-40d9-b64b-425dfc982932",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 7715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "211d0294-dc20-4440-93f0-964a95591ecd",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 7757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d0b84358-25d0-4616-b376-e990eafdfcc2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 7555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "758d857e-2e11-4453-8319-fe3a1cacb516",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 7569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4dd90511-b2d4-4da5-9ee1-01fd2e8eee5a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 8210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "632382ef-34e5-4edf-9f6a-f2a4ed423b59",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 8076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3032290d-e60c-47aa-acca-768cc9f0a464",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 13",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 13",
              "timedOut": false,
              "duration": 7607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1685f560-4688-47ec-b4e1-26293230ccce",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 14",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 14",
              "timedOut": false,
              "duration": 7999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c906f013-ce3e-4e3d-a5d7-6988554ecd21",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 15",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 15",
              "timedOut": false,
              "duration": 7611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "abe3b666-0425-4bff-8aac-29bfa8a73335",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> IT.godgunner -> 16",
              "fullTitle": "click test helloworld javascript -> IT.godgunner -> 16",
              "timedOut": false,
              "duration": 8516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "752915e2-d4f7-4bed-a6e9-91522ea6ff54",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 0",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 8146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f0c3a3bb-538d-447e-8c1e-937950fd0d9b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 1",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 8100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ce9ffa3-6623-42b3-ad7e-4482876d7c29",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 2",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 8019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2be2d0ef-ace6-41d1-97be-e44db3c05d66",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 3",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 8159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8f7f32c-93f8-4542-8932-a1e1a591801c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 4",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 7522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9b6f4fc-a6d3-431d-9f73-af75ed5dbb54",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 5",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 7892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "33e8b83f-89d0-4207-adfa-13e67a1d352b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 6",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 8079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db3f62ab-4110-45c8-8f40-287dea1fe762",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 7",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 8102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c7753c7f-a20d-48b6-a983-556bb9cc7330",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> codemyhomework -> 8",
              "fullTitle": "click test helloworld javascript -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 7749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "363c6f0d-b327-4923-a649-7760f7567e84",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 7814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f5f3260d-2a01-4eb1-97f7-acdc74f85865",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 8029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4bdcb25c-2448-4926-8244-8a502962d76f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 8530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "61a0c480-8978-4505-9962-1ba46030e463",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 8019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "55b362c3-77b8-4949-9a63-6df8bc89eb70",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 7892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9fcde6a3-49cb-48a8-a208-38360266f702",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 8031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e7e9ab71-3db9-440f-a957-a0078c93ce21",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 18317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d1570867-2fc8-4bc2-aad3-a94d6895002c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 11890,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1824444e-02e7-4844-a185-b83451bec90a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 8683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "95bbf8bf-756b-406c-80cf-ea58092fb6e0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 7992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4542cb76-61e0-4979-9bd6-af6f21c7adf0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 7832,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93da201b-6288-4970-8df7-a20579009988",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld javascript -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 8265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba608c26-7482-4529-b5cb-1db3f884cd7f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 7712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c581dc4d-955a-4ad2-93c3-74f1f23f28b0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 8373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "548f67e7-877f-4915-8a61-a77eaaca43ac",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 7910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5ad06f6d-5aab-460b-9902-c350a9541420",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 7812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ef126b41-fd68-43c4-aedb-dcb7770600eb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld javascript -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 8074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ca2d0d33-fca9-45e6-bc9a-8b237215ebb5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 0",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 7951,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "64a52b7c-6164-4e6f-9d6a-1d370009a190",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 1",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 8187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c402228d-1488-4235-9135-dd6755c64a9a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 2",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 7723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f5c9ee1-03b1-49c4-823d-378d7d6be7a9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 3",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 7368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ba8d9d20-272c-4226-a98e-39730cc1e8f4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 4",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0aed1a6d-a438-4c4e-a927-c4c60fa84f90",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 5",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 8172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dbbdaba5-5a1f-4d55-8ac9-d11886e86214",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 6",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 8615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "057f3b6b-18b7-45f9-b5ec-3f5f22e8d36c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> stocksamuel -> 7",
              "fullTitle": "click test helloworld javascript -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 8140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e05a7f4a-2b19-4c86-805c-f6561a49fe0b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 0",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 7910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "79dddb0a-b70f-4d07-b003-f8b16f98f9ef",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 1",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 7981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b668ccc-2663-4a19-beb6-a950647fc22b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 2",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 8032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "753c449c-22ad-4864-9531-77325f0968d9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 3",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 8300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b6b0fb1-5ba5-46ef-a60e-94a39372fe13",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> abcdqwr -> 4",
              "fullTitle": "click test helloworld javascript -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 7661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c6ba2c82-c735-4798-8812-8c92e381e883",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 0",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 8006,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "587b4b4f-4a6d-4b1a-94fb-cf3f6e0553d7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 1",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 8217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eee971dd-4e62-4eb5-8847-28c55a7efd80",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 2",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 7855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a4c5b32a-b361-4d63-9df9-36be983d7faa",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 3",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 8060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ab797a56-7b84-43b8-bb49-b0585a782430",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 4",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 7996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "224e545b-c612-47c0-8bdd-83fe8a0648d7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 5",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 7597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d435023f-1ed1-4711-a55b-d2f06982ae28",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 6",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 9091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f413f2f4-ff32-44d0-a9b9-9082091d8383",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 7",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 7668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0485068b-5da1-4ec1-9b5f-bf59fbe9e39e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 8",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 8125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3539904e-3239-4485-a19e-e994ad3f21ae",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 9",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 8231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1c0b7555-e14a-4cb2-af60-7367036c495d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 10",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 8024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a4404e7a-02d7-4b0a-990f-99f05c5e02e1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 11",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 7639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9095cf30-b4db-4a50-84e0-c17febf29e98",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 12",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 7914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc97c0a9-53d0-40af-a000-df758a34cdcb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> niotech_hk -> 13",
              "fullTitle": "click test helloworld javascript -> niotech_hk -> 13",
              "timedOut": false,
              "duration": 8081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0787dcd8-52af-4bdc-bc5e-3ceaed51f427",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 0",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 0",
              "timedOut": false,
              "duration": 8700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "683cbbbd-ea6b-45f2-8be6-19f57c05fc72",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 1",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 1",
              "timedOut": false,
              "duration": 7615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2ff1f0a7-0f89-4baf-9183-d24343efac4a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 2",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 2",
              "timedOut": false,
              "duration": 7935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "15728cae-1d9b-4229-bc29-d955e96abe2d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 3",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 3",
              "timedOut": false,
              "duration": 8111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6b0adf74-ff6c-44ea-998d-08bc035753a2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 4",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 4",
              "timedOut": false,
              "duration": 8129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dcf3b505-e309-4d93-8bae-983632a355a4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 5",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 5",
              "timedOut": false,
              "duration": 7622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "58eb7252-fe54-432b-8087-46a379aeed93",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 6",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 6",
              "timedOut": false,
              "duration": 7944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "121dd058-d77b-4900-b697-98239085bc41",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 7",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 7",
              "timedOut": false,
              "duration": 7332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "68fe4f5b-e2f7-46e5-81fb-fe07033ea937",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 8",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 8",
              "timedOut": false,
              "duration": 7559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5a56eed4-6c08-4d94-8d12-3dbc0b2f13a8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 9",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 9",
              "timedOut": false,
              "duration": 8168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a5ef0003-34fe-460c-ab3e-180d13a4e671",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 10",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 10",
              "timedOut": false,
              "duration": 7751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6fbe6834-ebff-40a7-af99-60d3d7d91c24",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 11",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 11",
              "timedOut": false,
              "duration": 7817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d135efc2-f25b-4cbd-91b4-df126be461e9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld javascript -> hopeubest -> 12",
              "fullTitle": "click test helloworld javascript -> hopeubest -> 12",
              "timedOut": false,
              "duration": 7325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "18d83a0b-e9d2-4ab9-b5f9-b1e81331263b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 0",
              "fullTitle": "click test helloworld python -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 15134,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "cbd5f1cd-ee41-4ee0-af94-6514de2da790",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 1",
              "fullTitle": "click test helloworld python -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 15231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d2e2f849-63cd-4b27-8b6a-49a030a384dc",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 2",
              "fullTitle": "click test helloworld python -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 14908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9b801d89-e082-4cc7-9990-e3f5d64ac8bd",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 3",
              "fullTitle": "click test helloworld python -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 14975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e972f71d-0f05-4890-bf62-acdc8dd9e3fa",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 4",
              "fullTitle": "click test helloworld python -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 15392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a5d72bb4-7daa-4bac-ab70-37f1d467b291",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 5",
              "fullTitle": "click test helloworld python -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 15236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "684f40d6-c474-4398-8271-f6841518ad88",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 6",
              "fullTitle": "click test helloworld python -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 15324,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "593a6673-93f8-474d-bdd8-bc114190bd67",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 7",
              "fullTitle": "click test helloworld python -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 15070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3995b39f-fc9a-4399-bfc8-24a55d8a2ae0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 8",
              "fullTitle": "click test helloworld python -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 15269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b3ef5e75-7aed-4431-a614-326fcdd13795",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 9",
              "fullTitle": "click test helloworld python -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 15649,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4d0fe92e-0400-4bb3-8ef3-bde60c7fd104",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 10",
              "fullTitle": "click test helloworld python -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 15700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "c035b3b3-fb2a-455e-8721-8add6ce16f12",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> keung_2022 -> 11",
              "fullTitle": "click test helloworld python -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 15707,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c83db93a-b343-4dcc-b99f-aaec1f843d6a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 0",
              "fullTitle": "click test helloworld python -> memegod420 -> 0",
              "timedOut": false,
              "duration": 8748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5c7f37e5-0cdd-436e-8e50-c150990741e3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 1",
              "fullTitle": "click test helloworld python -> memegod420 -> 1",
              "timedOut": false,
              "duration": 8658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d955564e-4482-4e83-b70f-7a1df478a3fe",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 2",
              "fullTitle": "click test helloworld python -> memegod420 -> 2",
              "timedOut": false,
              "duration": 8298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9958186a-6444-49b6-be55-64880d890e43",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 3",
              "fullTitle": "click test helloworld python -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2325e038-cc91-4d4f-a16e-bc90730cb8b0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 4",
              "fullTitle": "click test helloworld python -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "391eaa86-41d9-4137-be2c-1590c5250c87",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 5",
              "fullTitle": "click test helloworld python -> memegod420 -> 5",
              "timedOut": false,
              "duration": 9636,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a8f63a05-c011-439f-9975-041c993b1dd1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> memegod420 -> 6",
              "fullTitle": "click test helloworld python -> memegod420 -> 6",
              "timedOut": false,
              "duration": 9962,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f332a12-5326-4aff-9c96-7ced110ad45b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 0",
              "fullTitle": "click test helloworld python -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22977,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "291b0b25-b770-4ef5-ba49-992ba14a3ba7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 1",
              "fullTitle": "click test helloworld python -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 22472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a01b2d01-0ae7-4f01-95c5-52a95e0e6792",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 2",
              "fullTitle": "click test helloworld python -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "a159a690-d224-4597-aed0-3932c0787d6e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 3",
              "fullTitle": "click test helloworld python -> kylema11201 -> 3",
              "timedOut": false,
              "duration": 23442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5ce496dd-dc22-4a70-9025-33aad12897df",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 4",
              "fullTitle": "click test helloworld python -> kylema11201 -> 4",
              "timedOut": false,
              "duration": 23003,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "eb9c6cde-034b-4e51-9a72-ea037f3bc73e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 5",
              "fullTitle": "click test helloworld python -> kylema11201 -> 5",
              "timedOut": false,
              "duration": 23199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0c2817c4-9be9-4a87-ad1c-0edda9541e68",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 6",
              "fullTitle": "click test helloworld python -> kylema11201 -> 6",
              "timedOut": false,
              "duration": 22950,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "351fe875-e3b5-4b7e-ab35-c35a208462b6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 7",
              "fullTitle": "click test helloworld python -> kylema11201 -> 7",
              "timedOut": false,
              "duration": 23770,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "92cad702-7fe2-461b-b249-d3376073aa6e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 8",
              "fullTitle": "click test helloworld python -> kylema11201 -> 8",
              "timedOut": false,
              "duration": 23429,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "382d46f3-61e7-4c53-a229-17cdf9f10aff",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 9",
              "fullTitle": "click test helloworld python -> kylema11201 -> 9",
              "timedOut": false,
              "duration": 22449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f7e1f2d6-8763-490a-b8a7-e4651154c770",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 10",
              "fullTitle": "click test helloworld python -> kylema11201 -> 10",
              "timedOut": false,
              "duration": 22640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "62f06079-784f-415f-9d04-9e53f9152ce4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 11",
              "fullTitle": "click test helloworld python -> kylema11201 -> 11",
              "timedOut": false,
              "duration": 22594,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b6470845-95d6-4654-9064-0f30122cf4df",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 12",
              "fullTitle": "click test helloworld python -> kylema11201 -> 12",
              "timedOut": false,
              "duration": 23072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "54d10181-a654-4c3f-b643-54ea8f366113",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 13",
              "fullTitle": "click test helloworld python -> kylema11201 -> 13",
              "timedOut": false,
              "duration": 22496,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0821d9c2-6e74-47f4-90cf-16c28a8b60f1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 14",
              "fullTitle": "click test helloworld python -> kylema11201 -> 14",
              "timedOut": false,
              "duration": 23103,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d903cf39-b005-47f1-a7bb-b560bbb63517",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 15",
              "fullTitle": "click test helloworld python -> kylema11201 -> 15",
              "timedOut": false,
              "duration": 22738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b0363806-6a38-4d0b-91cb-62455bb67015",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> kylema11201 -> 16",
              "fullTitle": "click test helloworld python -> kylema11201 -> 16",
              "timedOut": false,
              "duration": 23065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "ac7ec447-cd3c-4bcb-94af-3ad49b72f10b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ca6bd30-d49c-4252-9b32-e3cb991b4034",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 9839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b8bd76d3-cd73-4f2b-b20b-ed797d0427b7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 9326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a6750a1a-7b3d-4915-b3b3-ac7f95a9c17c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 8144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "efd797db-db38-4c17-ae84-dff0fa98b2b2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 9220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e92e9bae-1ca5-4434-9cb3-3c994a8dc142",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 9010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a1accea9-1c2b-473d-b782-be30032125f3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 10326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "700bc43b-b77f-482e-ba92-b81e1389514a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 9811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6aa12511-3409-4698-9f80-ddfc89474042",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld python -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 8797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76c05573-e1b1-4281-987d-307cf2db3873",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 9521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "57ca5d23-edf3-4c61-a985-e49b60adaaa4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "23ec40b4-bfe7-452a-afdb-5878ce8f8c89",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b2ca8cb4-620c-4fa5-8734-f7c865b83ae4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 8660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e0d39d73-4cb1-46fa-91ac-eef24e70be13",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 10700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5892785a-a365-4b3a-aff9-4345fdaf66fe",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 9553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b72a35d8-81a7-40f7-a752-6258b60cf55d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld python -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 8666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5e6213ce-7777-411e-a6ea-96e111e96500",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 0",
              "fullTitle": "click test helloworld python -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 9337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bfc7cd31-8ff1-4af3-8023-b376d162295f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 1",
              "fullTitle": "click test helloworld python -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 8933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6a4850b6-5a09-45d7-96e5-825cffc2ac1a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 2",
              "fullTitle": "click test helloworld python -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 10029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f18b3051-17f1-40e1-9c6a-36b5ebe4df5a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 3",
              "fullTitle": "click test helloworld python -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 9156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ca3c3c18-ff10-4524-938f-9fd72d5ece82",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 4",
              "fullTitle": "click test helloworld python -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 9682,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9c87a56c-8c8e-41d4-b69b-8e5d2c83ba03",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> codemyhomework -> 5",
              "fullTitle": "click test helloworld python -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 10283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0799853d-f594-442a-abef-6cf53eb68b86",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 23086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b6465886-c5b7-41fd-be65-dae42212311b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 23845,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b30982cd-28f3-43a1-8342-bf851027125f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 23613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b53bc311-5172-4713-b4f0-a0791db0782f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 24724,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f6cdae13-30d6-4d11-a05f-00505e028f7f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 23417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "92eca8a1-1a92-4d7f-844d-0d4e45d4d980",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 23507,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e385d9ea-9446-4286-a70e-f60300f16eda",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 23167,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "ca785910-3292-4cda-bff0-35f61050abc0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 23940,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "61014f0c-a9f9-4337-b4fd-ff952a4c408c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 23848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "97bc8f9b-084f-4f58-a364-22b4e125a1e5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 23319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "96382cc9-f09e-4155-82c0-4e01d76e0627",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 23559,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "11e06965-40e7-488a-852d-08989ace9473",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 22960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9333a56c-c2b1-473b-a8e7-818a9860592b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 12",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 12",
              "timedOut": false,
              "duration": 23348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "739e771f-0aaf-4f33-8846-f0d7fd5348f7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 13",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 13",
              "timedOut": false,
              "duration": 23183,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "cbd9f790-b169-49a8-8961-8f00ed09fea0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 14",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 14",
              "timedOut": false,
              "duration": 23489,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "085c7dfc-9ab5-487e-ac8e-09f12a6a0135",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> shawnzhang1122 -> 15",
              "fullTitle": "click test helloworld python -> shawnzhang1122 -> 15",
              "timedOut": false,
              "duration": 15156,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f6239646-a83a-48b8-a65e-134f2058453a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 15442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "a09e807f-118e-4097-805c-a8ff7dfcb72b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 14920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d6a82502-91f5-472e-9cba-f42ffebe305a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld python -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 15308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c835b891-62ec-435d-a0d4-ad005c33accd",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 0",
              "fullTitle": "click test helloworld python -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "daa5b61b-d717-446e-a9d0-76c142b3c7ba",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 1",
              "fullTitle": "click test helloworld python -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "39a34337-1a51-456d-a639-d9c837f7816f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 2",
              "fullTitle": "click test helloworld python -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5038d9ee-6311-48b9-ba99-c851651d3894",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 3",
              "fullTitle": "click test helloworld python -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 9426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9c7c4504-25e7-4088-a25a-de3618e8a1e5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 4",
              "fullTitle": "click test helloworld python -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ace82550-2c80-4096-a103-6bece024c236",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 5",
              "fullTitle": "click test helloworld python -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ab7dffc6-a6ee-45f4-b22d-96495949508e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 6",
              "fullTitle": "click test helloworld python -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 8994,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "43bfd15d-0991-448b-a1fb-131e4a6c61e9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 7",
              "fullTitle": "click test helloworld python -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 8936,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a7e751b0-189a-4599-a25f-ebabb0875824",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 8",
              "fullTitle": "click test helloworld python -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 10926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "641ea02e-a1c4-4eaf-8ecd-8e7a59db1fa9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 9",
              "fullTitle": "click test helloworld python -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 8783,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dc0d9973-17e4-4562-95de-5dc747697cd2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 10",
              "fullTitle": "click test helloworld python -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 7952,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "31f71ec3-2ec5-4457-9056-710df93298ea",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 11",
              "fullTitle": "click test helloworld python -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 9733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7cf76bbb-e4d2-48f1-9708-40d134865fdf",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> stocksamuel -> 12",
              "fullTitle": "click test helloworld python -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 10881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c8babc13-8622-46de-b309-17a502fa19d6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 0",
              "fullTitle": "click test helloworld python -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 16831,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e6c146e6-b101-4d41-b5f1-cbedbc787eb6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 1",
              "fullTitle": "click test helloworld python -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 14872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1df0bad-6764-4ac2-90f8-5db14c18b04f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 2",
              "fullTitle": "click test helloworld python -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 15458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9d7ef8f4-13b6-4a37-b1be-321fc1845b10",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 3",
              "fullTitle": "click test helloworld python -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 15808,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c00a4930-396e-47ae-bdd3-c46e248b629e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 4",
              "fullTitle": "click test helloworld python -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 15405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d62ae9ce-bbf3-483c-83f0-7b60ae0b82ab",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 5",
              "fullTitle": "click test helloworld python -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 16135,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "68975bb3-2ca2-465f-ab46-c7bea23346e3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 6",
              "fullTitle": "click test helloworld python -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 16221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "61c64f04-82ea-407b-8a50-a84cc2d7aa6d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 7",
              "fullTitle": "click test helloworld python -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 15884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "87031b80-7ea3-426b-902d-11034e7bd478",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 8",
              "fullTitle": "click test helloworld python -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 15708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1359efdb-f755-44e0-a81f-9893fae844b6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 9",
              "fullTitle": "click test helloworld python -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 16040,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5fa9f843-293d-48a9-9eed-2e70fc2a223e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 10",
              "fullTitle": "click test helloworld python -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 15718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "91468910-d1f2-4ca9-ae13-e8813d7dca4b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 11",
              "fullTitle": "click test helloworld python -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 19404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "eee995ba-a008-4c28-bfbc-47a988543c40",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 12",
              "fullTitle": "click test helloworld python -> abcdqwr -> 12",
              "timedOut": false,
              "duration": 16633,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b37ef767-4041-4909-b760-cda5b214e162",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 13",
              "fullTitle": "click test helloworld python -> abcdqwr -> 13",
              "timedOut": false,
              "duration": 15925,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "afc15d5a-f499-4ceb-a747-fc409ffb7bae",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> abcdqwr -> 14",
              "fullTitle": "click test helloworld python -> abcdqwr -> 14",
              "timedOut": false,
              "duration": 15707,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "5fbf604e-0432-47b8-b67d-d2fe0e05dca7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 0",
              "fullTitle": "click test helloworld python -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 9459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b74dba4b-525b-4d59-8480-9e95a8f02b65",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 1",
              "fullTitle": "click test helloworld python -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 9269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d9b09259-4d25-4cc0-b975-abaa00e67504",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 2",
              "fullTitle": "click test helloworld python -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 10488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "979ae971-fc23-450a-b318-5956fc92de39",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 3",
              "fullTitle": "click test helloworld python -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 10582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "410f1f09-6864-4da7-a76c-f4f02bce300b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 4",
              "fullTitle": "click test helloworld python -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 8448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "32f12ace-0616-4cba-b935-166396237069",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 5",
              "fullTitle": "click test helloworld python -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 8515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b3f1a164-496c-4e63-a809-78713b5550f7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> niotech_hk -> 6",
              "fullTitle": "click test helloworld python -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 10791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "24d7a241-a9d2-40c6-9664-d93391417ef6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 0",
              "fullTitle": "click test helloworld python -> hopeubest -> 0",
              "timedOut": false,
              "duration": 9571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f36710c1-6fbb-4a07-90a3-f629f49b7d5f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 1",
              "fullTitle": "click test helloworld python -> hopeubest -> 1",
              "timedOut": false,
              "duration": 10762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "068a3163-b25a-474f-81bd-978f19cddbde",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 2",
              "fullTitle": "click test helloworld python -> hopeubest -> 2",
              "timedOut": false,
              "duration": 9667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5d6d871b-1911-4bde-9ece-497e75549ffe",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 3",
              "fullTitle": "click test helloworld python -> hopeubest -> 3",
              "timedOut": false,
              "duration": 8254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f1c2c7a4-3fa2-4f69-90ca-8aa3812ddf86",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 4",
              "fullTitle": "click test helloworld python -> hopeubest -> 4",
              "timedOut": false,
              "duration": 8670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a32df4c1-5e53-47aa-a305-8b13e3f13ffe",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 5",
              "fullTitle": "click test helloworld python -> hopeubest -> 5",
              "timedOut": false,
              "duration": 9633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6e4e65d9-a738-494a-9d51-4770eb844869",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 6",
              "fullTitle": "click test helloworld python -> hopeubest -> 6",
              "timedOut": false,
              "duration": 9501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "03ee13f1-509b-411c-bc18-d340ab0ce345",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 7",
              "fullTitle": "click test helloworld python -> hopeubest -> 7",
              "timedOut": false,
              "duration": 8851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a3d67ee6-4223-4f20-b177-854dbe065a23",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 8",
              "fullTitle": "click test helloworld python -> hopeubest -> 8",
              "timedOut": false,
              "duration": 9899,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "022891bb-80d1-46c9-bf15-9889fe2e7244",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 9",
              "fullTitle": "click test helloworld python -> hopeubest -> 9",
              "timedOut": false,
              "duration": 8413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f56183ee-5cfa-4c62-9468-4cadc406e622",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 10",
              "fullTitle": "click test helloworld python -> hopeubest -> 10",
              "timedOut": false,
              "duration": 9682,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "32ae23a9-6310-4d9c-b0f4-97ca6e260b5a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 11",
              "fullTitle": "click test helloworld python -> hopeubest -> 11",
              "timedOut": false,
              "duration": 9845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cb82218c-b2b5-4cf2-a829-3c1581de0fe5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 12",
              "fullTitle": "click test helloworld python -> hopeubest -> 12",
              "timedOut": false,
              "duration": 10221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2023a926-006b-44ae-a620-9ec9e627fc3e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 13",
              "fullTitle": "click test helloworld python -> hopeubest -> 13",
              "timedOut": false,
              "duration": 9995,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a1a4e63a-9002-42d3-bc74-3d7af07e2c95",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld python -> hopeubest -> 14",
              "fullTitle": "click test helloworld python -> hopeubest -> 14",
              "timedOut": false,
              "duration": 9393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "051d312d-63b2-4ee3-962b-c2884cccea52",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 0",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 10056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "51f8dfe8-8152-4f7e-83da-8b411342fe35",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 1",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 8591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a5272b77-4917-4708-880a-f06345dde55d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 2",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 9404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d22331d4-7f88-41ba-8b18-802dc32c7366",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 3",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 9929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "45a2f3af-0210-47e2-9e7a-ee71d570ff81",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 4",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 9755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "51765e55-f30c-4dcf-881f-d43e40568699",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 5",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 10324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78165c78-c283-4120-bf2a-96cd776c04aa",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 6",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 9692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "65640694-d51e-45b2-8674-dfe2137ed55f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 7",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 9575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b20d47dd-ae1d-4dc1-a97f-6c90d2224499",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 8",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 9170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "66381ff2-61ba-48fb-bea5-6d234349c18e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 9",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 10303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1011064b-3440-47f5-a373-3b83b5918335",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 10",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 9920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5e80135e-5f02-4598-a59d-4ccb54031cc8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 11",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 9682,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f530b7e1-c8da-4dfe-ae58-bc499b5f8171",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 12",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 9591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c00638f3-2c43-4f08-9db5-9a9a88f6b5d3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> keung_2022 -> 13",
              "fullTitle": "click test helloworld coding -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 9998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8a0f7e40-779b-4939-8297-17d5cf616d17",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 0",
              "fullTitle": "click test helloworld coding -> memegod420 -> 0",
              "timedOut": false,
              "duration": 10565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa3780ce-5ca8-48be-acf9-0927568a1f7e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 1",
              "fullTitle": "click test helloworld coding -> memegod420 -> 1",
              "timedOut": false,
              "duration": 9245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7a9bd955-0524-4b56-8a74-47df616ecbf7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 2",
              "fullTitle": "click test helloworld coding -> memegod420 -> 2",
              "timedOut": false,
              "duration": 9026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "df6a86de-dbd6-45ce-a6f1-94952076e49c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 3",
              "fullTitle": "click test helloworld coding -> memegod420 -> 3",
              "timedOut": false,
              "duration": 10075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fa990d4b-c62f-4b5b-ac32-be8aaa9545eb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 4",
              "fullTitle": "click test helloworld coding -> memegod420 -> 4",
              "timedOut": false,
              "duration": 9723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "10f0aa30-e1d2-4a65-abce-7299ebe0e197",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 5",
              "fullTitle": "click test helloworld coding -> memegod420 -> 5",
              "timedOut": false,
              "duration": 10040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07b43572-c95c-4c54-a56e-4e5fa43ae43b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 6",
              "fullTitle": "click test helloworld coding -> memegod420 -> 6",
              "timedOut": false,
              "duration": 9799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d1f9f792-54c6-4d5d-a5a9-519e6f3bfa1d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 7",
              "fullTitle": "click test helloworld coding -> memegod420 -> 7",
              "timedOut": false,
              "duration": 8732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "013058b6-b545-4a0a-8ba4-9ec78e1e440b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 8",
              "fullTitle": "click test helloworld coding -> memegod420 -> 8",
              "timedOut": false,
              "duration": 9862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a43fa7e2-6714-4ed2-8a85-d9b5cb0fa640",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 9",
              "fullTitle": "click test helloworld coding -> memegod420 -> 9",
              "timedOut": false,
              "duration": 9793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "603d0639-ebd2-4f52-9f10-d998cb339f7e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 10",
              "fullTitle": "click test helloworld coding -> memegod420 -> 10",
              "timedOut": false,
              "duration": 10024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "44dd92c6-147d-494c-bf09-f179488f1447",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 11",
              "fullTitle": "click test helloworld coding -> memegod420 -> 11",
              "timedOut": false,
              "duration": 10066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fa5ab8e7-5786-4b08-ab55-dc41e959587c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 12",
              "fullTitle": "click test helloworld coding -> memegod420 -> 12",
              "timedOut": false,
              "duration": 10354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ebf41af8-1ab3-40ea-a24d-b266d166e7f5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 13",
              "fullTitle": "click test helloworld coding -> memegod420 -> 13",
              "timedOut": false,
              "duration": 7859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "34ff183e-b389-41b9-aaa9-7c3e7b98413d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> memegod420 -> 14",
              "fullTitle": "click test helloworld coding -> memegod420 -> 14",
              "timedOut": false,
              "duration": 9971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e3f02f38-a13c-4527-ae3b-0dc04b8ef34c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 0",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 22900,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "866cd56a-5fd3-4e1c-badb-e9be7e8487df",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 1",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 22521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "37f0c3f9-9813-43d7-afc4-f7ee363912d6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> kylema11201 -> 2",
              "fullTitle": "click test helloworld coding -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "a2833511-ae07-4b30-b989-4c85865b5968",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9897,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "48cf7f4d-9e4e-4678-88f3-bb0a412d2e5d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b71154bd-9132-48da-bed2-3571738359c2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 10095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "02c0179c-7203-48f8-8111-b67b4bb2cf56",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 9856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8226a7aa-7ce4-428f-8f53-75aaa66d9938",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 8444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "36b95326-b06f-4213-a5da-bbcc297d7766",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 10035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c94db0b2-73e5-4ebe-a38a-92104ad96016",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 6",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 6",
              "timedOut": false,
              "duration": 9633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "08e90e4f-b169-4598-901c-a4b39e82bd88",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 7",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 7",
              "timedOut": false,
              "duration": 9452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b9189097-e9dc-45a3-a94b-ffe177b3c4ff",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 8",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 8",
              "timedOut": false,
              "duration": 9629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ab6a6a18-28f0-45b7-9560-bce3410c040a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> easy_assignment_hk -> 9",
              "fullTitle": "click test helloworld coding -> easy_assignment_hk -> 9",
              "timedOut": false,
              "duration": 8985,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0954c9e9-278a-4da0-a064-8370fde56f39",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 9598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2cfa2199-777d-454e-94d5-ffa1846f8b63",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 10298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "04ae8a7a-46ac-433f-b046-c73d1f2483fc",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 9998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7476bb3c-39c1-41db-a3ef-daf76b3eff87",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 9899,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7c44586a-e43e-4547-820e-25b23510598d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 9475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "11ec651f-5c45-4742-ad58-b7f31693b2c0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 7952,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "09c032bb-b659-44fc-b965-1674c189c165",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 9732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f16d6a0c-f37f-4e70-b1a9-e1e5f15c4520",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 7",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 7",
              "timedOut": false,
              "duration": 10530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "72b14d30-7e59-4734-a4fe-9b18cdd41a44",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 8",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 8",
              "timedOut": false,
              "duration": 10098,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f8ab5310-7cfe-4558-b42e-0448931dd1d2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 9",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 9",
              "timedOut": false,
              "duration": 9431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2e34b46a-2d38-493d-860a-4e0f82774e17",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 10",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 10",
              "timedOut": false,
              "duration": 8894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f451a1ff-42ea-44d6-8afa-9b7058c79f61",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 11",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 11",
              "timedOut": false,
              "duration": 10015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "050e0df7-8141-4ba2-959e-28628522ceb0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 12",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 12",
              "timedOut": false,
              "duration": 9169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "336e5ade-9612-4fab-9a7d-ac231d3cb35d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 13",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 13",
              "timedOut": false,
              "duration": 10106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2f7f9ebb-4e8f-4d29-9da5-90542ea7ae35",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 14",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 14",
              "timedOut": false,
              "duration": 9816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b6db3525-f1f4-4b40-b978-cf99c9eee1c6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> IT.godgunner -> 15",
              "fullTitle": "click test helloworld coding -> IT.godgunner -> 15",
              "timedOut": false,
              "duration": 9277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc05ca6a-99c6-45ff-bb7b-2011da78035d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 0",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 15055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9fc9a567-125e-41ad-a3fe-a9fd9be86be5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 1",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 15099,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "649a82df-5ff2-4ffb-8dcf-31e4ef90d19a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 2",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 14609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9f729f25-d3b0-494f-b86d-633005832f03",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 3",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 14912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0108faab-ffd4-445f-8b74-3d303074a6bb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 4",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 15086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2c7d4837-ad4c-4fc9-8b22-e862df868cd3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 5",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 15021,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "55df3f11-e81f-4368-ad8d-2e4370a58bd9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 6",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 15231,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0673ed0f-1325-41a7-b35b-884ef1ccfb67",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 7",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 14966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "579cc544-8a3a-4ece-a451-757e2f304786",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 8",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 15222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f90f7a7b-5fbd-480e-94d0-fff281fdaf5d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 9",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 15774,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "bcbef4cf-74d3-4a7b-9a91-027f4eea071a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 10",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 14915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "61a58b0b-4831-4c31-8b60-0e177d05b45e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> codemyhomework -> 11",
              "fullTitle": "click test helloworld coding -> codemyhomework -> 11",
              "timedOut": false,
              "duration": 14615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "717fe967-2590-41f4-95d1-ac16ea9722f3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 9911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "140f94e1-56fe-4264-9a69-5deea522dae5",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 10023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "974829b1-04d0-4f35-a997-c01d5106f5f8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld coding -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 9190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "253ded93-65d8-4957-ada0-a22eea72f390",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 8775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b9eb4098-2e31-472f-ad82-101e97a0eee8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 9536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "46f83def-8d28-4399-bd92-acb54ba513ea",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 9769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d6d9a069-dbb8-4c6d-88f8-17d7720bc417",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 8928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aca72cc6-2cef-4a75-b2ee-000b939dfd38",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 9875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5f792f17-a80d-454a-9b48-78372026d05e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 10070,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2e9085f0-0273-45de-acd9-933b505ab723",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 9686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cbef0c7b-6be9-4421-8cfb-7a7e47ca9207",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 9564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "462e0556-18bc-4e03-a51c-4f7a085a1225",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 9341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "5eebeb78-f82c-4dde-bb14-8574f9b52679",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 8580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "456c541c-9a42-499c-8b72-8c3e4353cdd3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 9787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b0deb153-2bff-442f-b969-4ec23e13d122",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 12278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "95c9fcea-c2fd-46d7-8fae-e6e191ec3ae3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> davidzhih16390 -> 12",
              "fullTitle": "click test helloworld coding -> davidzhih16390 -> 12",
              "timedOut": false,
              "duration": 9849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "ee35add2-c6e1-4365-ae47-11ccb26274a0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 0",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d4147e03-9cdb-47fc-bc49-334a27ad293e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 1",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 8539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "232edc33-fffe-4412-a4ea-b2e6fed86659",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 2",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9a973c0a-ad7e-40d8-bb42-5052f5d2fc55",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 3",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 3",
              "timedOut": false,
              "duration": 8668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "73b8923c-0879-49ef-bb6d-5e6068f31b2c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 4",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 4",
              "timedOut": false,
              "duration": 9277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "630c5bbf-5112-4de2-8660-accf46ead1ee",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 5",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 5",
              "timedOut": false,
              "duration": 9485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1ef552b5-40d2-4dbb-afc7-0ccc3761b9d6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 6",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 6",
              "timedOut": false,
              "duration": 9565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "fc89219e-b355-4bff-93c2-49d9e71c8858",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 7",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 7",
              "timedOut": false,
              "duration": 9967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "88846ac1-0fdd-4e2e-8d5c-0781c31b1b03",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 8",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 8",
              "timedOut": false,
              "duration": 9492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "96183844-f638-4c71-b6d8-db300614cbaf",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 9",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 9",
              "timedOut": false,
              "duration": 9934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "984f17df-6d0d-4aea-9251-00a3bce88919",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 10",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 10",
              "timedOut": false,
              "duration": 10081,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "53d511d7-4d5c-4760-8eb2-93d4e8f1a293",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 11",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 11",
              "timedOut": false,
              "duration": 9422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dded73df-ba92-408b-ba56-d9d62e547fe9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> stocksamuel -> 12",
              "fullTitle": "click test helloworld coding -> stocksamuel -> 12",
              "timedOut": false,
              "duration": 8473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b6a5a42b-faeb-40c7-9848-72a76d5dac88",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 0",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 9462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9acf273c-f5d4-4aca-b9cc-ebde6156cbdf",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 1",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 9038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0ea4f199-2a38-4162-bea6-4f3a50f494ee",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 2",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 10044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "79ce024e-1cab-471b-9537-cc88478c7df3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 3",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 9732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d1f3b63b-70d9-4e29-a87e-60d527165beb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 4",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 9905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bbf2e14d-1bc2-41ff-9449-e7b32a56a544",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 5",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 9109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "67828d27-1bf0-4b9e-9806-c0e51d76db9b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> abcdqwr -> 6",
              "fullTitle": "click test helloworld coding -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 9276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2371ca09-2ace-410c-a931-deca2bc90bc1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 0",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 16121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8b300f00-9d00-4106-aa7e-4fddf4971a32",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 1",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 15677,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "8ce5056c-8797-4579-960e-f720f62b9d54",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 2",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 16141,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a9861700-7586-45c3-aace-8b5b32aecad7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 3",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 15990,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "52bb43b2-646b-4a2f-be63-41eb14fdc218",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 4",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 15049,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "9961d77b-5373-45e1-bb38-e48a3354b697",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 5",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 15958,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9c98c2af-d72e-4e01-ac9c-e04b030da88a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 6",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 14598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b1e51542-119e-4d83-a6b4-de5b7fe7c89b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 7",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 15028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "0e6d2a1e-7cd6-49a1-9590-fcaa7aa0a051",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 8",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 15642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e42ecac2-534a-4a17-a6e5-ca6726e171e6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 9",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 9",
              "timedOut": false,
              "duration": 15741,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c84c31f9-1eee-46f0-867d-c60af0d1b484",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 10",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 10",
              "timedOut": false,
              "duration": 15890,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "52693872-7100-4471-bb1b-6c50a945096a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 11",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 11",
              "timedOut": false,
              "duration": 15802,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "07d4c896-e213-4514-a60d-5540498792fb",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 12",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 12",
              "timedOut": false,
              "duration": 15026,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5abc2d87-3552-4218-9da6-072b6cde24f1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> niotech_hk -> 13",
              "fullTitle": "click test helloworld coding -> niotech_hk -> 13",
              "timedOut": false,
              "duration": 15479,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8f709562-b46b-455a-9f33-bf38201f2be9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 0",
              "fullTitle": "click test helloworld coding -> hopeubest -> 0",
              "timedOut": false,
              "duration": 9474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e8d9c059-ba24-4fa1-852f-244ddf0ce420",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 1",
              "fullTitle": "click test helloworld coding -> hopeubest -> 1",
              "timedOut": false,
              "duration": 9983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eaafbbcd-a11a-4f0f-8baf-9b66339bfb51",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 2",
              "fullTitle": "click test helloworld coding -> hopeubest -> 2",
              "timedOut": false,
              "duration": 8928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6def98f6-309f-4d21-a94d-f39ce8ada341",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 3",
              "fullTitle": "click test helloworld coding -> hopeubest -> 3",
              "timedOut": false,
              "duration": 10106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e1a5bade-59a5-4607-8db9-2279a231c178",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 4",
              "fullTitle": "click test helloworld coding -> hopeubest -> 4",
              "timedOut": false,
              "duration": 11577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3a22cdda-e4d7-4b2f-9e28-d24a3d9c8ad8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 5",
              "fullTitle": "click test helloworld coding -> hopeubest -> 5",
              "timedOut": false,
              "duration": 9701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "91ee3082-dfde-480d-9977-90cd247c220d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 6",
              "fullTitle": "click test helloworld coding -> hopeubest -> 6",
              "timedOut": false,
              "duration": 8506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "be408e65-42a1-4db2-9f72-590fb286ad80",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 7",
              "fullTitle": "click test helloworld coding -> hopeubest -> 7",
              "timedOut": false,
              "duration": 9221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cc11c898-3b16-4b46-ab0a-2cb244665d43",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld coding -> hopeubest -> 8",
              "fullTitle": "click test helloworld coding -> hopeubest -> 8",
              "timedOut": false,
              "duration": 9244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "e40f4ba5-bdce-4bac-a893-f62ac9fc24f9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 0",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 0",
              "timedOut": false,
              "duration": 10270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "375dc3ea-6142-4dd7-8e98-d8eb2fc61f86",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 1",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 1",
              "timedOut": false,
              "duration": 8790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "83eb2fa2-41c0-431b-a4ba-db3aba277f04",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 2",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 2",
              "timedOut": false,
              "duration": 10128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f033a2d5-2209-40d0-ad4f-17c63ea70baa",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 3",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 3",
              "timedOut": false,
              "duration": 10320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "4b21bab9-ef58-4b22-826f-a21cd1e25bac",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 4",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 4",
              "timedOut": false,
              "duration": 9683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "aa1faab2-3873-46c1-abcb-2ba99589c784",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 5",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 5",
              "timedOut": false,
              "duration": 9086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7319837b-9a6e-4b27-b5b7-cbe9e484b58b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 6",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 6",
              "timedOut": false,
              "duration": 9597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c76047cb-c0d1-415b-8788-9ec06379aeb0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 7",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 7",
              "timedOut": false,
              "duration": 9775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "3414d143-21ac-4257-966d-814ed0def85c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 8",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 8",
              "timedOut": false,
              "duration": 9094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db5f747d-d068-4163-a20b-0b7f8e96de6d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 9",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 9",
              "timedOut": false,
              "duration": 9683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "452205dc-02c1-4f64-a338-b3ff368e9d54",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 10",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 10",
              "timedOut": false,
              "duration": 10028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9e7cf426-7619-43ed-8646-6856b432adbf",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 11",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 11",
              "timedOut": false,
              "duration": 9372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "db2220e2-a6bf-4a7a-a190-48f1283306d6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 12",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 12",
              "timedOut": false,
              "duration": 9506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "93c16c1f-a559-49ad-bd0b-2084893bb819",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> keung_2022 -> 13",
              "fullTitle": "click test helloworld programming -> keung_2022 -> 13",
              "timedOut": false,
              "duration": 10106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "18dd6e6c-636a-402f-8677-7b1f45e05813",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 0",
              "fullTitle": "click test helloworld programming -> memegod420 -> 0",
              "timedOut": false,
              "duration": 8877,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "99d26ab7-0bdc-40e7-8a9e-3634d4a78780",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 1",
              "fullTitle": "click test helloworld programming -> memegod420 -> 1",
              "timedOut": false,
              "duration": 10342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "949faecf-9b85-4a52-a100-d1806e3ce657",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 2",
              "fullTitle": "click test helloworld programming -> memegod420 -> 2",
              "timedOut": false,
              "duration": 10269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "6ac8bc69-df24-497e-9066-63c269ce4989",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 3",
              "fullTitle": "click test helloworld programming -> memegod420 -> 3",
              "timedOut": false,
              "duration": 9612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a3fad8e9-dfeb-47e6-8122-0d2125f3a460",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 4",
              "fullTitle": "click test helloworld programming -> memegod420 -> 4",
              "timedOut": false,
              "duration": 10138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "bf219fd9-5ccb-475b-8eae-2af2a36d8e67",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 5",
              "fullTitle": "click test helloworld programming -> memegod420 -> 5",
              "timedOut": false,
              "duration": 8992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7d9cf813-1903-41a5-85d7-0b8e724170de",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 6",
              "fullTitle": "click test helloworld programming -> memegod420 -> 6",
              "timedOut": false,
              "duration": 10827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "59f784d7-495e-4ae5-b27e-eee801949967",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 7",
              "fullTitle": "click test helloworld programming -> memegod420 -> 7",
              "timedOut": false,
              "duration": 9505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "07542628-a102-4f78-9692-014f6e5a762b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 8",
              "fullTitle": "click test helloworld programming -> memegod420 -> 8",
              "timedOut": false,
              "duration": 8665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "377cc5c0-ec0a-4ced-817b-8b19acbf5799",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 9",
              "fullTitle": "click test helloworld programming -> memegod420 -> 9",
              "timedOut": false,
              "duration": 9795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "b0bcc8c1-07b9-4fa9-8f51-c2ee558cec72",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 10",
              "fullTitle": "click test helloworld programming -> memegod420 -> 10",
              "timedOut": false,
              "duration": 9356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "7ebfd9d2-96a6-4229-acc5-66b5c76ae897",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 11",
              "fullTitle": "click test helloworld programming -> memegod420 -> 11",
              "timedOut": false,
              "duration": 10207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "9d2039ba-f5f9-4069-9c92-f40520c45dda",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 12",
              "fullTitle": "click test helloworld programming -> memegod420 -> 12",
              "timedOut": false,
              "duration": 9447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a95717cf-ad38-49a5-b463-b983927ab00c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 13",
              "fullTitle": "click test helloworld programming -> memegod420 -> 13",
              "timedOut": false,
              "duration": 10514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d03dc4d9-b31a-46bd-bc88-d5036b18afbc",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 14",
              "fullTitle": "click test helloworld programming -> memegod420 -> 14",
              "timedOut": false,
              "duration": 9494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "51830bce-55e4-4ea0-923d-923266f36510",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 15",
              "fullTitle": "click test helloworld programming -> memegod420 -> 15",
              "timedOut": false,
              "duration": 10265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c7135c08-c6bb-4bfb-9ad1-37d8c2e93f2e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> memegod420 -> 16",
              "fullTitle": "click test helloworld programming -> memegod420 -> 16",
              "timedOut": false,
              "duration": 10072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "cbbeb730-8be9-4a84-843a-9fcbbe677c27",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 0",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 0",
              "timedOut": false,
              "duration": 21882,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "22a67ed1-1a78-4eda-848d-eb335b67390e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 1",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 1",
              "timedOut": false,
              "duration": 23954,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "80c578c9-0aac-4aec-8eed-7bf2172e6751",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> kylema11201 -> 2",
              "fullTitle": "click test helloworld programming -> kylema11201 -> 2",
              "timedOut": false,
              "duration": 22604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e2e25d6f-b7ee-4dd7-a804-d6be633158b7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 0",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 0",
              "timedOut": false,
              "duration": 9485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2c79c4c7-5ef8-413a-a46b-24f459e81808",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 1",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 1",
              "timedOut": false,
              "duration": 9581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d6276203-1fc2-4b4f-a869-c9849b274cf8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 2",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 2",
              "timedOut": false,
              "duration": 9267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "c6406b6e-e5dd-4675-9f75-d6343d64cd85",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 3",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 3",
              "timedOut": false,
              "duration": 9075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "a2cc9c45-f91a-4dda-a028-e093f2ea90c9",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 4",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 4",
              "timedOut": false,
              "duration": 10284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "eea805b2-14e3-49e1-bbd9-d8e08fb3294e",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> easy_assignment_hk -> 5",
              "fullTitle": "click test helloworld programming -> easy_assignment_hk -> 5",
              "timedOut": false,
              "duration": 10523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "f27afa26-061b-4bda-9ded-df4f5bfada82",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 0",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 0",
              "timedOut": false,
              "duration": 16276,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "924c982c-d61d-4857-bb83-5c384c960955",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 1",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 1",
              "timedOut": false,
              "duration": 15610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f7ba7041-d534-4b08-b691-55b8098aa4e4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 2",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 2",
              "timedOut": false,
              "duration": 15241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4d1a5b6f-37a6-4aaa-8130-f180806444b4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 3",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 3",
              "timedOut": false,
              "duration": 15914,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3e0cf7e5-3b0c-4a0a-b43f-e7e147b24351",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 4",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 4",
              "timedOut": false,
              "duration": 15671,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5d3f0426-8322-4a03-b94c-493892c13dfc",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 5",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 5",
              "timedOut": false,
              "duration": 15676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "96de733b-7fc0-486c-a860-384732d19475",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> IT.godgunner -> 6",
              "fullTitle": "click test helloworld programming -> IT.godgunner -> 6",
              "timedOut": false,
              "duration": 14969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "8db952b9-0376-4967-8a43-5f0ec5cc1bd3",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 0",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 0",
              "timedOut": false,
              "duration": 14769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "273c280b-e04e-4eea-812d-5bdf2d3c1b19",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 1",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 1",
              "timedOut": false,
              "duration": 14652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "03029c08-82fb-43ef-bc37-8d98583f6d32",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 2",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 2",
              "timedOut": false,
              "duration": 14901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "1e719e4e-96da-40af-9688-c8a46694bb9c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 3",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 3",
              "timedOut": false,
              "duration": 14795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "2554539d-38b0-4ccb-8d9c-ce7a9f097440",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 4",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 4",
              "timedOut": false,
              "duration": 17302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "92447ee7-7010-41ac-8b11-ba7a2dc322cd",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 5",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 5",
              "timedOut": false,
              "duration": 14409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "04719db8-11d7-4b69-b233-afa62f1f628a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 6",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 6",
              "timedOut": false,
              "duration": 15809,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "c4e3e3fc-112e-4980-a95a-6ac2cf423f5a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 7",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 7",
              "timedOut": false,
              "duration": 18206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "8e7b7525-37ef-4935-ac1b-f02df820a92b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 8",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 8",
              "timedOut": false,
              "duration": 14864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d583af3e-348b-4e53-97dd-a422934a0ca8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 9",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 9",
              "timedOut": false,
              "duration": 15517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "1d2bb562-371d-4632-9abf-e0b0e1395232",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> codemyhomework -> 10",
              "fullTitle": "click test helloworld programming -> codemyhomework -> 10",
              "timedOut": false,
              "duration": 14895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "dd65c7b7-1374-457e-9945-9a92eabd0471",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 0",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 0",
              "timedOut": false,
              "duration": 23727,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "36837059-5909-43e3-9cb9-5424a43abe7f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 1",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 1",
              "timedOut": false,
              "duration": 22308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "e2a4d2a5-3d68-46e3-88e2-77c7aae7f709",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 2",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 2",
              "timedOut": false,
              "duration": 25656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "a2ba2edd-cd97-4d69-8f66-1a6b73307095",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 3",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 3",
              "timedOut": false,
              "duration": 15564,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "353a0a5d-9b94-44f7-8521-00ebddd83fd4",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 4",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 4",
              "timedOut": false,
              "duration": 23063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "64773a7f-ade9-488a-96e4-4a1033a14763",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 5",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 5",
              "timedOut": false,
              "duration": 22950,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b4f87f3d-08fe-4c3a-9aba-58e7632eb015",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 6",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 6",
              "timedOut": false,
              "duration": 24012,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b54ad874-c12d-4c66-b8b0-c3d0dd31867c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 7",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 7",
              "timedOut": false,
              "duration": 23641,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c22f92aa-c6b3-4650-b052-d421d73545b0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 8",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 8",
              "timedOut": false,
              "duration": 25102,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "534ada0e-d61c-462c-bda4-b3dc428229a1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 9",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 9",
              "timedOut": false,
              "duration": 23259,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "5cb2e138-bf50-45dd-877f-1090608c2f98",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 10",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 10",
              "timedOut": false,
              "duration": 23346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d5c39d38-a8f2-4352-b0db-a978143a6697",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> shawnzhang1122 -> 11",
              "fullTitle": "click test helloworld programming -> shawnzhang1122 -> 11",
              "timedOut": false,
              "duration": 23519,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b8963894-3f51-4c1b-a64a-1396ac8b9b0c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 0",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 0",
              "timedOut": false,
              "duration": 15321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "b4e0cd7d-c3d0-43a2-84be-3bafa7ce397a",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 1",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 1",
              "timedOut": false,
              "duration": 15397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "1d1286e4-2d65-4e45-8505-e93b7be08d71",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 2",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 2",
              "timedOut": false,
              "duration": 15665,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "98a3ba37-5610-4bc9-abc0-63bb6e6b59f6",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 3",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 3",
              "timedOut": false,
              "duration": 15618,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "0db6124f-b387-42fc-997d-c1589f1e2023",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 4",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 4",
              "timedOut": false,
              "duration": 15139,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3c8ffc09-c4ee-4642-9c42-46758e598288",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 5",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 5",
              "timedOut": false,
              "duration": 14756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "76b78bb0-7898-4b54-a8ae-8527ead1fa6d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 6",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 6",
              "timedOut": false,
              "duration": 14963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "78473961-b1a4-43d0-bdfb-b1f7905b8598",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 7",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 7",
              "timedOut": false,
              "duration": 15473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "7412139f-58cd-4261-b8e5-39416bb38d36",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 8",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 8",
              "timedOut": false,
              "duration": 15428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "87e1570e-82cd-41f5-90a3-7dac9a4f9cfa",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 9",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 9",
              "timedOut": false,
              "duration": 15171,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "fe8fe8b4-eae2-4cd3-a1bb-87f180e7146d",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 10",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 10",
              "timedOut": false,
              "duration": 15261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "2804931e-b446-4fcc-8919-bb3aa3e62e82",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> davidzhih16390 -> 11",
              "fullTitle": "click test helloworld programming -> davidzhih16390 -> 11",
              "timedOut": false,
              "duration": 15096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "268a8027-5945-44bd-98c8-4cde06e1801f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 0",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 0",
              "timedOut": false,
              "duration": 9321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "66874788-101a-4fed-afac-326dc5626b45",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 1",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 1",
              "timedOut": false,
              "duration": 9667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "d2562bd1-1b44-45cc-925b-4afcd2a189ea",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> stocksamuel -> 2",
              "fullTitle": "click test helloworld programming -> stocksamuel -> 2",
              "timedOut": false,
              "duration": 9091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "164c59ab-416b-4ba4-a20c-e3a4b3d3dc0f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 0",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 0",
              "timedOut": false,
              "duration": 15157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f0f26736-f1fa-4efb-aa72-9351b0a45b67",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 1",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 1",
              "timedOut": false,
              "duration": 15688,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "e79d8fbc-0d0a-482c-b4c3-b71f51c71ec0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 2",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 2",
              "timedOut": false,
              "duration": 15800,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f820c71c-369e-4df4-a56c-213cf6d0ebd7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 3",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 3",
              "timedOut": false,
              "duration": 15947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d92c8476-c2df-490a-b626-f6debb0a4a2f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 4",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 4",
              "timedOut": false,
              "duration": 15632,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "f9f85340-46c8-4620-922e-3eacb25aef02",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 5",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 5",
              "timedOut": false,
              "duration": 16686,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "3c846046-4840-4eff-beb6-828c8c2fa0b7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 6",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 6",
              "timedOut": false,
              "duration": 16428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a48cd8ce-569b-4ee6-bc5f-df03977c9d81",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 7",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 7",
              "timedOut": false,
              "duration": 15727,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "897c7434-1a0a-4c05-90a5-6d2d0e54fc30",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 8",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 8",
              "timedOut": false,
              "duration": 15016,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error (Target.closeTarget): Target closed.",
                "estack": "Error: Protocol error (Target.closeTarget): Target closed.\n    at /usr/src/app/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:71:63\n    at new Promise (<anonymous>)\n    at Connection.send (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Connection.js:70:16)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1199:44)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "44f7c82f-6ce8-4b7a-9f28-57950a432fb2",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 9",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 9",
              "timedOut": false,
              "duration": 15720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "55728eb3-2d8d-4adf-b2e0-e089cf3c3105",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 10",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 10",
              "timedOut": false,
              "duration": 15765,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "f4255459-5497-4eba-a5ca-683de596d2da",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> abcdqwr -> 11",
              "fullTitle": "click test helloworld programming -> abcdqwr -> 11",
              "timedOut": false,
              "duration": 15300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "9be17de1-a340-40e7-88f4-90e8a6388fe0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 0",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 0",
              "timedOut": false,
              "duration": 14622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "66c247c5-b7e2-468b-a1f3-21a0fac36576",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 1",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 1",
              "timedOut": false,
              "duration": 16185,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "b12b2dd3-1890-4e07-98aa-c1871857672f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 2",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 2",
              "timedOut": false,
              "duration": 15916,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "486797c0-2c7c-4bdd-89ef-f3e20c938af0",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 3",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 3",
              "timedOut": false,
              "duration": 15278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "1538d4c7-8fc0-4260-be8e-60eda962e7e7",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 4",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 4",
              "timedOut": false,
              "duration": 15304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d193289e-b161-48b9-833b-d7326f08cf24",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 5",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 5",
              "timedOut": false,
              "duration": 15792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "2071a8ef-8295-4666-a3dd-b45c73c1ac28",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 6",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 6",
              "timedOut": false,
              "duration": 15536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a7f07131-2c81-4e0c-8818-517a31b4d039",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 7",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 7",
              "timedOut": false,
              "duration": 14644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {},
              "uuid": "50e987a2-f1a7-4650-9c72-04c41edae90c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> niotech_hk -> 8",
              "fullTitle": "click test helloworld programming -> niotech_hk -> 8",
              "timedOut": false,
              "duration": 15725,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "a52d9853-1726-438e-ad80-6d80f04ecca8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 0",
              "fullTitle": "click test helloworld programming -> hopeubest -> 0",
              "timedOut": false,
              "duration": 16032,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "d61b02a2-b450-4bab-bcaf-eac22fc95dff",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 1",
              "fullTitle": "click test helloworld programming -> hopeubest -> 1",
              "timedOut": false,
              "duration": 15719,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "c0c86c36-ade9-4707-accd-9f8b1b1da620",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 2",
              "fullTitle": "click test helloworld programming -> hopeubest -> 2",
              "timedOut": false,
              "duration": 16461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "109df07d-1302-43f1-be58-7d3e0ff18c6b",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 3",
              "fullTitle": "click test helloworld programming -> hopeubest -> 3",
              "timedOut": false,
              "duration": 15687,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "d20c2939-503c-451c-bcb4-79e46cad83d8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 4",
              "fullTitle": "click test helloworld programming -> hopeubest -> 4",
              "timedOut": false,
              "duration": 15715,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "82c7f6b4-4f36-4472-87a6-422bd1e01b0f",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 5",
              "fullTitle": "click test helloworld programming -> hopeubest -> 5",
              "timedOut": false,
              "duration": 15841,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "4edb6942-9798-4ca6-b526-6c97862b01f1",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 6",
              "fullTitle": "click test helloworld programming -> hopeubest -> 6",
              "timedOut": false,
              "duration": 16550,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)",
                "diff": null
              },
              "uuid": "17318596-8ab0-47d0-8f98-bdad7ea00cc8",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "helloworld programming -> hopeubest -> 7",
              "fullTitle": "click test helloworld programming -> hopeubest -> 7",
              "timedOut": false,
              "duration": 15898,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(180 * 1000);\nconst filename = `${keyword}-${user}-${i}`;\nconst video_file = `${video_path}/${filename}.mp4`;\nconst screenshot_file = `${screenshot_path}/${filename}.jpg`;\nconst mochawesome_report_path = 'mochawesome-report';\nconsole.log({ i, keyword, user, video_file, screenshot_file, mochawesome_report_path });\nasync function readAdList() {\n  console.log('loading ad blocker host');\n  let temp = await fs.readFileSync('./ad_list/ad_list.json', { encoding: 'utf-8' });\n  let ad_list_json = JSON.parse(temp);\n  return ad_list_json;\n}\nconst browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\nlet ad_list_json = await readAdList();\npage = await browser.newPage();\nconst recorder = new PuppeteerScreenRecorder(page);\nawait page.setViewport({ width: 1920, height: 1080 });\nawait recorder.start(`${video_file}`, Config);\n// await page.setDefaultNavigationTimeout(0);\npage.on('request', request => {\n  let incoming_url = request.url();\n  // console.log({ incoming_url });\n  let found = false;\n  for (var i = 0; i < ad_list_json.length; i++) {\n    if (incoming_url.search(ad_list_json[i]) > 0) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    request.abort();\n  } else {\n    request.continue();\n  }\n});\n// await page.goto(`http://192.168.10.180:5500/app/site/index.html`, {\n//   waitUntil: ['load', 'networkidle0', 'networkidle2'],\n// });\n// const p_target_user = await page.$x(`//p[contains(., '345')]`);\n// const textContent = await p_target_user[0].getProperty('textContent' );\n// const textContentValue = textContent._remoteObject.value;\n// console.log(textContentValue);\nawait page.goto(`https://www.carousell.com.hk/search/${keyword}?price_end=99`, {\n  waitUntil: ['networkidle0'],\n});\nconst [p_target_user] = await page.$x(`//p[contains(., '${user}')]`);\n// console.log(p_target_user.length)\nif (p_target_user) {\n  const textContent = await p_target_user.getProperty('textContent');\n  const textContentValue = textContent._remoteObject.value;\n  var spotlightFound = textContentValue.search('spotlight') > 0 || textContentValue.search('熱門推廣') > 0;\n  const parent_node_1 = await p_target_user.getProperty('parentNode');\n  const parent_node_2 = await parent_node_1.getProperty('parentNode');\n  const parent_node_3 = await parent_node_2.getProperty('parentNode');\n  await parent_node_3.click();\n  console.log('user clicked, cold down')\n  await page.waitForTimeout(5 * 1000);\n  if (spotlightFound) {\n    console.log('target user clicked, cool down');\n  } else {\n    console.log('user not using spotlight');\n  }\n} else {\n  console.log('cannot find target user, wait');\n  await page.waitForTimeout(1 * 1000);\n}\nawait page.screenshot({ path: `${screenshot_file}` });\nawait recorder.stop();\nawait page.close();\nawait browser.close();\nconsole.log('done');\ni += 1;",
              "err": {
                "message": "Error: Protocol error: Connection closed. Most likely the page has been closed.",
                "estack": "Error: Protocol error: Connection closed. Most likely the page has been closed.\n    at Object.assert (node_modules/puppeteer-core/lib/cjs/puppeteer/common/assert.js:26:15)\n    at Page.close (node_modules/puppeteer-core/lib/cjs/puppeteer/common/Page.js:1193:21)\n    at Context.<anonymous> (test/click-test.js:140:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "0a0cb97a-e9a9-402d-b88c-8c3a229e856c",
              "parentUUID": "3751e039-9b78-4aa7-b134-8941e17efa90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50a23217-db6a-4f7e-9ad7-45e4a095daa9",
            "ce7c6912-2d64-4657-8813-0e3852e46871",
            "ce7e9031-f903-4ca7-b089-9c662b492929",
            "2de22c29-83cc-49e6-912c-abeb23d6e87f",
            "5774418e-0438-4e4f-a88e-490d97fe0e23",
            "3249bedc-22e6-42ee-b972-1fc71dd29232",
            "1b966e6f-6c67-4d89-8e28-6cff0bffdba0",
            "ff85b55d-881a-4010-81db-af2debab4599",
            "823fd5ef-37b0-43dc-b2ae-a788705c8375",
            "76a1c989-2017-42a7-8fcf-8dceea5e0a09",
            "2cec3f42-72bb-4dee-a3d7-31b7148074ef",
            "9f96467a-73b1-4629-8e8e-1946cb65d733",
            "10b15e77-84ef-4ea2-9295-d52c4bf610f4",
            "ddcdab8c-893f-4c13-b2b9-1415df2ee6ff",
            "e784c3d4-1a66-477b-8d95-0b9f1d7e6f37",
            "4890ab13-9189-4c5e-92e2-47cddcec63b6",
            "1089d6af-009e-44e3-8663-1c8b0de0d7b4",
            "cc7cf3cc-aa04-445e-b7d8-e031a893c2da",
            "a99e3fe0-b6cf-460c-8b00-b434ba11425d",
            "c33aabef-a3c9-45a9-99d1-1b430f638d6a",
            "68d826d7-a595-45d9-af48-e309d11d8c99",
            "81abbc3c-813b-49fa-aa83-119f8036888d",
            "f070e83c-181b-4a0b-be76-21bbf82234c7",
            "12a7d10b-f45f-4cca-bb60-6e5ca345b085",
            "b63fd0a5-fa49-4ee2-96c0-1e97578712a0",
            "5f86b40d-e850-442e-80ed-5c5fa187ca71",
            "e91fabd9-efd0-493e-838f-fc1c6c1dcd7e",
            "1d3f7853-bebb-466e-853f-b53b6de44e70",
            "1376cd5a-4453-44a6-8ca9-695a65333971",
            "e5c444d3-998d-43d9-9221-a243f741aef2",
            "af471e9d-7c75-4b41-a6a9-4686859f558f",
            "0ec7ed29-bf15-4013-9018-624ccc176f57",
            "4211afd0-b493-4f91-9803-bf29ddd4ca9f",
            "6dc3e503-5bb1-4f46-9fd3-8080fdddb61e",
            "d5a04ad5-e298-4753-ae56-291d1801f78c",
            "e4950a85-6024-44f3-9a3c-58c7a9c4aadf",
            "34221754-25ad-448a-a09a-3139fb087b5c",
            "316b23b5-289d-4e69-9575-21be189acfc4",
            "009ba07e-a7f2-4414-ae87-b26c0b1b1127",
            "8f2b390f-c72b-4336-86e0-6ccd13f17fa8",
            "2daec129-838b-4846-bb5b-a428cdda0de3",
            "bc13d1ca-aef8-4150-b1d9-33162d4f4ea3",
            "32c9ace3-b70a-4263-9fc5-2b49c118c7e0",
            "d9d7cc79-9f9f-4b55-97bf-d01c8ac5dcfb",
            "83820695-24fa-4b5b-9433-4164658dc22d",
            "5e8c7bfc-b542-46b0-a022-f25e45878c9d",
            "46857f0d-7d27-4fce-8bc3-f53b5aa08652",
            "2ab35448-5fab-49b7-8035-1a14e1c1d705",
            "b9ec921a-8e1a-4189-85a2-ead62ac8cda2",
            "4416aa75-08c1-40d9-b64b-425dfc982932",
            "211d0294-dc20-4440-93f0-964a95591ecd",
            "d0b84358-25d0-4616-b376-e990eafdfcc2",
            "758d857e-2e11-4453-8319-fe3a1cacb516",
            "4dd90511-b2d4-4da5-9ee1-01fd2e8eee5a",
            "632382ef-34e5-4edf-9f6a-f2a4ed423b59",
            "3032290d-e60c-47aa-acca-768cc9f0a464",
            "1685f560-4688-47ec-b4e1-26293230ccce",
            "c906f013-ce3e-4e3d-a5d7-6988554ecd21",
            "abe3b666-0425-4bff-8aac-29bfa8a73335",
            "752915e2-d4f7-4bed-a6e9-91522ea6ff54",
            "f0c3a3bb-538d-447e-8c1e-937950fd0d9b",
            "6ce9ffa3-6623-42b3-ad7e-4482876d7c29",
            "2be2d0ef-ace6-41d1-97be-e44db3c05d66",
            "b8f7f32c-93f8-4542-8932-a1e1a591801c",
            "d9b6f4fc-a6d3-431d-9f73-af75ed5dbb54",
            "33e8b83f-89d0-4207-adfa-13e67a1d352b",
            "db3f62ab-4110-45c8-8f40-287dea1fe762",
            "c7753c7f-a20d-48b6-a983-556bb9cc7330",
            "363c6f0d-b327-4923-a649-7760f7567e84",
            "f5f3260d-2a01-4eb1-97f7-acdc74f85865",
            "4bdcb25c-2448-4926-8244-8a502962d76f",
            "61a0c480-8978-4505-9962-1ba46030e463",
            "55b362c3-77b8-4949-9a63-6df8bc89eb70",
            "9fcde6a3-49cb-48a8-a208-38360266f702",
            "e7e9ab71-3db9-440f-a957-a0078c93ce21",
            "1824444e-02e7-4844-a185-b83451bec90a",
            "95bbf8bf-756b-406c-80cf-ea58092fb6e0",
            "4542cb76-61e0-4979-9bd6-af6f21c7adf0",
            "93da201b-6288-4970-8df7-a20579009988",
            "ba608c26-7482-4529-b5cb-1db3f884cd7f",
            "c581dc4d-955a-4ad2-93c3-74f1f23f28b0",
            "548f67e7-877f-4915-8a61-a77eaaca43ac",
            "5ad06f6d-5aab-460b-9902-c350a9541420",
            "ef126b41-fd68-43c4-aedb-dcb7770600eb",
            "ca2d0d33-fca9-45e6-bc9a-8b237215ebb5",
            "64a52b7c-6164-4e6f-9d6a-1d370009a190",
            "c402228d-1488-4235-9135-dd6755c64a9a",
            "5f5c9ee1-03b1-49c4-823d-378d7d6be7a9",
            "ba8d9d20-272c-4226-a98e-39730cc1e8f4",
            "0aed1a6d-a438-4c4e-a927-c4c60fa84f90",
            "dbbdaba5-5a1f-4d55-8ac9-d11886e86214",
            "057f3b6b-18b7-45f9-b5ec-3f5f22e8d36c",
            "e05a7f4a-2b19-4c86-805c-f6561a49fe0b",
            "79dddb0a-b70f-4d07-b003-f8b16f98f9ef",
            "4b668ccc-2663-4a19-beb6-a950647fc22b",
            "753c449c-22ad-4864-9531-77325f0968d9",
            "4b6b0fb1-5ba5-46ef-a60e-94a39372fe13",
            "c6ba2c82-c735-4798-8812-8c92e381e883",
            "587b4b4f-4a6d-4b1a-94fb-cf3f6e0553d7",
            "eee971dd-4e62-4eb5-8847-28c55a7efd80",
            "a4c5b32a-b361-4d63-9df9-36be983d7faa",
            "ab797a56-7b84-43b8-bb49-b0585a782430",
            "224e545b-c612-47c0-8bdd-83fe8a0648d7",
            "d435023f-1ed1-4711-a55b-d2f06982ae28",
            "f413f2f4-ff32-44d0-a9b9-9082091d8383",
            "0485068b-5da1-4ec1-9b5f-bf59fbe9e39e",
            "3539904e-3239-4485-a19e-e994ad3f21ae",
            "1c0b7555-e14a-4cb2-af60-7367036c495d",
            "a4404e7a-02d7-4b0a-990f-99f05c5e02e1",
            "9095cf30-b4db-4a50-84e0-c17febf29e98",
            "dc97c0a9-53d0-40af-a000-df758a34cdcb",
            "0787dcd8-52af-4bdc-bc5e-3ceaed51f427",
            "683cbbbd-ea6b-45f2-8be6-19f57c05fc72",
            "2ff1f0a7-0f89-4baf-9183-d24343efac4a",
            "15728cae-1d9b-4229-bc29-d955e96abe2d",
            "6b0adf74-ff6c-44ea-998d-08bc035753a2",
            "dcf3b505-e309-4d93-8bae-983632a355a4",
            "58eb7252-fe54-432b-8087-46a379aeed93",
            "121dd058-d77b-4900-b697-98239085bc41",
            "68fe4f5b-e2f7-46e5-81fb-fe07033ea937",
            "5a56eed4-6c08-4d94-8d12-3dbc0b2f13a8",
            "a5ef0003-34fe-460c-ab3e-180d13a4e671",
            "6fbe6834-ebff-40a7-af99-60d3d7d91c24",
            "d135efc2-f25b-4cbd-91b4-df126be461e9",
            "18d83a0b-e9d2-4ab9-b5f9-b1e81331263b",
            "9b801d89-e082-4cc7-9990-e3f5d64ac8bd",
            "e972f71d-0f05-4890-bf62-acdc8dd9e3fa",
            "5c7f37e5-0cdd-436e-8e50-c150990741e3",
            "d955564e-4482-4e83-b70f-7a1df478a3fe",
            "9958186a-6444-49b6-be55-64880d890e43",
            "2325e038-cc91-4d4f-a16e-bc90730cb8b0",
            "391eaa86-41d9-4137-be2c-1590c5250c87",
            "a8f63a05-c011-439f-9975-041c993b1dd1",
            "5f332a12-5326-4aff-9c96-7ced110ad45b",
            "0ca6bd30-d49c-4252-9b32-e3cb991b4034",
            "b8bd76d3-cd73-4f2b-b20b-ed797d0427b7",
            "a6750a1a-7b3d-4915-b3b3-ac7f95a9c17c",
            "efd797db-db38-4c17-ae84-dff0fa98b2b2",
            "e92e9bae-1ca5-4434-9cb3-3c994a8dc142",
            "a1accea9-1c2b-473d-b782-be30032125f3",
            "700bc43b-b77f-482e-ba92-b81e1389514a",
            "6aa12511-3409-4698-9f80-ddfc89474042",
            "76c05573-e1b1-4281-987d-307cf2db3873",
            "57ca5d23-edf3-4c61-a985-e49b60adaaa4",
            "23ec40b4-bfe7-452a-afdb-5878ce8f8c89",
            "b2ca8cb4-620c-4fa5-8734-f7c865b83ae4",
            "e0d39d73-4cb1-46fa-91ac-eef24e70be13",
            "5892785a-a365-4b3a-aff9-4345fdaf66fe",
            "b72a35d8-81a7-40f7-a752-6258b60cf55d",
            "5e6213ce-7777-411e-a6ea-96e111e96500",
            "bfc7cd31-8ff1-4af3-8023-b376d162295f",
            "6a4850b6-5a09-45d7-96e5-825cffc2ac1a",
            "f18b3051-17f1-40e1-9c6a-36b5ebe4df5a",
            "ca3c3c18-ff10-4524-938f-9fd72d5ece82",
            "9c87a56c-8c8e-41d4-b69b-8e5d2c83ba03",
            "0799853d-f594-442a-abef-6cf53eb68b86",
            "d6a82502-91f5-472e-9cba-f42ffebe305a",
            "daa5b61b-d717-446e-a9d0-76c142b3c7ba",
            "39a34337-1a51-456d-a639-d9c837f7816f",
            "5038d9ee-6311-48b9-ba99-c851651d3894",
            "9c7c4504-25e7-4088-a25a-de3618e8a1e5",
            "ace82550-2c80-4096-a103-6bece024c236",
            "ab7dffc6-a6ee-45f4-b22d-96495949508e",
            "43bfd15d-0991-448b-a1fb-131e4a6c61e9",
            "a7e751b0-189a-4599-a25f-ebabb0875824",
            "641ea02e-a1c4-4eaf-8ecd-8e7a59db1fa9",
            "dc0d9973-17e4-4562-95de-5dc747697cd2",
            "31f71ec3-2ec5-4457-9056-710df93298ea",
            "7cf76bbb-e4d2-48f1-9708-40d134865fdf",
            "c8babc13-8622-46de-b309-17a502fa19d6",
            "e1df0bad-6764-4ac2-90f8-5db14c18b04f",
            "b74dba4b-525b-4d59-8480-9e95a8f02b65",
            "d9b09259-4d25-4cc0-b975-abaa00e67504",
            "979ae971-fc23-450a-b318-5956fc92de39",
            "410f1f09-6864-4da7-a76c-f4f02bce300b",
            "32f12ace-0616-4cba-b935-166396237069",
            "b3f1a164-496c-4e63-a809-78713b5550f7",
            "24d7a241-a9d2-40c6-9664-d93391417ef6",
            "f36710c1-6fbb-4a07-90a3-f629f49b7d5f",
            "068a3163-b25a-474f-81bd-978f19cddbde",
            "5d6d871b-1911-4bde-9ece-497e75549ffe",
            "f1c2c7a4-3fa2-4f69-90ca-8aa3812ddf86",
            "a32df4c1-5e53-47aa-a305-8b13e3f13ffe",
            "6e4e65d9-a738-494a-9d51-4770eb844869",
            "03ee13f1-509b-411c-bc18-d340ab0ce345",
            "a3d67ee6-4223-4f20-b177-854dbe065a23",
            "022891bb-80d1-46c9-bf15-9889fe2e7244",
            "f56183ee-5cfa-4c62-9468-4cadc406e622",
            "32ae23a9-6310-4d9c-b0f4-97ca6e260b5a",
            "cb82218c-b2b5-4cf2-a829-3c1581de0fe5",
            "2023a926-006b-44ae-a620-9ec9e627fc3e",
            "a1a4e63a-9002-42d3-bc74-3d7af07e2c95",
            "051d312d-63b2-4ee3-962b-c2884cccea52",
            "51f8dfe8-8152-4f7e-83da-8b411342fe35",
            "a5272b77-4917-4708-880a-f06345dde55d",
            "d22331d4-7f88-41ba-8b18-802dc32c7366",
            "45a2f3af-0210-47e2-9e7a-ee71d570ff81",
            "51765e55-f30c-4dcf-881f-d43e40568699",
            "78165c78-c283-4120-bf2a-96cd776c04aa",
            "65640694-d51e-45b2-8674-dfe2137ed55f",
            "b20d47dd-ae1d-4dc1-a97f-6c90d2224499",
            "66381ff2-61ba-48fb-bea5-6d234349c18e",
            "1011064b-3440-47f5-a373-3b83b5918335",
            "5e80135e-5f02-4598-a59d-4ccb54031cc8",
            "f530b7e1-c8da-4dfe-ae58-bc499b5f8171",
            "c00638f3-2c43-4f08-9db5-9a9a88f6b5d3",
            "8a0f7e40-779b-4939-8297-17d5cf616d17",
            "aa3780ce-5ca8-48be-acf9-0927568a1f7e",
            "7a9bd955-0524-4b56-8a74-47df616ecbf7",
            "df6a86de-dbd6-45ce-a6f1-94952076e49c",
            "fa990d4b-c62f-4b5b-ac32-be8aaa9545eb",
            "10f0aa30-e1d2-4a65-abce-7299ebe0e197",
            "07b43572-c95c-4c54-a56e-4e5fa43ae43b",
            "d1f9f792-54c6-4d5d-a5a9-519e6f3bfa1d",
            "013058b6-b545-4a0a-8ba4-9ec78e1e440b",
            "a43fa7e2-6714-4ed2-8a85-d9b5cb0fa640",
            "603d0639-ebd2-4f52-9f10-d998cb339f7e",
            "44dd92c6-147d-494c-bf09-f179488f1447",
            "fa5ab8e7-5786-4b08-ab55-dc41e959587c",
            "ebf41af8-1ab3-40ea-a24d-b266d166e7f5",
            "34ff183e-b389-41b9-aaa9-7c3e7b98413d",
            "e3f02f38-a13c-4527-ae3b-0dc04b8ef34c",
            "48cf7f4d-9e4e-4678-88f3-bb0a412d2e5d",
            "b71154bd-9132-48da-bed2-3571738359c2",
            "02c0179c-7203-48f8-8111-b67b4bb2cf56",
            "8226a7aa-7ce4-428f-8f53-75aaa66d9938",
            "36b95326-b06f-4213-a5da-bbcc297d7766",
            "c94db0b2-73e5-4ebe-a38a-92104ad96016",
            "08e90e4f-b169-4598-901c-a4b39e82bd88",
            "b9189097-e9dc-45a3-a94b-ffe177b3c4ff",
            "ab6a6a18-28f0-45b7-9560-bce3410c040a",
            "0954c9e9-278a-4da0-a064-8370fde56f39",
            "2cfa2199-777d-454e-94d5-ffa1846f8b63",
            "04ae8a7a-46ac-433f-b046-c73d1f2483fc",
            "7476bb3c-39c1-41db-a3ef-daf76b3eff87",
            "7c44586a-e43e-4547-820e-25b23510598d",
            "11ec651f-5c45-4742-ad58-b7f31693b2c0",
            "09c032bb-b659-44fc-b965-1674c189c165",
            "f16d6a0c-f37f-4e70-b1a9-e1e5f15c4520",
            "72b14d30-7e59-4734-a4fe-9b18cdd41a44",
            "f8ab5310-7cfe-4558-b42e-0448931dd1d2",
            "2e34b46a-2d38-493d-860a-4e0f82774e17",
            "f451a1ff-42ea-44d6-8afa-9b7058c79f61",
            "050e0df7-8141-4ba2-959e-28628522ceb0",
            "336e5ade-9612-4fab-9a7d-ac231d3cb35d",
            "2f7f9ebb-4e8f-4d29-9da5-90542ea7ae35",
            "b6db3525-f1f4-4b40-b978-cf99c9eee1c6",
            "fc05ca6a-99c6-45ff-bb7b-2011da78035d",
            "9fc9a567-125e-41ad-a3fe-a9fd9be86be5",
            "9f729f25-d3b0-494f-b86d-633005832f03",
            "0108faab-ffd4-445f-8b74-3d303074a6bb",
            "2c7d4837-ad4c-4fc9-8b22-e862df868cd3",
            "55df3f11-e81f-4368-ad8d-2e4370a58bd9",
            "579cc544-8a3a-4ece-a451-757e2f304786",
            "61a58b0b-4831-4c31-8b60-0e177d05b45e",
            "717fe967-2590-41f4-95d1-ac16ea9722f3",
            "140f94e1-56fe-4264-9a69-5deea522dae5",
            "974829b1-04d0-4f35-a997-c01d5106f5f8",
            "253ded93-65d8-4957-ada0-a22eea72f390",
            "b9eb4098-2e31-472f-ad82-101e97a0eee8",
            "46f83def-8d28-4399-bd92-acb54ba513ea",
            "d6d9a069-dbb8-4c6d-88f8-17d7720bc417",
            "aca72cc6-2cef-4a75-b2ee-000b939dfd38",
            "5f792f17-a80d-454a-9b48-78372026d05e",
            "2e9085f0-0273-45de-acd9-933b505ab723",
            "cbef0c7b-6be9-4421-8cfb-7a7e47ca9207",
            "462e0556-18bc-4e03-a51c-4f7a085a1225",
            "5eebeb78-f82c-4dde-bb14-8574f9b52679",
            "456c541c-9a42-499c-8b72-8c3e4353cdd3",
            "b0deb153-2bff-442f-b969-4ec23e13d122",
            "95c9fcea-c2fd-46d7-8fae-e6e191ec3ae3",
            "ee35add2-c6e1-4365-ae47-11ccb26274a0",
            "d4147e03-9cdb-47fc-bc49-334a27ad293e",
            "232edc33-fffe-4412-a4ea-b2e6fed86659",
            "9a973c0a-ad7e-40d8-bb42-5052f5d2fc55",
            "73b8923c-0879-49ef-bb6d-5e6068f31b2c",
            "630c5bbf-5112-4de2-8660-accf46ead1ee",
            "1ef552b5-40d2-4dbb-afc7-0ccc3761b9d6",
            "fc89219e-b355-4bff-93c2-49d9e71c8858",
            "88846ac1-0fdd-4e2e-8d5c-0781c31b1b03",
            "96183844-f638-4c71-b6d8-db300614cbaf",
            "984f17df-6d0d-4aea-9251-00a3bce88919",
            "53d511d7-4d5c-4760-8eb2-93d4e8f1a293",
            "dded73df-ba92-408b-ba56-d9d62e547fe9",
            "b6a5a42b-faeb-40c7-9848-72a76d5dac88",
            "9acf273c-f5d4-4aca-b9cc-ebde6156cbdf",
            "0ea4f199-2a38-4162-bea6-4f3a50f494ee",
            "79ce024e-1cab-471b-9537-cc88478c7df3",
            "d1f3b63b-70d9-4e29-a87e-60d527165beb",
            "bbf2e14d-1bc2-41ff-9449-e7b32a56a544",
            "67828d27-1bf0-4b9e-9806-c0e51d76db9b",
            "2371ca09-2ace-410c-a931-deca2bc90bc1",
            "b1e51542-119e-4d83-a6b4-de5b7fe7c89b",
            "0e6d2a1e-7cd6-49a1-9590-fcaa7aa0a051",
            "e8d9c059-ba24-4fa1-852f-244ddf0ce420",
            "eaafbbcd-a11a-4f0f-8baf-9b66339bfb51",
            "6def98f6-309f-4d21-a94d-f39ce8ada341",
            "e1a5bade-59a5-4607-8db9-2279a231c178",
            "3a22cdda-e4d7-4b2f-9e28-d24a3d9c8ad8",
            "91ee3082-dfde-480d-9977-90cd247c220d",
            "be408e65-42a1-4db2-9f72-590fb286ad80",
            "cc11c898-3b16-4b46-ab0a-2cb244665d43",
            "e40f4ba5-bdce-4bac-a893-f62ac9fc24f9",
            "375dc3ea-6142-4dd7-8e98-d8eb2fc61f86",
            "83eb2fa2-41c0-431b-a4ba-db3aba277f04",
            "f033a2d5-2209-40d0-ad4f-17c63ea70baa",
            "4b21bab9-ef58-4b22-826f-a21cd1e25bac",
            "aa1faab2-3873-46c1-abcb-2ba99589c784",
            "7319837b-9a6e-4b27-b5b7-cbe9e484b58b",
            "c76047cb-c0d1-415b-8788-9ec06379aeb0",
            "3414d143-21ac-4257-966d-814ed0def85c",
            "db5f747d-d068-4163-a20b-0b7f8e96de6d",
            "452205dc-02c1-4f64-a338-b3ff368e9d54",
            "9e7cf426-7619-43ed-8646-6856b432adbf",
            "db2220e2-a6bf-4a7a-a190-48f1283306d6",
            "93c16c1f-a559-49ad-bd0b-2084893bb819",
            "18dd6e6c-636a-402f-8677-7b1f45e05813",
            "99d26ab7-0bdc-40e7-8a9e-3634d4a78780",
            "949faecf-9b85-4a52-a100-d1806e3ce657",
            "6ac8bc69-df24-497e-9066-63c269ce4989",
            "a3fad8e9-dfeb-47e6-8122-0d2125f3a460",
            "bf219fd9-5ccb-475b-8eae-2af2a36d8e67",
            "7d9cf813-1903-41a5-85d7-0b8e724170de",
            "59f784d7-495e-4ae5-b27e-eee801949967",
            "07542628-a102-4f78-9692-014f6e5a762b",
            "377cc5c0-ec0a-4ced-817b-8b19acbf5799",
            "b0bcc8c1-07b9-4fa9-8f51-c2ee558cec72",
            "7ebfd9d2-96a6-4229-acc5-66b5c76ae897",
            "9d2039ba-f5f9-4069-9c92-f40520c45dda",
            "a95717cf-ad38-49a5-b463-b983927ab00c",
            "d03dc4d9-b31a-46bd-bc88-d5036b18afbc",
            "51830bce-55e4-4ea0-923d-923266f36510",
            "c7135c08-c6bb-4bfb-9ad1-37d8c2e93f2e",
            "cbbeb730-8be9-4a84-843a-9fcbbe677c27",
            "2c79c4c7-5ef8-413a-a46b-24f459e81808",
            "d6276203-1fc2-4b4f-a869-c9849b274cf8",
            "c6406b6e-e5dd-4675-9f75-d6343d64cd85",
            "a2cc9c45-f91a-4dda-a028-e093f2ea90c9",
            "eea805b2-14e3-49e1-bbd9-d8e08fb3294e",
            "f27afa26-061b-4bda-9ded-df4f5bfada82",
            "8db952b9-0376-4967-8a43-5f0ec5cc1bd3",
            "273c280b-e04e-4eea-812d-5bdf2d3c1b19",
            "03029c08-82fb-43ef-bc37-8d98583f6d32",
            "1e719e4e-96da-40af-9688-c8a46694bb9c",
            "2554539d-38b0-4ccb-8d9c-ce7a9f097440",
            "04719db8-11d7-4b69-b233-afa62f1f628a",
            "d583af3e-348b-4e53-97dd-a422934a0ca8",
            "dd65c7b7-1374-457e-9945-9a92eabd0471",
            "76b78bb0-7898-4b54-a8ae-8527ead1fa6d",
            "78473961-b1a4-43d0-bdfb-b1f7905b8598",
            "66874788-101a-4fed-afac-326dc5626b45",
            "d2562bd1-1b44-45cc-925b-4afcd2a189ea",
            "164c59ab-416b-4ba4-a20c-e3a4b3d3dc0f",
            "66c247c5-b7e2-468b-a1f3-21a0fac36576",
            "50e987a2-f1a7-4650-9c72-04c41edae90c"
          ],
          "failures": [
            "d1570867-2fc8-4bc2-aad3-a94d6895002c",
            "cbd5f1cd-ee41-4ee0-af94-6514de2da790",
            "d2e2f849-63cd-4b27-8b6a-49a030a384dc",
            "a5d72bb4-7daa-4bac-ab70-37f1d467b291",
            "684f40d6-c474-4398-8271-f6841518ad88",
            "593a6673-93f8-474d-bdd8-bc114190bd67",
            "3995b39f-fc9a-4399-bfc8-24a55d8a2ae0",
            "b3ef5e75-7aed-4431-a614-326fcdd13795",
            "4d0fe92e-0400-4bb3-8ef3-bde60c7fd104",
            "c035b3b3-fb2a-455e-8721-8add6ce16f12",
            "c83db93a-b343-4dcc-b99f-aaec1f843d6a",
            "291b0b25-b770-4ef5-ba49-992ba14a3ba7",
            "a01b2d01-0ae7-4f01-95c5-52a95e0e6792",
            "a159a690-d224-4597-aed0-3932c0787d6e",
            "5ce496dd-dc22-4a70-9025-33aad12897df",
            "eb9c6cde-034b-4e51-9a72-ea037f3bc73e",
            "0c2817c4-9be9-4a87-ad1c-0edda9541e68",
            "351fe875-e3b5-4b7e-ab35-c35a208462b6",
            "92cad702-7fe2-461b-b249-d3376073aa6e",
            "382d46f3-61e7-4c53-a229-17cdf9f10aff",
            "f7e1f2d6-8763-490a-b8a7-e4651154c770",
            "62f06079-784f-415f-9d04-9e53f9152ce4",
            "b6470845-95d6-4654-9064-0f30122cf4df",
            "54d10181-a654-4c3f-b643-54ea8f366113",
            "0821d9c2-6e74-47f4-90cf-16c28a8b60f1",
            "d903cf39-b005-47f1-a7bb-b560bbb63517",
            "b0363806-6a38-4d0b-91cb-62455bb67015",
            "ac7ec447-cd3c-4bcb-94af-3ad49b72f10b",
            "b6465886-c5b7-41fd-be65-dae42212311b",
            "b30982cd-28f3-43a1-8342-bf851027125f",
            "b53bc311-5172-4713-b4f0-a0791db0782f",
            "f6cdae13-30d6-4d11-a05f-00505e028f7f",
            "92eca8a1-1a92-4d7f-844d-0d4e45d4d980",
            "e385d9ea-9446-4286-a70e-f60300f16eda",
            "ca785910-3292-4cda-bff0-35f61050abc0",
            "61014f0c-a9f9-4337-b4fd-ff952a4c408c",
            "97bc8f9b-084f-4f58-a364-22b4e125a1e5",
            "96382cc9-f09e-4155-82c0-4e01d76e0627",
            "11e06965-40e7-488a-852d-08989ace9473",
            "9333a56c-c2b1-473b-a8e7-818a9860592b",
            "739e771f-0aaf-4f33-8846-f0d7fd5348f7",
            "cbd9f790-b169-49a8-8961-8f00ed09fea0",
            "085c7dfc-9ab5-487e-ac8e-09f12a6a0135",
            "f6239646-a83a-48b8-a65e-134f2058453a",
            "a09e807f-118e-4097-805c-a8ff7dfcb72b",
            "c835b891-62ec-435d-a0d4-ad005c33accd",
            "e6c146e6-b101-4d41-b5f1-cbedbc787eb6",
            "9d7ef8f4-13b6-4a37-b1be-321fc1845b10",
            "c00a4930-396e-47ae-bdd3-c46e248b629e",
            "d62ae9ce-bbf3-483c-83f0-7b60ae0b82ab",
            "68975bb3-2ca2-465f-ab46-c7bea23346e3",
            "61c64f04-82ea-407b-8a50-a84cc2d7aa6d",
            "87031b80-7ea3-426b-902d-11034e7bd478",
            "1359efdb-f755-44e0-a81f-9893fae844b6",
            "5fa9f843-293d-48a9-9eed-2e70fc2a223e",
            "91468910-d1f2-4ca9-ae13-e8813d7dca4b",
            "eee995ba-a008-4c28-bfbc-47a988543c40",
            "b37ef767-4041-4909-b760-cda5b214e162",
            "afc15d5a-f499-4ceb-a747-fc409ffb7bae",
            "5fbf604e-0432-47b8-b67d-d2fe0e05dca7",
            "866cd56a-5fd3-4e1c-badb-e9be7e8487df",
            "37f0c3f9-9813-43d7-afc4-f7ee363912d6",
            "a2833511-ae07-4b30-b989-4c85865b5968",
            "649a82df-5ff2-4ffb-8dcf-31e4ef90d19a",
            "0673ed0f-1325-41a7-b35b-884ef1ccfb67",
            "f90f7a7b-5fbd-480e-94d0-fff281fdaf5d",
            "bcbef4cf-74d3-4a7b-9a91-027f4eea071a",
            "8b300f00-9d00-4106-aa7e-4fddf4971a32",
            "8ce5056c-8797-4579-960e-f720f62b9d54",
            "a9861700-7586-45c3-aace-8b5b32aecad7",
            "52bb43b2-646b-4a2f-be63-41eb14fdc218",
            "9961d77b-5373-45e1-bb38-e48a3354b697",
            "9c98c2af-d72e-4e01-ac9c-e04b030da88a",
            "e42ecac2-534a-4a17-a6e5-ca6726e171e6",
            "c84c31f9-1eee-46f0-867d-c60af0d1b484",
            "52693872-7100-4471-bb1b-6c50a945096a",
            "07d4c896-e213-4514-a60d-5540498792fb",
            "5abc2d87-3552-4218-9da6-072b6cde24f1",
            "8f709562-b46b-455a-9f33-bf38201f2be9",
            "22a67ed1-1a78-4eda-848d-eb335b67390e",
            "80c578c9-0aac-4aec-8eed-7bf2172e6751",
            "e2e25d6f-b7ee-4dd7-a804-d6be633158b7",
            "924c982c-d61d-4857-bb83-5c384c960955",
            "f7ba7041-d534-4b08-b691-55b8098aa4e4",
            "4d1a5b6f-37a6-4aaa-8130-f180806444b4",
            "3e0cf7e5-3b0c-4a0a-b43f-e7e147b24351",
            "5d3f0426-8322-4a03-b94c-493892c13dfc",
            "96de733b-7fc0-486c-a860-384732d19475",
            "92447ee7-7010-41ac-8b11-ba7a2dc322cd",
            "c4e3e3fc-112e-4980-a95a-6ac2cf423f5a",
            "8e7b7525-37ef-4935-ac1b-f02df820a92b",
            "1d2bb562-371d-4632-9abf-e0b0e1395232",
            "36837059-5909-43e3-9cb9-5424a43abe7f",
            "e2a4d2a5-3d68-46e3-88e2-77c7aae7f709",
            "a2ba2edd-cd97-4d69-8f66-1a6b73307095",
            "353a0a5d-9b94-44f7-8521-00ebddd83fd4",
            "64773a7f-ade9-488a-96e4-4a1033a14763",
            "b4f87f3d-08fe-4c3a-9aba-58e7632eb015",
            "b54ad874-c12d-4c66-b8b0-c3d0dd31867c",
            "c22f92aa-c6b3-4650-b052-d421d73545b0",
            "534ada0e-d61c-462c-bda4-b3dc428229a1",
            "5cb2e138-bf50-45dd-877f-1090608c2f98",
            "d5c39d38-a8f2-4352-b0db-a978143a6697",
            "b8963894-3f51-4c1b-a64a-1396ac8b9b0c",
            "b4e0cd7d-c3d0-43a2-84be-3bafa7ce397a",
            "1d1286e4-2d65-4e45-8505-e93b7be08d71",
            "98a3ba37-5610-4bc9-abc0-63bb6e6b59f6",
            "0db6124f-b387-42fc-997d-c1589f1e2023",
            "3c8ffc09-c4ee-4642-9c42-46758e598288",
            "7412139f-58cd-4261-b8e5-39416bb38d36",
            "87e1570e-82cd-41f5-90a3-7dac9a4f9cfa",
            "fe8fe8b4-eae2-4cd3-a1bb-87f180e7146d",
            "2804931e-b446-4fcc-8919-bb3aa3e62e82",
            "268a8027-5945-44bd-98c8-4cde06e1801f",
            "f0f26736-f1fa-4efb-aa72-9351b0a45b67",
            "e79d8fbc-0d0a-482c-b4c3-b71f51c71ec0",
            "f820c71c-369e-4df4-a56c-213cf6d0ebd7",
            "d92c8476-c2df-490a-b626-f6debb0a4a2f",
            "f9f85340-46c8-4620-922e-3eacb25aef02",
            "3c846046-4840-4eff-beb6-828c8c2fa0b7",
            "a48cd8ce-569b-4ee6-bc5f-df03977c9d81",
            "897c7434-1a0a-4c05-90a5-6d2d0e54fc30",
            "44f7c82f-6ce8-4b7a-9f28-57950a432fb2",
            "55728eb3-2d8d-4adf-b2e0-e089cf3c3105",
            "f4255459-5497-4eba-a5ca-683de596d2da",
            "9be17de1-a340-40e7-88f4-90e8a6388fe0",
            "b12b2dd3-1890-4e07-98aa-c1871857672f",
            "486797c0-2c7c-4bdd-89ef-f3e20c938af0",
            "1538d4c7-8fc0-4260-be8e-60eda962e7e7",
            "d193289e-b161-48b9-833b-d7326f08cf24",
            "2071a8ef-8295-4666-a3dd-b45c73c1ac28",
            "a7f07131-2c81-4e0c-8818-517a31b4d039",
            "a52d9853-1726-438e-ad80-6d80f04ecca8",
            "d61b02a2-b450-4bab-bcaf-eac22fc95dff",
            "c0c86c36-ade9-4707-accd-9f8b1b1da620",
            "109df07d-1302-43f1-be58-7d3e0ff18c6b",
            "d20c2939-503c-451c-bcb4-79e46cad83d8",
            "82c7f6b4-4f36-4472-87a6-422bd1e01b0f",
            "4edb6942-9798-4ca6-b526-6c97862b01f1",
            "17318596-8ab0-47d0-8f98-bdad7ea00cc8",
            "0a0cb97a-e9a9-402d-b88c-8c3a229e856c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5933338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "522c8139-0f4d-4aa0-a62f-ad698ce1a9f3",
          "title": "sample test",
          "fullFile": "/usr/src/app/test/puppeteer-mocha-basic.js",
          "file": "/test/puppeteer-mocha-basic.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "helloworld",
              "fullTitle": "sample test helloworld",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const browser = await puppeteer.connect({\n  browserWSEndpoint: `ws://browserless_engine:3000/?hello=world`,\n  ignoreHTTPSErrors: true,\n});\npage = await browser.newPage();\n// await page.goto('http://192.168.10.180:5500');\n// const [p_target_user] = await page.$x(`//p[contains(., '345')]`);\nawait page.close();",
              "err": {},
              "uuid": "644ae147-56c7-4ab0-95e1-ec6ffd015a2d",
              "parentUUID": "522c8139-0f4d-4aa0-a62f-ad698ce1a9f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "644ae147-56c7-4ab0-95e1-ec6ffd015a2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "output": "report.html"
      },
      "version": "6.2.0"
    }
  }
}